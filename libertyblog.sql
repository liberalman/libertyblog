-- MySQL dump 10.14  Distrib 5.5.52-MariaDB, for Linux (x86_64)
--
-- Host: localhost    Database: libertyblog
-- ------------------------------------------------------
-- Server version	5.7.18

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `tb_album`
--

DROP TABLE IF EXISTS `tb_album`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_album` (
  `id` mediumint(8) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL COMMENT '相册名称',
  `cover` varchar(70) NOT NULL COMMENT '相册封面',
  `posttime` datetime NOT NULL,
  `ishide` tinyint(1) NOT NULL,
  `rank` tinyint(3) NOT NULL DEFAULT '0',
  `photonum` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_album`
--

LOCK TABLES `tb_album` WRITE;
/*!40000 ALTER TABLE `tb_album` DISABLE KEYS */;
INSERT INTO `tb_album` VALUES (14,'风光','/static/upload/smallpic/20151008/1444235608574745200.jpg','2015-10-07 16:33:49',0,1,2);
/*!40000 ALTER TABLE `tb_album` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `tb_article`
--

DROP TABLE IF EXISTS `tb_article`;
/*!50001 DROP VIEW IF EXISTS `tb_article`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `tb_article` (
  `username` tinyint NOT NULL,
  `id` tinyint NOT NULL,
  `userid` tinyint NOT NULL,
  `title` tinyint NOT NULL,
  `digest` tinyint NOT NULL,
  `color` tinyint NOT NULL,
  `urlname` tinyint NOT NULL,
  `urltype` tinyint NOT NULL,
  `content` tinyint NOT NULL,
  `tags` tinyint NOT NULL,
  `views` tinyint NOT NULL,
  `status` tinyint NOT NULL,
  `posttime` tinyint NOT NULL,
  `updated` tinyint NOT NULL,
  `istop` tinyint NOT NULL,
  `coverurl` tinyint NOT NULL,
  `pubtype` tinyint NOT NULL,
  `reprinturl` tinyint NOT NULL,
  `avatarurl` tinyint NOT NULL
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `tb_comments`
--

DROP TABLE IF EXISTS `tb_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_comments` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT COMMENT '评论id',
  `user_id` int(11) unsigned DEFAULT '0' COMMENT '用户id',
  `ref_comm_id` mediumint(9) unsigned DEFAULT NULL COMMENT '引用评论的id，引用的是本表的其他评论的id，作为对其评论的回复。默认为空，比如第一条评论就没有引用的评论。',
  `article_id` mediumint(8) unsigned DEFAULT '0' COMMENT '文章id，表示该评论是哪个文章下的评论。',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `content` varchar(255) DEFAULT NULL COMMENT '评论内容',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_comments`
--

LOCK TABLES `tb_comments` WRITE;
/*!40000 ALTER TABLE `tb_comments` DISABLE KEYS */;
/*!40000 ALTER TABLE `tb_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_history`
--

DROP TABLE IF EXISTS `tb_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_history` (
  `id` mediumint(9) unsigned NOT NULL AUTO_INCREMENT COMMENT '历史足迹id',
  `userid` mediumint(9) unsigned DEFAULT '0' COMMENT '用户id',
  `dotime` datetime NOT NULL COMMENT '足迹时间',
  `title` varchar(128) CHARACTER SET utf8 DEFAULT NULL COMMENT '标题',
  `content` mediumtext CHARACTER SET utf8 COMMENT '内容',
  `pos` tinyint(4) DEFAULT '0' COMMENT '0 在时间轴左边 1 在时间轴右边',
  `icosty` tinyint(4) DEFAULT '0' COMMENT '0 1 2 3',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=51 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_history`
--

LOCK TABLES `tb_history` WRITE;
/*!40000 ALTER TABLE `tb_history` DISABLE KEYS */;
INSERT INTO `tb_history` VALUES (1,1,'2015-10-08 16:40:51','开天辟地','今天是本站建立的日子，于本人而言犹如盘古开天地而主万物。我终于有了自己的个人网站了！本来早3年都可以做的事情，为什么要拖到现在，打死拖延症！域名暂不可用，先用公司域名，或者直接访问服务器的方式！',1,1),(2,1,'2016-08-09 22:31:57','手机版上线','今天，手机版上线。采用手机和PC端引导访问不同的路由的方式，选取各种的模板来实现各自风格的效果。',0,0),(3,1,'2016-08-10 00:20:20','第一个评论用户','接入\"多说 - 社交评论插件\"，迎来本站史上第一位\"评论用户\"，本人QQ好友的\"@新月\"，Thanks支持。',1,4),(8,1,'2016-08-11 00:32:06','接入 sphinx - 基于SQL的全文检索引擎','接入\"接入 sphinx - 基于SQL的全文检索引擎\"，这玩意果然牛逼，从此摆脱使用SQL模糊查询的时代，说不定还可以做一个搜索引擎出来呢！',0,2),(9,1,'2016-08-15 00:33:07','引入QQ登录','目前还没和我的账户系统做绑定逻辑.',1,3),(10,1,'2016-08-16 00:54:49','历史足迹-完成40%','历史足迹板块，第一阶段完成了个人的 查/曾，还差 删/改 功能，占总功能50%；第二阶段是完成超级管理员对所有人历史足迹的管理，占总功能50%！',1,0),(44,1,'2016-08-16 19:52:12','第一个注册用户','今天迎来本站第一个注册用户，通过qq第三方登录注册的，welcome @新月 ！',0,4),(47,1,'2016-03-28 16:35:50','liberalman.cn通过备案','liberalman.cn域名通过了阿里云备案审核，终于可以指向我的服务器了，开始对外提供网站服务！',0,4),(48,1,'2016-08-17 17:35:28','历史足迹完成','历史足迹删改查功能也完成',1,1),(50,1,'2017-07-21 22:24:13','完成往markdown编辑器中添加mermaid插件的工作','editor.md这个工具可惜不支持mermaid插件，要知道这个插件可以画各种复杂的图，不支持真是太可惜了，花了1天时间搞定，yes！',0,2);
/*!40000 ALTER TABLE `tb_history` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_link`
--

DROP TABLE IF EXISTS `tb_link`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_link` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `sitename` varchar(80) NOT NULL DEFAULT '' COMMENT '网站名字',
  `url` varchar(200) NOT NULL DEFAULT '' COMMENT '友链URL地址',
  `rank` tinyint(4) NOT NULL DEFAULT '0' COMMENT '排序值',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_link`
--

LOCK TABLES `tb_link` WRITE;
/*!40000 ALTER TABLE `tb_link` DISABLE KEYS */;
INSERT INTO `tb_link` VALUES (1,'云卷云舒','http://www.doubleliu.com',0),(3,'首超的CSDN博客','http://blog.csdn.net/socho',1);
/*!40000 ALTER TABLE `tb_link` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_mood`
--

DROP TABLE IF EXISTS `tb_mood`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_mood` (
  `id` mediumint(8) NOT NULL AUTO_INCREMENT,
  `content` text NOT NULL,
  `cover` varchar(70) NOT NULL DEFAULT '/static/upload/defaultcover.png' COMMENT '说说图片',
  `posttime` datetime DEFAULT NULL COMMENT '发布时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_mood`
--

LOCK TABLES `tb_mood` WRITE;
/*!40000 ALTER TABLE `tb_mood` DISABLE KEYS */;
INSERT INTO `tb_mood` VALUES (15,'<p>今天好开心的说哦</p>','http://p7.qhimg.com/t01cd396814812f35a4.jpg','2015-10-07 16:36:04');
/*!40000 ALTER TABLE `tb_mood` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_option`
--

DROP TABLE IF EXISTS `tb_option`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_option` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL DEFAULT '',
  `value` text NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_option`
--

LOCK TABLES `tb_option` WRITE;
/*!40000 ALTER TABLE `tb_option` DISABLE KEYS */;
INSERT INTO `tb_option` VALUES (1,'sitename','LIBERALMAN-郑首超'),(2,'siteurl','http://www.liberalman.cn'),(3,'subtitle','愚昧是产生专治的唯一土壤，我扫的就是愚昧！'),(4,'pagesize','10'),(5,'keywords','郑首超 编程技术 c c++ Golang Go语言 mysql java php 算法 数据结构 比特币 CTO 首席架构师'),(6,'description','来一场说走就走的旅行'),(8,'theme','lofter'),(9,'timezone','8'),(10,'stat','<script>\r\nvar _hmt = _hmt || [];\r\n(function() {\r\n  var hm = document.createElement(\"script\");\r\n  hm.src = \"https://hm.baidu.com/hm.js?46997df5afdc30f3c41027bbda9409a4\";\r\n  var s = document.getElementsByTagName(\"script\")[0]; \r\n  s.parentNode.insertBefore(hm, s);\r\n})();\r\n</script>\r\n\r\n\r\n'),(11,'weibo','http://weibo.com/u/2000465995'),(12,'github','https://github.com/liberalman/libertylog'),(16,'duoshuo','liberalman'),(17,'albumsize','9'),(18,'nickname','自由人 - LIBERALMAN'),(19,'icp','京ICP备16013925号');
/*!40000 ALTER TABLE `tb_option` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_photo`
--

DROP TABLE IF EXISTS `tb_photo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_photo` (
  `id` mediumint(8) NOT NULL AUTO_INCREMENT,
  `albumid` mediumint(8) NOT NULL COMMENT '所属相册ID',
  `des` varchar(100) NOT NULL COMMENT '照片描述',
  `posttime` datetime NOT NULL COMMENT '上传时间',
  `url` varchar(70) NOT NULL COMMENT '照片URL地址',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=264 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_photo`
--

LOCK TABLES `tb_photo` WRITE;
/*!40000 ALTER TABLE `tb_photo` DISABLE KEYS */;
INSERT INTO `tb_photo` VALUES (262,14,'QQ图片20151007003846.jpg','2015-10-07 17:15:07','/static/upload/bigpic/20151008/1444238106613624800.jpg'),(263,14,'一个冰火粉丝Po的一张图：每当看到一个角色死掉时，他就会用便签纸做一个记号。5本书看完之后，就变成了这样~.jpg','2015-10-07 17:15:56','/static/upload/bigpic/20151008/1444238156369470700.jpg');
/*!40000 ALTER TABLE `tb_photo` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`socho`@`%`*/ /*!50003 TRIGGER `InsertPhoto` AFTER INSERT ON `tb_photo` FOR EACH ROW update tb_album set photonum=photonum+1 where id = new.albumid */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `tb_post`
--

DROP TABLE IF EXISTS `tb_post`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_post` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `userid` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT '用户id',
  `title` varchar(100) NOT NULL DEFAULT '' COMMENT '标题',
  `digest` varchar(255) CHARACTER SET utf8mb4 DEFAULT '' COMMENT '文摘',
  `color` varchar(7) NOT NULL DEFAULT '' COMMENT '标题颜色',
  `urlname` varchar(100) NOT NULL DEFAULT '' COMMENT 'url名',
  `urltype` tinyint(3) NOT NULL DEFAULT '0' COMMENT 'url访问形式',
  `content` mediumtext NOT NULL COMMENT '内容',
  `tags` varchar(100) NOT NULL DEFAULT '' COMMENT '标签',
  `views` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT '查看次数',
  `status` tinyint(1) NOT NULL DEFAULT '0' COMMENT '状态{0:正常,1:草稿,2:回收站}',
  `posttime` datetime DEFAULT NULL COMMENT '发布时间',
  `updated` datetime DEFAULT NULL COMMENT '更新时间',
  `istop` tinyint(3) NOT NULL DEFAULT '0' COMMENT '是否置顶',
  `coverurl` varchar(255) DEFAULT NULL COMMENT '文章封面',
  `pubtype` tinyint(4) DEFAULT '0' COMMENT '发布类型 0原创 1转载',
  `reprinturl` varchar(128) DEFAULT NULL COMMENT '从何处转载的地址地址，pubtype=1的时候生效',
  PRIMARY KEY (`id`),
  KEY `userid` (`userid`),
  KEY `posttime` (`posttime`),
  KEY `urlname` (`urlname`)
) ENGINE=InnoDB AUTO_INCREMENT=117 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_post`
--

LOCK TABLES `tb_post` WRITE;
/*!40000 ALTER TABLE `tb_post` DISABLE KEYS */;
INSERT INTO `tb_post` VALUES (14,1,'中国人为什么不讲诚信？','为什么中国人不讲诚信呢？\r\n\r\n早在春秋战国，儒家就发现了这个问题，所以他们干脆利索的，反对诚信。','','',0,'中国人为什么不讲诚信？\r\n\r\n文：雾满拦江\r\n\r\n（01）\r\n\r\n我有个朋友，是画家。\r\n\r\n她有个朋友，也是画家，最近从丽江回来，归来空空的行囊，满身是伤，心已憔悴。\r\n\r\n丽江归来的女画家，是个雄心勃勃的女生，几年前她背着行囊到丽江，以20年的租期，租下一简陋贫寒农家院，而后艺术设计，改造，工艺美化，加盖了一排极具乡间风情的房间，开始经营她的小客栈。当时，如她这样的文艺女青年有许多，就这样几年下来，终于打出了丽江旅游的文化品牌。\r\n\r\n品牌效应是无敌的，第一个上门的是房东，一改此前的憨厚纯朴，开口就要改合同，涨房租。\r\n\r\n涨就涨吧，可房东一口价，就长到把她客栈利润吞光光的地步，还不许讨价还价。不答应？嘿，房东正等着你的不答应呢，随后就是无休止的上门骚扰，寻衅，辱骂，泼粪，甚至殴打，夜晚时在窗外弄出极恐怖的动静。\r\n\r\n她说：官司在打，但赢的希望不大。\r\n\r\n甚至有媒体的帮助，也是枉然。\r\n\r\n就算赢，也已经被折腾的心力交瘁，支撑不下去了。\r\n\r\n她说，这已经是她第三次遭遇这种事了。第一次，是在798，第二次，是在宋庄。每次做的事业类型都不一样，但结局一样。都是品牌效果一出来，昔日闷憨的房东，就立即变了嘴脸，她说她现在再也不敢相信合同了。\r\n\r\n只因为，她遇到的中国人，都不讲诚信。\r\n\r\n（02）\r\n\r\n陈志武教授以前有过一个讲话，大意是，中国人为何勤劳而不能致富？\r\n\r\n解释是：因为中国社会，缺乏诚信意识。不讲诚信，做生意就艰难了，生意双方会为货到货款，还是款到付货，争得不可开交，谁也不相信谁，轻信就会吃大亏。\r\n\r\n因为环境中缺乏诚信因素与契约要义，商业国家五秒钟做成的生意，在中国要忙活好几年。要把大单拆分成无数小单，一点一点的测试合作伙伴，哪怕是合作几十年的朋友，也放心不下。所以中国人忙得团团乱转，一年到头操劳奔波，全部心思都用在避免吃亏上当方面，实际上是在为不健康的环境埋单。\r\n\r\n为什么中国人不讲诚信呢？\r\n\r\n早在春秋战国，儒家就发现了这个问题，所以他们干脆利索的，反对诚信。 ',',思想,',114,0,'2015-10-11 16:55:21','2017-07-25 13:06:31',0,'',0,NULL),(15,1,'兼爱(上)','圣人以治天下为事者也，必知乱之所自起，焉能治之；不知乱之所自起，则不能治。譬之如医之攻人之疾者然：必知疾之所自起，焉能攻之；不知疾之所自起，则弗能攻。治乱者何独不然？必知乱之所自起，焉能治之；不知乱之斯自起，则弗能治。圣人以治天下为事者也，不可不察乱之所自起。','','',0,'原文\r\n\r\n　　圣人以治天下为事者也，必知乱之所自起，焉能治之；不知乱之所自起，则不能治。譬之如医之攻人之疾者然：必知疾之所自起，焉能攻之；不知疾之所自起，则弗能攻。治乱者何独不然？必知乱之所自起，焉能治之；不知乱之斯自起，则弗能治。圣人以治天下为事者也，不可不察乱之所自起。\r\n\r\n\r\n\r\n　　当察乱何自起？起不相爱。臣子之不孝君父，所谓乱也。子自爱，不爱父，故亏父而自利；弟自爱，不爱兄，故亏兄而自利；臣自爱，不爱君，故亏君而自利，此所谓乱也。虽父之不慈子，兄之不慈弟，君之不慈臣，此亦天下之所谓乱也。父自爱也，不爱子，故亏子而自利；兄自爱也，不爱弟，故亏弟而自利；君自爱也，不爱臣，故亏臣而自利。是何也？皆起不相爱。\r\n\r\n\r\n\r\n　　虽至天下之为盗贼者亦然：盗爱其室，不爱其异室，故窃异室以利其室。贼爱其身，不爱人，故贼人以利其身。此何也？皆起不相爱。虽至大夫之相乱家，诸侯之相攻国者亦然：大夫各爱其家，不爱异家，故乱异家以利其家。诸侯各爱其国，不爱异国，故攻异国以利其国，天下之乱物，具此而巳矣。察此何自起？皆起不相爱。\r\n\r\n\r\n\r\n　　若使天下兼相爱，爱人若爱其身，犹有不孝者乎？视父兄与君若其身，恶施不孝？犹有不慈者乎？视弟子与臣若其身，恶施不慈？故不孝不慈亡有。犹有盗贼乎？故视人之室若其室，谁窃？视人身若其身，谁贼？故盗贼亡有。犹有大夫之相乱家、诸侯之相攻国者乎？视人家若其家，谁乱？视人国若其国，谁攻？故大夫之相乱家、诸侯之相攻国者亡有。若使天下兼相爱，国与国不相攻，家与家不相乱，盗贼无有，君臣父子皆能孝慈，若此，则天下治。\r\n\r\n\r\n\r\n　　故圣人以治天下为事者，恶得不禁恶而劝爱？故天下兼相爱则治，交相恶则乱。故子墨子曰：“不可以不劝爱人者，此也。”\r\n\r\n\r\n\r\n\r\n\r\n译文\r\n\r\n　　圣人是以治理天下为职业的人，必须知道混乱从哪里产生，才能对它进行治理。如果不知道混乱从哪里产生，就不能进行治理。这就好像医生给人治病一样，必须知道疾病产生的根源，才能进行医治。如果不知道疾病产生的根源，就不能医治。治理混乱又何尝不是这样，必须知道混乱产生的根源，才能进行治理。如果不知道混乱产生的根源，就不能治理。圣人是以治理天下为职业的人，不可不考察混乱产生的根源。\r\n\r\n\r\n\r\n　　试考察混乱从哪里产生呢？起于人与人不相爱。臣与子不孝敬君和父，就是所谓乱。儿子爱自己而不爱父亲，因而损害父亲以自利；弟弟爱自己而不爱兄长，因而损害兄长以自利；臣下爱自己而不爱君上，因而损害君上以自利，这就是所谓混乱。反过来，即使父亲不慈爱儿子，兄长不慈爱弟弟，君上不慈爱臣下，这也是天下的所谓混乱。父亲爱自己而不爱儿子，所以损害儿子以自利；兄长爱自己而不爱弟弟，所以损害弟弟以自利；君上爱自己\r\n\r\n\r\n\r\n　　而不爱臣下，所以损害臣下以自利。这是为什么呢？都是起于不相爱。\r\n\r\n\r\n\r\n　　即使在天底下做盗贼的人，也是这样。盗贼只爱自己的家，不爱别人的家，所以盗窃别人的家以利自己的家；盗贼只爱自身，不爱别人，所以残害别人以利自己。这是什么原因呢？都起于不相爱。\r\n\r\n\r\n\r\n　　即使大夫相互侵扰家族，诸侯相互攻伐封国，也是这样。大夫各自爱他自己的家族，不爱别人的家族，所以侵扰别人的家族以利他自己的家族；诸侯各自爱他自己的国家，不爱别人的国家，所以攻伐别人的国家以利他自己的国家。天下的乱事，全部都具备在这里了。细察它从哪里产生呢？都起于不相爱。\r\n\r\n\r\n\r\n　　假若天下都能相亲相爱，爱别人就象爱自己，还能有不孝的吗？看待父亲、兄弟和君上象自己一样，怎么会做出不孝的事呢？还会有不慈爱的吗？看待弟弟、儿子与臣下象自己一样，怎么会做出不慈的事呢？所以不孝不慈都没有了。还有盗贼吗？看待别人的家象自己的家一样，谁会盗窃？看待别人就象自己一样，谁会害人？所以盗贼没有了。还有大夫相互侵扰家族，诸侯相互攻伐封国吗？看待别人的家族就象自己的家族，谁会侵犯？看待别人的封国就象自己的封国，谁会攻伐？所以大夫相互侵扰家族，诸侯相互攻伐封国，都没有了。假若天下的人都相亲相爱，国家与国家不相互攻伐，家族与家族不相互侵扰，盗贼没有了，君臣父子间都能孝敬慈爱，象这样，天下也就治理了。\r\n\r\n\r\n\r\n　　所以圣人既然是以治理天下为职业的人，怎么能不禁止相互仇恨而鼓励相爱呢？因此天下的人相亲相爱就会治理好，相互憎恶则会混乱。所以墨子说：“不能不鼓励爱别人”，道理就在此。\r\n\r\n\r\n\r\n注释\r\n\r\n（1）兼爱是墨家学派最有代表性的理论之一。所谓兼爱，其本质是要求人们爱人如己，彼此之间不要存在血缘与等级差别的观念。墨子认为，不相爱是当时社会混乱最大的原因，只有通过“兼相爱，交相利”才能达到社会安定的状态。这种理论具有反抗贵族等级观念的进步意义，但同时也带有强烈的理想色彩。\r\n\r\n（2）当：读为“尝”。\r\n\r\n（3）恶（wū）：何。\r\n\r\n（4）亡：通“无”。',',思想,',84,0,'2015-10-08 09:06:33','2017-05-15 01:28:32',0,'',0,NULL),(16,1,'图片压缩的坑','webp格式','','',0,'   今天元菲有个朋友过来聊天，介绍他们产品的时候，提及图片压缩优化。对方使用的格式是webp格式，网上搜了下，比jpeg压缩率更高一些，他们的产品刷图片列表很快便加载下来，点击放大看也不模糊，一个大图50k左右，比我们2~300k的要小不少。\r\n   \r\n   其实之前我们是在客户端进行压缩，只裁剪和压缩了一遍，生成的图片很大；也曾尝试图重复压缩，发现生产环境中客户端有些图片模糊，遂去掉了二次压缩，保留高缩质量，导致出图占用空间很大，300K左右，有些图甚至1M，用户流量损耗巨大。\r\n   \r\n   这次提说webp格式很节省流量，遂查询资料并做尝试，发现将我们现有图用webp格式压缩后，比原来小了9/10，15k左右，观察图片质量，稍微逊色，没有很明显的下降。有种相见恨晚的感觉，遂倾向使用此格式。不过webp是谷歌出的，Android原生支持，ios要加第三方库才能使用，ios客户端有开发成本。在ios同事的建议下，又使用jpeg做了二次压缩，惊人的发现，压缩后的图片，也是比原来小了9/10，只比webp稍微大了1k 多，图片质量也没看到明显下降。此时如梦初醒，原来是当初第一次压缩，保留细节太多，没有在质量上大刀阔斧的砍下去，当我尝试两种压缩方式都将质量保留100%时候，二次压缩基本只比原来少了1/10的样子，webp会少一点，但不是很明显。对我们而言，webp和jpeg都可以使用，都压缩到这个份上了，差一点也无所谓了。\r\n   \r\n   于是连夜修改，将所有图片重新做二次压缩，让测试反复测，看看调整图片质量，找到个合适的压缩率，以维持美观和节省流量平衡。这次可以大幅度压缩下，图片质量降低很多，在手机上感觉也不明显，之前因为太吹毛求疵了，一两张图片模糊就全盘否定，导致用户文件夹图片缓存动辄1~2G，安卓手机满了不清理的话，直接不能用，新图片无法下载。现在打算牺牲个别图片，即使看起来模糊，也要坚持大压缩率，以保证大部分人用起来顺畅，总想全都顾及到是不行的，必要时候牺牲一小部分是可以接受的！',',技术,',137,0,'2015-10-08 17:08:18','2017-06-14 10:34:11',0,'',0,NULL),(17,1,'【转】jQuery插件开发 - 其实很简单','','','',0,'【转】http://www.cnblogs.com/fromearth/archive/2009/07/08/1519054.html\r\n\r\n<p style=\"text-indent:29px\"><span style=\"font-family:宋体\">【前言】</span></p><p style=\"text-indent:29px\">jQuery<span style=\"font-family:宋体\">已经被广泛使用，凭借其简洁的</span>API<span style=\"font-family:宋体\">，对</span>DOM<span style=\"font-family: 宋体\">强大的操控性，易扩展性越来越受到</span>web<span style=\"font-family:宋体\">开发人员的喜爱，我在社区也发布了很多的</span>jQuery<span style=\"font-family:宋体\">插件，经常有人询问一些技巧，因此干脆写这么一篇文章给各位</span>jQuery<span style=\"font-family:宋体\">爱好者，算是抛砖引玉吧。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">【基础】</span>&nbsp;</p><p style=\"text-indent:29px\"><em>a)</em><em><span style=\"font-family:宋体\">样式</span></em></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">很</span> <span style=\"font-family:宋体\">多人会认为样式是个很复杂的东西，需要沉着冷静的心态加上非凡的审美观才能设计出赏心悦目的</span>UI<span style=\"font-family:宋体\">，抛开图片设计不说，其实</span>css<span style=\"font-family:宋体\">也就是那么些属</span> <span style=\"font-family:宋体\">性：</span>position,margin,padding,width,height,left,top,float,border,background...</p><p style=\"text-indent:29px\">UI<span style=\"font-family:宋体\">设计的漂亮与否在很大程度上依赖于设计人员对配色的把握和整体效果的协调。举个简单的例子，一个简单的页面，马虎的人：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">html&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:red\">xmlns</span><span style=\"font-size: 12px;font-family:Consolas;color:blue\">=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">head</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">title</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span><span style=\"font-size: 12px;font-family: Consolas\">Test&nbsp;Page</span><span style=\"font-size:12px;font-family: Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">title</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">head</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">body</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;jQuery</span><span style=\"font-size: 12px;font-family: 宋体\">是一个框架！压缩后有</span><span style=\"font-size: 12px;font-family: Consolas\">30</span><span style=\"font-size: 12px;font-family: 宋体\">多</span><span style=\"font-size: 12px;font-family: Consolas\">k</span><span style=\"font-size: 12px;font-family: 宋体\">吧。</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">body</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">html</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">细心的人：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">html&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:red\">xmlns</span><span style=\"font-size: 12px;font-family:Consolas;color:blue\">=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">head</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">title</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span><span style=\"font-size: 12px;font-family: Consolas\">Test&nbsp;Page</span><span style=\"font-size:12px;font-family: Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">title</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">style&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:red\">type</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">=&quot;text/css&quot;&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: maroon\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: maroon\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: red\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;font-family</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size: 12px;font-family: Consolas;color: blue\">&#39;</span><span style=\"font-size: 12px;font-family: 宋体;color: blue\">宋体</span><span style=\"font-size: 12px;font-family: Consolas;color: blue\">&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: red\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;font-size</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size: 12px;font-family: Consolas;color: blue\">12px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: red\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: maroon\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">style</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">head</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">body</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;jQuery</span><span style=\"font-size: 12px;font-family: 宋体\">是一个框架！压缩后有</span><span style=\"font-size: 12px;font-family: Consolas\">30</span><span style=\"font-size: 12px;font-family: 宋体\">多</span><span style=\"font-size: 12px;font-family: Consolas\">k</span><span style=\"font-size: 12px;font-family: 宋体\">吧。</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">body</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">html</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">专心的人：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">html&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:red\">xmlns</span><span style=\"font-size: 12px;font-family:Consolas;color:blue\">=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">head</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">title</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span><span style=\"font-size: 12px;font-family: Consolas\">Test&nbsp;Page</span><span style=\"font-size:12px;font-family: Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">title</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">style&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:red\">type</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">=&quot;text/css&quot;&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: maroon\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: maroon\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: red\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;font-family</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size: 12px;font-family: Consolas;color: blue\">&#39;Verdana&#39;,&#39;</span><span style=\"font-size: 12px;font-family: 宋体;color: blue\">宋体</span><span style=\"font-size: 12px;font-family: Consolas;color: blue\">&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: red\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;font-size</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size: 12px;font-family: Consolas;color: blue\">12px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: red\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas;color: maroon\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">style</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">head</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">body</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;jQuery</span><span style=\"font-size: 12px;font-family: 宋体\">是一个框架！压缩后有</span><span style=\"font-size: 12px;font-family: Consolas\">30</span><span style=\"font-size: 12px;font-family: 宋体\">多</span><span style=\"font-size: 12px;font-family: Consolas\">k</span><span style=\"font-size: 12px;font-family: 宋体\">吧。</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">body</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">html</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">我们对比一下三者的</span>UI<span style=\"font-family:宋体\">效果：</span></p><p style=\"margin-top:10px;margin-bottom:10px;text-indent:0;line-height:18px;background:white\"><span style=\"font-size: 12px;font-family: Consolas\"><img width=\"307\" height=\"55\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" border=\"0\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image001.gif\"/></span></p><p style=\"margin-top:10px;margin-bottom:10px;text-indent:0;line-height:18px;background:white\"><span style=\"font-size: 12px;font-family: Consolas\"><img width=\"232\" height=\"43\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" border=\"0\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image002.gif\"/></span></p><p style=\"margin-top:10px;margin-bottom:10px;text-indent:0;line-height:18px;background:white\"><span style=\"font-size: 12px;font-family: Consolas\"><img width=\"245\" height=\"50\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" border=\"0\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image003.gif\"/></span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">一目了然，或许很多的站点失去关注正是因为这不起眼的</span>font-family,font-size<span style=\"font-family:宋体\">。当然这还只是个简单的例子，掌握</span>css<span style=\"font-family:宋体\">应该从简单做起，从基本入手，在实践中运用并不断深入。</span></p><p style=\"text-indent:29px\"><strong><em>b)</em></strong><strong><em><span style=\"font-family:宋体\">脚本</span></em></strong>&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">我们同样需要对</span>javascript<span style=\"font-family:宋体\">有着深刻的理解，对</span>dom, xhr, Regex, call-apply, prototype<span style=\"font-family: 宋体\">等都应该有一定的了解。</span></p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">有人会说要这些有啥用啊，对</span>dom<span style=\"font-family:宋体\">的操作其实通过</span>getElementById, getElementsByTagName<span style=\"font-family:宋体\">以及其他的</span>API<span style=\"font-family:宋体\">都可以轻松的完成，这话是没错，当思路确定后，思想才是重点，一段代码是精华还是糟粕很容易就</span> <span style=\"font-family:宋体\">可以区分出来，究其原因还是取决你自己，举个简单的例子，大量的</span>html<span style=\"font-family:宋体\">组装，路人甲：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;a&nbsp;=&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">new</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;Array(10);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;menu&nbsp;=&nbsp;&#39;&#39;;&nbsp;&nbsp;&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">for</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;(</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;a.length;&nbsp;i++)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;menu&nbsp;+=&nbsp;&#39;&lt;li&nbsp;class=&quot;style_&#39;&nbsp;+&nbsp;a[i]&nbsp;+&nbsp;&#39;&quot;&nbsp;&gt;&#39;&nbsp;+&nbsp;a[i]&nbsp;+&nbsp;&#39;&lt;/li&gt;&#39;;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">路人乙：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">String.prototype.format&nbsp;=&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">()&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;args&nbsp;=&nbsp;arguments;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">return</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">this</span><span style=\"font-size: 12px;font-family: Consolas\">.replace(/{(\\d{1})}/g,&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">()&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">return</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;args[arguments[1]];</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;});</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">};</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;a&nbsp;=&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">new</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;Array(1,2,3,4,5,6,7,8,9,0);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;m&nbsp;=&nbsp;&#39;&lt;li&nbsp;class=&quot;style_{0}&quot;&nbsp;&gt;{0}&lt;/li&gt;&#39;;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">for</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;(</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;a.length;&nbsp;i++)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;menu&nbsp;+=&nbsp;m.format(a[i]);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">在实现方式明确的情况下，优雅高效的代码显然更具吸引力。</span></p><p style=\"text-indent:29px\"><strong><span style=\"font-family:宋体\">【实践</span></strong><span style=\"font-family:宋体\">】</span></p><p style=\"text-indent:29px\">jQuery<span style=\"font-family:宋体\">开发或使用，更多的灵感是来自实践，而不是</span>copy||paste(<span style=\"font-family:宋体\">奉行拿来主义的同学可以离开了</span>)<span style=\"font-family:宋体\">。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">那么在这里我会用一个简单的例子来阐述</span>jQuery<span style=\"font-family:宋体\">插件开发的流程，能否举一反三就看各位看官了。</span></p><p style=\"text-indent:29px\"><strong><span style=\"font-family:宋体\">【目的】</span></strong>&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">开发一个插件之前我们需要对自己的目的有一个清醒的认识，有很明确的方向感，那么此次我作为示例插件的目的，就是呈现一个用于</span>UI<span style=\"font-family:宋体\">的</span><span style=\"color:red\">Slider - </span><span style=\"font-family:宋体;color:red\">滑动条</span><span style=\"font-family:宋体\">，常年从事于或暂时专注于</span>win32<span style=\"font-family:宋体\">开发的同学应该比较了解。</span></p><p style=\"text-indent:29px\"><strong><span style=\"font-family:宋体\">草图</span></strong></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">真正动手编码之前我们还需要有一个草图来描述自己插件的</span>“<span style=\"font-family:宋体\">长相</span>”<span style=\"font-family:宋体\">（事件驱动或</span>API<span style=\"font-family:宋体\">封装的可以忽略）。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">很多的同学在做</span>UI<span style=\"font-family:宋体\">开发前往往会忙于搜集各种小图片</span>(<span style=\"font-family:宋体\">非精通</span>ps<span style=\"font-family:宋体\">或</span>iconworkshop<span style=\"font-family:宋体\">人士</span>)<span style=\"font-family: 宋体\">，其实漂亮的图标的确可以美化我们的</span>UI<span style=\"font-family:宋体\">，不过我一般的处理方式是编写易于扩展的</span>css<span style=\"font-family:宋体\">，前期的</span>UI<span style=\"font-family:宋体\">呈现尽量少使用图片，多用线条完成。</span></p><p style=\"text-indent:29px\">ok<span style=\"font-family:宋体\">，言归正卷，那么我的</span>slider<span style=\"font-family:宋体\">设计草图是</span>:</p><p style=\"text-indent:29px\"><img width=\"300\" height=\"100\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" border=\"0\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image004.gif\"/>&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">解释下下文将用到的几个词：</span></p><p style=\"text-indent:29px\"><strong>slider:</strong>&nbsp;<span style=\"font-family:宋体\">此部分是作为拖拽手柄来使用，用户可以通过拖拽此部分来更新</span>completed bar<span style=\"font-family:宋体\">的位置。</span></p><p style=\"text-indent:29px\"><strong>completed:</strong>&nbsp;<span style=\"font-family:宋体\">此部分作为</span>bar<span style=\"font-family:宋体\">的内嵌元素，作为特殊效果来显示</span>slider<span style=\"font-family:宋体\">与起始点的距离，亦即与</span>slider<span style=\"font-family:宋体\">的</span>value<span style=\"font-family: 宋体\">值关联。</span></p><p style=\"text-indent:29px\"><strong>bar:</strong>&nbsp;slider<span style=\"font-family:宋体\">的载体，</span>completed<span style=\"font-family:宋体\">的满值。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">思路：</span></p><p style=\"text-indent:29px\">slider<span style=\"font-family:宋体\">作为手柄提供拖拽功能，作用区域为</span>bar<span style=\"font-family:宋体\">，拖拽过程中</span>completed<span style=\"font-family:宋体\">条必须实时更新</span>(<span style=\"font-family:宋体\">长度</span>)<span style=\"font-family: 宋体\">，影响区域为</span>slider<span style=\"font-family:宋体\">至</span>bar<span style=\"font-family:宋体\">左端的距离。</span></p><p style=\"text-indent:29px\"><strong><span style=\"font-family:宋体\">【编码】</span></strong>&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">开发</span>jQuery UI/Effect <span style=\"font-family:宋体\">插件在很多时候都需要与</span>UI<span style=\"font-family:宋体\">交互，因此在呈现上需要提供</span>Html tree<span style=\"font-family:宋体\">来绘制我们的插件，最终通过</span>js dom<span style=\"font-family:宋体\">来输出，那么在绘制简单的</span>dom<span style=\"font-family:宋体\">结构的时候我会直接用</span>js<span style=\"font-family:宋体\">来完成，不过如果嵌套比较复杂的话，我们还是应该先用</span>html<span style=\"font-family:宋体\">来完成，然后转变成</span>js<span style=\"font-family:宋体\">输</span> <span style=\"font-family:宋体\">出。</span></p><p style=\"margin-top:10px;margin-bottom:10px;text-indent:0;line-height:18px;background:white\"><span style=\"text-decoration:underline;\"><span style=\"font-size:12px;font-family:Consolas;color:red\">html tree:</span></span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">div&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:red\">class</span><span style=\"font-size: 12px;font-family:Consolas;color:blue\">=&quot;defaultbar&quot;&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">div&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:red\">class</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">=&quot;jquery-completed&quot;&gt;</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">div</span><span style=\"font-size: 12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">div&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:red\">class</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">=&quot;jquery-jslider&quot;&gt;</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">div</span><span style=\"font-size: 12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">&lt;/</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">div</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&gt;</span></p><p style=\"text-indent:29px\">deafultbar -&gt; bar</p><p style=\"text-indent:29px\">jquery-completed -&gt; completed</p><p style=\"text-indent:29px\">jquery-jslider -&gt; slider</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">前期</span>UI<span style=\"font-family:宋体\">呈现上我们不使用图片，尽量用线条、颜色来完成：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">/*----default&nbsp;skin----*/</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:maroon\"><img width=\"11\" height=\"16\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/themes/default/images/word.gif) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image005.gif\"/>.defaultbar</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;margin-top</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;10px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;height</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;5px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;background-color</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;#FFFFE0</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;border</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;1px&nbsp;solid&nbsp;#A9C9E2</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;position</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;relative</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:maroon\">.defaultbar&nbsp;.jquery-completed</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;height</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;3px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;background-color</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;#7d9edb</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;top</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;1px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;left</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">1px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;position</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;absolute</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:maroon\">.defaultbar&nbsp;.jquery-jslider</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;height</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;15px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;background-color</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;#E6E6FA</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;border</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;1px&nbsp;solid&nbsp;#A5B6C8</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;top</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;-6px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;display</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;block</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;cursor</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;pointer</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;position</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;absolute</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">将</span>bar<span style=\"font-family:宋体\">的</span>position<span style=\"font-family:宋体\">属性设置成</span>relative<span style=\"font-family:宋体\">，以方便子节点的浮动（子节点使用</span>position:absolute<span style=\"font-family:宋体\">来获得内联浮动效果）。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">那么我们可以看下这个</span>css<span style=\"font-family:宋体\">和</span>html tree<span style=\"font-family:宋体\">产生的</span>UI<span style=\"font-family: 宋体\">效果：</span></p><p style=\"text-indent:29px\"><img width=\"431\" height=\"38\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/themes/default/images/word.gif) no-repeat center center;border:1px solid #ddd\" border=\"0\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image006.gif\"/>&nbsp;</p><p style=\"text-indent:29px\">ok,<span style=\"font-family:宋体\">具备了所需的元素</span> - slider, completed, bar.</p><p style=\"text-indent:29px\"><span style=\"text-decoration:underline;\"><span style=\"font-family:宋体;color:red\">一些规范</span><span style=\"color:red\">:</span></span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">当我们画出了</span>UI<span style=\"font-family:宋体\">之后就可以正式编写</span>jQuery<span style=\"font-family:宋体\">插件代码了，不过在着之前我们还需要对</span>jQuery<span style=\"font-family:宋体\">插件开发的一些规范性有一些了解。</span></p><p style=\"text-indent:29px\">1. <span style=\"font-family:宋体\">使用闭包：</span></p><p style=\"margin-left:29px;text-indent:0;line-height:18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">(</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">($)&nbsp;{</span></p><p style=\"margin-left:29px;text-indent:0;line-height:18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">//&nbsp;Code&nbsp;goes&nbsp;here</span></p><p style=\"margin-left:29px;text-indent:0;line-height:18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">})(jQuery);</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">这是来自</span>jQuery<span style=\"font-family:宋体\">官方的插件开发规范要求，使用这种编写方式有什么好处呢？</span></p><p style=\"text-indent:29px\">a) <span style=\"font-family:宋体\">避免全局依赖。</span></p><p style=\"text-indent:29px\">b) <span style=\"font-family:宋体\">避免第三方破坏。</span></p><p style=\"text-indent:29px\">c) <span style=\"font-family:宋体\">兼容</span>jQuery<span style=\"font-family:宋体\">操作符</span>&#39;$&#39;<span style=\"font-family: 宋体\">和</span>&#39;jQuery &#39;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">我们知道这段代码在被解析时会形同如下代码：</span></p><p style=\"margin-left:29px;text-indent:0;line-height:18px;background:whitesmoke\"><span style=\"font-size:12px;font-family: Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;jq&nbsp;=&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">($)&nbsp;{</span></p><p style=\"margin-left:29px;text-indent:0;line-height:18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">//&nbsp;Code&nbsp;goes&nbsp;here</span></p><p style=\"margin-left:29px;text-indent:0;line-height:18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">};&nbsp;</span></p><p style=\"margin-left:29px;text-indent:0;line-height:18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">jq(jQuery);</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">这样效果就一目了然了。</span></p><p style=\"text-indent:29px\">2. <span style=\"font-family:宋体\">扩展</span></p><p style=\"text-indent:29px\">jQuery<span style=\"font-family:宋体\">提供了</span>2<span style=\"font-family: 宋体\">个供用户扩展的</span>‘<span style=\"font-family:宋体\">基类</span>’ - $.extend<span style=\"font-family:宋体\">和</span>$.fn.extend.</p><p style=\"text-indent:29px\">$.extend <span style=\"font-family:宋体\">用于扩展自身方法，如</span>$.ajax, $.getJSON<span style=\"font-family:宋体\">等，</span>$.fn.extend<span style=\"font-family:宋体\">则是用于扩展</span>jQuery<span style=\"font-family:宋体\">类，包括方法和对</span>jQuery<span style=\"font-family:宋体\">对象的操作。为了保持</span>jQuery<span style=\"font-family:宋体\">的完整性，我比较</span> <span style=\"font-family:宋体\">趋向于使用</span>$.fn.extend<span style=\"font-family:宋体\">进行插件开发而尽量少使用</span>$.extend.</p><p style=\"text-indent:29px\">3. <span style=\"font-family:宋体\">选择器</span></p><p style=\"text-indent:29px\">jQuery<span style=\"font-family:宋体\">提供了功能强大，并兼容多种</span>css<span style=\"font-family:宋体\">版本的选择器，不过发现很多同学在使用选择器时并未注重效率的问题。</span>&nbsp;</p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"text-indent:29px\">a) <span style=\"font-family:宋体\">尽量使用</span>Id<span style=\"font-family: 宋体\">选择器，</span>jQuery<span style=\"font-family:宋体\">的选择器使用的</span>API<span style=\"font-family:宋体\">都是基于</span>getElementById<span style=\"font-family:宋体\">或</span>getElementsByTagName<span style=\"font-family:宋体\">，因此可以知道</span> <span style=\"font-family:宋体\">效率最高的是</span>Id<span style=\"font-family:宋体\">选择器，因为</span>jQuery<span style=\"font-family:宋体\">会直接调用</span>getElementById<span style=\"font-family:宋体\">去获取</span>dom<span style=\"font-family: 宋体\">，而通过样式选择器获取</span>jQuery<span style=\"font-family:宋体\">对象时往往会使用</span> getElementsByTagName<span style=\"font-family:宋体\">去获取然后筛选。</span></p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"text-indent:29px\">b) <span style=\"font-family:宋体\">样式选择器应该尽量明确指定</span>tagName, <span style=\"font-family:宋体\">如果开发人员使用样式选择器来获取</span>dom<span style=\"font-family:宋体\">，且这些</span>dom<span style=\"font-family:宋体\">属于同一类型，例如获取所有</span>className<span style=\"font-family:宋体\">为</span>jquery<span style=\"font-family:宋体\">的</span>div<span style=\"font-family: 宋体\">，那么我们应该使用的写法</span> <span style=\"font-family:宋体\">是</span>$(&#39;div.jquery&#39;)<span style=\"font-family:宋体\">而不是</span>$(&#39;.jquery&#39;)<span style=\"font-family:宋体\">，这样写的好处非常明显，在获取</span>dom<span style=\"font-family:宋体\">时</span>jQuery<span style=\"font-family:宋体\">会获取</span>div<span style=\"font-family: 宋体\">然后进行筛选，而不是</span> <span style=\"font-family:宋体\">获取所有</span>dom<span style=\"font-family:宋体\">再筛选。</span></p><p style=\"text-indent:29px\">c) <span style=\"font-family:宋体\">避免迭代，很多同学在使用</span>jQuery<span style=\"font-family:宋体\">获取指定上下文中的</span>dom<span style=\"font-family:宋体\">时喜欢使用迭代方式，如</span>$(&#39;.jquery .child&#39;)<span style=\"font-family:宋体\">，获取</span>className<span style=\"font-family:宋体\">为</span>jquery<span style=\"font-family:宋体\">的</span>dom<span style=\"font-family: 宋体\">下的所有</span>className<span style=\"font-family:宋体\">为</span>child<span style=\"font-family:宋体\">的节点，其实这样编写代码付出的代价是非常大</span> <span style=\"font-family:宋体\">的，</span>jQuery<span style=\"font-family:宋体\">会不断的进行深层遍历来获取需要的元素，即使确实需要，我们也应该使用诸如</span>$(selector,context), $(&#39;selector1&gt;selector2&#39;), $(selector1).children(selector2), $(selctor1).find(selector2)<span style=\"font-family:宋体\">之类的方式。</span></p><p style=\"text-indent:29px\"><span style=\"text-decoration:underline;\"><span style=\"font-family:宋体;color:red\">开始编码</span></span>&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">话题有点扯远，</span>ok<span style=\"font-family:宋体\">，在对</span>UI<span style=\"font-family:宋体\">有了清晰的认识后我们就可以使用</span>js<span style=\"font-family:宋体\">来输出</span>html<span style=\"font-family:宋体\">了。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">我们使用</span>jSlider<span style=\"font-family:宋体\">来命名这个</span>slider<span style=\"font-family:宋体\">插件</span>(<span style=\"font-family:宋体\">为了避免插件冲突，插件命名时也应十分考究，这里我就俗一回</span>)<span style=\"font-family:宋体\">。</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">$.extend($.fn,&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">///&lt;summary&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">///&nbsp;apply&nbsp;a&nbsp;slider&nbsp;UI</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">///&lt;/summary&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jSlider:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">(setting)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">});</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">在插件开发中比较标准的方式是将元数据独立出来并开放</span>API<span style=\"font-family:宋体\">，比如这里的</span>setting<span style=\"font-family:宋体\">参数传入值，有时候为了减少代码编写量，我习惯于直接在插件内赋值：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;ps&nbsp;=&nbsp;$.extend({</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;renderTo:&nbsp;$(document.body),</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;enable:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">true</span><span style=\"font-size: 12px;font-family: Consolas\">,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;initPosition:&nbsp;&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">max</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;size:&nbsp;{&nbsp;barWidth:&nbsp;200,&nbsp;sliderWidth:&nbsp;5&nbsp;},</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;barCssName:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;defaultbar&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;completedCssName:&nbsp;&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">jquery-completed</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;sliderCssName:&nbsp;&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">jquery-jslider&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;sliderHover:&nbsp;&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">jquery-jslider-hover</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;onChanging:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">()&nbsp;{&nbsp;},</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;onChanged:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">()&nbsp;{&nbsp;}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">},&nbsp;setting);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">规范的做法：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">$.fn.jSlider.</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">default</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;=&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;renderTo:&nbsp;$(document.body),</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;enable:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">true</span><span style=\"font-size: 12px;font-family: Consolas\">,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;initPosition:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;max&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;size:&nbsp;{&nbsp;barWidth:&nbsp;200,&nbsp;sliderWidth:&nbsp;5&nbsp;},</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;barCssName:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;defaultbar&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;completedCssName:&nbsp;&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">jquery-completed</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;sliderCssName:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;jquery-jslider</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;sliderHover:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;jquery-jslider-hover</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;onChanging:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">()&nbsp;{&nbsp;},</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;onChanged:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">()&nbsp;{&nbsp;}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;};</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">$.extend({},$.fn.jSlider.</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">default</span><span style=\"font-size: 12px;font-family: Consolas\">,setting);</span></p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"text-indent:29px\">ok, <span style=\"font-family:宋体\">下面描述下我所定义的这些</span>API<span style=\"font-family:宋体\">的作用：</span></p><p style=\"text-indent:29px\"><strong>renderTo</strong>: jSlider<span style=\"font-family:宋体\">的载体、容器，可以是一个</span>jQuery<span style=\"font-family:宋体\">对象，也可以是选择器。</span></p><p style=\"text-indent:29px\"><strong>enable</strong>: jSlider<span style=\"font-family:宋体\">插件是否可用，</span>true<span style=\"font-family:宋体\">时</span>end-user<span style=\"font-family:宋体\">可拖拽，否则禁止。</span></p><p style=\"text-indent:29px\"><strong>initPosition</strong>: jSlider<span style=\"font-family:宋体\">的初始值，</span>‘max’<span style=\"font-family:宋体\">或者</span>‘min’<span style=\"font-family:宋体\">，亦即</span> slider<span style=\"font-family:宋体\">的</span>value<span style=\"font-family: 宋体\">值，</span>1<span style=\"font-family:宋体\">或者</span>0<span style=\"font-family:宋体\">。</span></p><p style=\"text-indent:29px\"><strong>size</strong>: jSlider<span style=\"font-family:宋体\">的参数，包括</span>2<span style=\"font-family:宋体\">个值</span>barWidth - bar<span style=\"font-family:宋体\">的长度，</span> sliderWidth - slider<span style=\"font-family:宋体\">的长度。</span></p><p style=\"text-indent:29px\"><strong>barCssName</strong>: bar<span style=\"font-family:宋体\">的样式名称，便于</span>end-user<span style=\"font-family:宋体\">自行扩展样式。</span></p><p style=\"text-indent:29px\"><strong>completedCssName</strong>: completed<span style=\"font-family:宋体\">的样式名称。</span></p><p style=\"text-indent:29px\"><strong>sliderCssName</strong>: slider<span style=\"font-family:宋体\">的样式名称。</span></p><p style=\"text-indent:29px\"><strong>sliderHover</strong>: slider<span style=\"font-family:宋体\">聚焦时的样式名称。</span></p><p style=\"text-indent:29px\"><strong>onChanging</strong>: slider<span style=\"font-family:宋体\">被拖拽时触发的事件。</span></p><p style=\"text-indent:29px\"><strong>onChanged</strong>: slider<span style=\"font-family:宋体\">拖拽结束时触发的事件。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">此时我们需要将</span>renderTo<span style=\"font-family:宋体\">强制转换成</span>jQuery<span style=\"font-family:宋体\">对象</span>(<span style=\"font-family:宋体\">兼容使用</span>selector<span style=\"font-family:宋体\">的情况</span>)<span style=\"font-family: 宋体\">：</span></p><p style=\"text-indent:29px\">ps.renderTo&nbsp;=&nbsp;(<span style=\"color:blue\">typeof</span>&nbsp;ps.renderTo&nbsp;==&nbsp;&#39;string&#39;&nbsp;?</p><p style=\"text-indent:29px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(ps.renderTo)&nbsp;:&nbsp;ps.renderTo);</p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">然后将</span>html tree<span style=\"font-family:宋体\">输出到</span>render:</p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">/*&nbsp;----------&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">html&nbsp;tree:</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&lt;div&gt;&nbsp;----&gt;sliderbar</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&lt;div&gt;&amp;nbsp;&lt;/div&gt;&nbsp;&nbsp;&nbsp;----&gt;&nbsp;completed&nbsp;bar</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&lt;div&gt;&amp;nbsp;&lt;/div&gt;&nbsp;&nbsp;&nbsp;----&gt;&nbsp;slider&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&lt;/div&gt;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&lt;-----------*/</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;sliderbar&nbsp;=&nbsp;$(&#39;</span><span style=\"font-size: 12px;font-family:Consolas;color:maroon\">&lt;div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;)</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.attr(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;class&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;ps.barCssName)</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.css(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;width&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;ps.size.barWidth)</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.appendTo(ps.renderTo);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;completedbar&nbsp;=&nbsp;sliderbar.find(&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">div:eq(0)</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;)</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.attr(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;class&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;ps.completedCssName);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;slider&nbsp;=&nbsp;sliderbar.find(&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">div:eq(1)</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;)</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.attr(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;class&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;ps.sliderCssName)</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.css(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;width&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;ps.size.sliderWidth);</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">这样我们就在</span>UI<span style=\"font-family:宋体\">上直接呈现了</span>Html<span style=\"font-family:宋体\">并且用定制的</span>css<span style=\"font-family:宋体\">进行渲染，分别用</span>sliderbar, completedbar, slider<span style=\"font-family:宋体\">对我们需要的三个对象进行缓存。</span></p><p style=\"text-indent:29px\">ok, <span style=\"font-family:宋体\">在呈现了</span>UI<span style=\"font-family: 宋体\">后我们就需要提供方法来实现</span>slider<span style=\"font-family:宋体\">的拖拽，在这之前我们还需要实现一个方法，就是</span>completedbar<span style=\"font-family:宋体\">的实时更新，即在拖动</span>slider<span style=\"font-family:宋体\">的时候让</span>completedbar<span style=\"font-family:宋体\">始终填充左侧区域：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;bw&nbsp;=&nbsp;sliderbar.width(),&nbsp;sw&nbsp;=&nbsp;slider.width();</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">//make&nbsp;sure&nbsp;that&nbsp;the&nbsp;slider&nbsp;was&nbsp;displayed&nbsp;in&nbsp;the&nbsp;bar(make&nbsp;a&nbsp;limited)</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">ps.limited&nbsp;=&nbsp;{&nbsp;min:&nbsp;0,&nbsp;max:&nbsp;bw&nbsp;-&nbsp;sw&nbsp;};</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">if</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;(</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">typeof</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;window.$sliderProcess&nbsp;==&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;undefined&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;window.$sliderProcess&nbsp;=&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">new</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;Function(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;obj1&#39;,&nbsp;&#39;obj2&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;left&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">obj1.css(\\&#39;left\\&#39;,left);obj2.css(\\&#39;width\\&#39;,left);</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">$sliderProcess(slider,&nbsp;completedbar,&nbsp;eval(&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">ps.limited.</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;&nbsp;+&nbsp;ps.initPosition));</span></p><p style=\"text-indent:29px\">bw,sw<span style=\"font-family:宋体\">用来存储</span>sliderbar<span style=\"font-family:宋体\">和</span>slider<span style=\"font-family:宋体\">的长度，此处没有直接使用</span>ps.size<span style=\"font-family:宋体\">里的值是为了防止样式里的</span>border-width<span style=\"font-family:宋体\">对</span>width<span style=\"font-family: 宋体\">造成破坏。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">定义一个私用成员</span>limited<span style=\"font-family:宋体\">来存储</span>slider[left]<span style=\"font-family:宋体\">的最大值和最小值，并在后面直接使用</span>eval(&#39;<span style=\"color:maroon\">ps.limited.</span>&#39;&nbsp;+&nbsp;ps.initPosition)<span style=\"font-family:宋体\">来获取，从而避免</span>switch<span style=\"font-family:宋体\">操</span> <span style=\"font-family:宋体\">作。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">同时还需定义一个全局</span>Function<span style=\"font-family:宋体\">用来定位</span>completedbar<span style=\"font-family:宋体\">的填充长度以及</span>slider<span style=\"font-family:宋体\">左侧距离，我给其命名为</span>$sliderProcess<span style=\"font-family:宋体\">。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">那么我们接下来剩下的工作就是</span>slider<span style=\"font-family:宋体\">的拖拽功能了，那么在这里我会用到之前发布的一款</span>jQuery<span style=\"font-family:宋体\">拖拽插件，并做适量的订制：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">//drag&nbsp;and&nbsp;drop</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;slide&nbsp;=&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;drag:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">(e)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;d&nbsp;=&nbsp;e.data;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;l&nbsp;=&nbsp;Math.min(Math.max(e.pageX&nbsp;-&nbsp;d.pageX&nbsp;+&nbsp;d.left,&nbsp;ps.limited.min),&nbsp;ps.limited.max);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$sliderProcess(slider,&nbsp;completedbar,&nbsp;l);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">//push&nbsp;two&nbsp;parameters:&nbsp;1st:percentage,&nbsp;2nd:&nbsp;event</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ps.onChanging(l&nbsp;/&nbsp;ps.limited.max,&nbsp;e);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;},</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;drop:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">(e)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;slider.removeClass(ps.sliderHover);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">//push&nbsp;two&nbsp;parameters:&nbsp;1st:percentage,&nbsp;2nd:&nbsp;event</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ps.onChanged(parseInt(slider.css(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;left&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">))&nbsp;/&nbsp;ps.limited.max,&nbsp;e);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$().unbind(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;mousemove&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;slide.drag).unbind(&#39;mouseup&#39;,&nbsp;slide.drop);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">};</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">if</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;(ps.enable)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">//bind&nbsp;events</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;slider.bind(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;mousedown&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">(e)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;d&nbsp;=&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left:&nbsp;parseInt(slider.css(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;left&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">)),</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pageX:&nbsp;e.pageX</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">this</span><span style=\"font-size: 12px;font-family: Consolas\">).addClass(ps.sliderHover);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$().bind(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;mousemove&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;d,&nbsp;slide.drag).bind(</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;mouseup&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,&nbsp;d,&nbsp;slide.drop);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;});</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">这样当</span>jSlider enable<span style=\"font-family:宋体\">属性为</span>true<span style=\"font-family:宋体\">时，在</span>end-user<span style=\"font-family:宋体\">按下鼠标时绑定</span>mousemove<span style=\"font-family:宋体\">事件，在鼠标弹起时移除，我们只需要同步更新</span>slider<span style=\"font-family:宋体\">的</span>left <span style=\"font-family: 宋体\">属性和</span>completedbar<span style=\"font-family:宋体\">的</span>width<span style=\"font-family:宋体\">即可，同时在</span>drag<span style=\"font-family:宋体\">中绑定</span>onChanging<span style=\"font-family:宋体\">方法，在</span>drop<span style=\"font-family:宋体\">中绑定</span>onChanged<span style=\"font-family:宋体\">方法，向这两个方</span> <span style=\"font-family:宋体\">法推送的参数相同，</span>1&gt;<span style=\"font-family:宋体\">百分比，即</span>value<span style=\"font-family:宋体\">值，介于</span>0~1<span style=\"font-family:宋体\">，</span>2&gt;event<span style=\"font-family:宋体\">。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">那么至此我们的</span>jSlider<span style=\"font-family:宋体\">插件就基本成型，向用户提供了一个可拖拽的</span>slider<span style=\"font-family:宋体\">。</span></p><p style=\"text-indent:29px\"><strong><span style=\"font-family:宋体\">【扩展】</span></strong>&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">有的时候用户却不是那么容易满足，于是有人高呼：</span>“<span style=\"font-family:宋体\">我要自己设置</span>value<span style=\"font-family:宋体\">，为什么不提供这个功能？</span>”<span style=\"font-family:宋体\">。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">那么这时我们就需要为用户公开一个方法，用于设置</span>jSlider<span style=\"font-family:宋体\">的</span>value<span style=\"font-family:宋体\">，首先考虑的是作为方法需要一个作用对象</span>(jSlider)<span style=\"font-family:宋体\">，那么此时我又不</span> <span style=\"font-family:宋体\">想将作用对象作为参数传入，那么我们还是将这个方法作为插件来开发，我们将方法命名为</span>setSliderValue<span style=\"font-family:宋体\">，开放</span>2<span style=\"font-family:宋体\">个参数，</span>v(value<span style=\"font-family:宋体\">值</span>)<span style=\"font-family: 宋体\">和</span> callback(<span style=\"font-family:宋体\">设置完成后的回调函数</span>)<span style=\"font-family:宋体\">。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">即：</span>$.fn.setSliderValue(v,callback);</p><p style=\"text-indent:29px\">ok<span style=\"font-family:宋体\">，那么剩下的就是作用对象了，由之前的设计可知，在</span>slider<span style=\"font-family:宋体\">拖动时主要作用于</span>2<span style=\"font-family:宋体\">个对象，</span>slider<span style=\"font-family:宋体\">和</span>completedbar<span style=\"font-family:宋体\">，那么我们在</span>jSlider<span style=\"font-family:宋体\">插件末尾加上一段代码来返回</span>slider<span style=\"font-family:宋体\">对象：</span></p><p style=\"text-indent:29px\">slider.data&nbsp;=&nbsp;{&nbsp;bar:&nbsp;sliderbar,&nbsp;completed:&nbsp;completedbar&nbsp;};</p><p style=\"text-indent:29px\"><span style=\"color:blue\">return</span>&nbsp;slider;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">这样我们在初始化</span>jSlider<span style=\"font-family:宋体\">的时候就可以直接用一个变量来获取</span>jSlider<span style=\"font-family:宋体\">对象，然后调用</span>setSliderValue<span style=\"font-family:宋体\">方法了，伪码：</span></p><p style=\"text-indent:29px\"><span style=\"color:blue\">var</span>&nbsp;slider&nbsp;=&nbsp;$.fn.jSlider({<img width=\"15\" height=\"13\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/themes/default/images/word.gif) no-repeat center center;border:1px solid #ddd\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image007.png\"/>});</p><p style=\"text-indent:29px\">slider.setSliderValue(v,<span style=\"color:blue\">function</span>(){});</p><p style=\"text-indent:29px\">setSliderValue<span style=\"font-family:宋体\">代码：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">try</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">//validate</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">if</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;(</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">typeof</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;v&nbsp;==&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;undefined&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;||&nbsp;v&nbsp;&lt;&nbsp;0&nbsp;||&nbsp;v&nbsp;&gt;&nbsp;1)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">throw</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">new</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;Error(&#39;</span><span style=\"font-size:12px;font-family: Consolas;color:maroon\">\\&#39;v\\&#39;&nbsp;must&nbsp;be&nbsp;a&nbsp;Float&nbsp;variable&nbsp;between&nbsp;0&nbsp;and&nbsp;1.</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;s&nbsp;=&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">this</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">//validate&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">if</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;(</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">typeof</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;s&nbsp;==&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;undefined&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;||</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">typeof</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;s.data&nbsp;==&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;undefined&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;||</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">typeof</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;s.data.bar&nbsp;==&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;undefined&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">throw</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">new</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;Error(&#39;</span><span style=\"font-size:12px;font-family: Consolas;color:maroon\">You&nbsp;bound&nbsp;the&nbsp;method&nbsp;to&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;not&nbsp;a&nbsp;slider!</span><span style=\"font-size: 12px;font-family: Consolas\">&#39;);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;$sliderProcess(s,&nbsp;s.data.completed,&nbsp;v&nbsp;*&nbsp;s.data.bar.width());</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">if</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;(</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">typeof</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;callback&nbsp;!=&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;undefined&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">)&nbsp;{&nbsp;callback(v);&nbsp;}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">catch</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;(e)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;alert(e.message);</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">这里同样调用了全局</span>Function $sliderProcess<span style=\"font-family:宋体\">在设置</span>slider<span style=\"font-family:宋体\">的</span>value<span style=\"font-family:宋体\">值时进行</span>completedbar[width]<span style=\"font-family:宋体\">和</span>slider[left]<span style=\"font-family:宋体\">的更新。由于此</span> <span style=\"font-family:宋体\">处进行了异常处理，所以如果</span>end-user<span style=\"font-family:宋体\">在确保</span>setSliderValue<span style=\"font-family:宋体\">被作用于</span>jSlider<span style=\"font-family:宋体\">对象的时候可以删除此异常处理代</span> <span style=\"font-family:宋体\">码。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">【<strong>皮肤</strong>】</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">根据</span>jSlider<span style=\"font-family:宋体\">的</span>API<span style=\"font-family:宋体\">我们可以更加方便的为其设定皮肤，为了让</span>jSlider<span style=\"font-family:宋体\">更加专业，我们需要</span>2<span style=\"font-family:宋体\">张图片：</span></p><p style=\"margin-top:10px;margin-bottom:10px;text-indent:0;line-height:18px;background:white\"><span style=\"font-size: 12px;font-family: Consolas\"><img width=\"264\" height=\"98\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" border=\"0\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image008.gif\"/></span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">用来作为</span>completedbar<span style=\"font-family:宋体\">背景的</span>&#39;bar&#39;<span style=\"font-family:宋体\">和用来作为</span>slider<span style=\"font-family:宋体\">背景的</span>&#39;slider&#39;<span style=\"font-family:宋体\">，</span>ok<span style=\"font-family: 宋体\">，我们更新下样式：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">/*----blue&nbsp;skin----*/</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:maroon\">.bluebar</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;margin-top</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;10px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;height</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;4px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;background</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">#F7F7F7</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;border</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">solid&nbsp;1px&nbsp;#3e3e3e</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;position</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;relative</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:maroon\">.bluebar&nbsp;.jquery-completed</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;height</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;4px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;background</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">url(../images/slider/blue/bar.gif)&nbsp;left&nbsp;center&nbsp;no-repeat</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;top</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;0</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;left</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">0</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;position</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;absolute</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:maroon\">.bluebar&nbsp;.jquery-jslider</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;height</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;17px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;background</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">url(../images/slider/blue/slider.gif)&nbsp;center&nbsp;0&nbsp;no-repeat</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;top</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;-4px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;display</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;block</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;cursor</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;pointer</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;position</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">&nbsp;absolute</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:maroon\">.bluebar&nbsp;.jquery-jslider-hover</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:red\">&nbsp;&nbsp;&nbsp;&nbsp;background-position</span><span style=\"font-size: 12px;font-family: Consolas\">:</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">center&nbsp;-17px</span><span style=\"font-size: 12px;font-family: Consolas\">;</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">}</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">由于在设置样式时我仍然让子节点样式使用了</span>API<span style=\"font-family:宋体\">的默认值，因此在创建</span>jSlider<span style=\"font-family:宋体\">时我们只需要设置</span><strong>barCssName</strong><span style=\"font-family:宋体\">就行了：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:blue\">var</span><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;blue&nbsp;=&nbsp;$.fn.jSlider({</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;renderTo:&nbsp;&#39;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">#slidercontainer&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;size:&nbsp;{&nbsp;barWidth:&nbsp;500,&nbsp;sliderWidth:&nbsp;10&nbsp;},</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;barCssName:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:maroon\">&#39;bluebar&#39;</span><span style=\"font-size: 12px;font-family: Consolas\">,</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;onChanging:&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">(percentage,&nbsp;e)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">//&nbsp;code&nbsp;goes&nbsp;here</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">});</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">呈现出来的</span>UI:</p><p style=\"text-indent:29px\"><img width=\"530\" height=\"43\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" border=\"0\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image009.gif\"/></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">我们这样来设置其值：</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size:12px;font-family:Consolas;color:green\">//set&nbsp;percentage&nbsp;with&nbsp;a&nbsp;callback&nbsp;function</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">blue.setSliderValue(0.65,&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:blue\">function</span><span style=\"font-size: 12px;font-family: Consolas\">(percentage)&nbsp;{</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:12px;font-family:Consolas;color:green\">//&nbsp;code&nbsp;goes&nbsp;here</span></p><p style=\"text-indent:0;line-height: 18px;background:whitesmoke\"><span style=\"font-size: 12px;font-family: Consolas\">});</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">【<strong>通用性</strong>】</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">当然，我们不仅可以将</span>jSlider<span style=\"font-family:宋体\">作为</span>slider<span style=\"font-family:宋体\">使用，有时候它也是一个</span>progressbar:</p><p style=\"margin-top:10px;margin-bottom:10px;text-indent:0;line-height:18px;background:white\"><span style=\"font-size: 12px;font-family: Consolas\"><img width=\"210\" height=\"82\" src=\"/static/ueditor/themes/default/images/spacer.gif\" style=\"background:url(/static/ueditor/lang/zh-cn/images/localimage.png) no-repeat center center;border:1px solid #ddd\" border=\"0\" word_img=\"file:///C:/Users/ADMINI~1/AppData/Local/Temp/msohtmlclip1/01/clip_image010.gif\"/></span></p><p style=\"text-indent:29px\">(<span style=\"font-family:宋体\">代码我就不贴了，直接在</span>demo<span style=\"font-family:宋体\">里查看</span> ;-) )</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">【<strong>小结</strong>】</span>&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">通篇到这里就结束了，简单的介绍了一款</span>jQuery<span style=\"font-family:宋体\">插件的开发流程，以及开发中应该注意的细节，那么在下一篇的文章中我会向大家介绍如何打造一个通用型的</span> <span style=\"font-family:宋体\">自动完成</span> <span style=\"font-family:宋体\">插件。</span></p><p style=\"margin-top:10px;margin-bottom:10px;text-indent:0;line-height:18px;background:white\"><span style=\"font-size: 12px;font-family: Consolas\"><a href=\"http://www.ajaxplaza.net/slider/slider.htm\" target=\"_blank\"><span style=\"color:#8AB459;text-underline:none\">live demo</span></a></span></p><p style=\"margin-top:10px;text-indent:0;line-height:18px;background:white\"><span style=\"font-size: 12px;font-family: Consolas\"><a href=\"http://code.google.com/p/jqueryslider/downloads/list\" target=\"_blank\"><span style=\"color:#8AB459;text-underline: none\">source[google code]</span></a></span></p><p style=\"text-indent:0;line-height: 18px;background:white\"><span style=\"font-size:12px;font-family:Consolas;color:green\">/**</span></p><p style=\"text-indent:0;line-height: 18px;background:white\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&nbsp;*&nbsp;</span></p><p style=\"text-indent:0;line-height: 18px;background:white\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&nbsp;* Licensed</span></p><p style=\"text-indent:0;line-height: 18px;background:white\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&nbsp;* Under an Attribution, Share Alike License</span></p><p style=\"text-indent:0;line-height: 18px;background:white\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&nbsp;*</span></p><p style=\"text-indent:0;line-height: 18px;background:white\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&nbsp;* Copyright 2008-2014 Tjatse [ thisnamemeansnothing[at]gmail.com ]</span></p><p style=\"text-indent:0;line-height: 18px;background:white\"><span style=\"font-size:12px;font-family:Consolas;color:green\">&nbsp;*</span></p><p style=\"text-indent:6px;line-height:18px;background:white\"><span style=\"font-size:12px;font-family:Consolas;color:green\">**/</span></p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"margin: 10px auto;\"><br/></p>',',技术,',84,0,'2015-10-09 05:14:42','2017-05-15 01:30:36',0,'',1,''),(18,1,'我们应该尊重长者吗？','“先生，我们应该尊重长者吗？”“我说，不”','','',0,'“先生，我们应该尊重长者吗？”“我说，不”\r\n\r\n校长就坐在我旁边，他说“你说什么？我们应该尊敬长者。在我们的文化中，尊敬是应该的，但是尊敬什么呢？”\r\n\r\n“您说的这点很重要，我要告诉观众，我们的文化是这样，教孩子尊敬长者。这没错，是要尊敬，正如博士所说，尊敬他们的行为，而不是年龄。如果一个人的行为不正确，那么不管他多大岁数，都不能尊敬他，反而要去指责他。”',',思想,',94,0,'2015-10-09 09:07:28','2017-06-14 10:35:54',0,'',0,NULL),(19,1,'【转】比“教女儿如何自保”更重要的','BBC纪录片《印度的女儿》中，一位当年的凶手在接受采访时说，“她不应该反抗，她要是不反抗，就不会死”——《印度的女儿》在印度被禁，之后，在由这部纪录片引起的女权/人权抗议示威中，有这样一条标语“别教我女儿该穿什么，教你的儿子别去强奸。”','','',0,'    文/翕(xi)如\r\n\r\n    “传媒大学男生强奸女同学未遂将其杀死”，这条新闻一出，和以往任何性侵案件上了新闻一样，又出现许多“女生该如何保护自我”的文章。而每次看到这些“教女人如何自保”的文章，我都心情复杂。\r\n\r\n    我自己还小时，就十分热爱设想，他年要是有个小女儿，我该如何教育她。如今时光一晃，这两年身边渐渐多了结婚生子的朋友，哪怕此刻并不能真正的确定，以后就想成为一个母亲，我仍然乐于琢磨：有朝一日，如果真的有了一个小女儿，有哪些话与道理，我想告诉她。\r\n\r\n    去年暑假在南京时，和朋友吃饭，饭后逛书店，看到一本书是所谓的给女孩的人生建议。类似的书，我小时候也见过，标题类似于“给女孩的一百条忠告”，封面粉红色，隐瞒玫瑰花纹——其中那些忠告，如今基本忘光，唯有一条印象深刻：“夜间出门不要穿着过于暴露性感”。作者在写这条忠告时，还配了个小故事，说某个品学兼优的漂亮女孩，晚上出门穿着性感，被人先奸后杀。我至今连故事的细节都记得清楚——作者说她穿着性感，是红色毛线吊带黑色超短裙，而她出门，是为了给班级活动买电池。\r\n\r\n    去年夏天在书店里，朋友和我翻了翻“给女孩的人生建议”的目录，我讲起这个童年读到的故事/忠告，然后万分矛盾地说，如果有了女儿，我会告诉建议她夜间独自出门不要穿着过于暴露吗？\r\n\r\n    去年夏天，我自问自答地极其纠结，当时觉得，立足于眼下的社会环境，设身处地的站在一个母亲的立场上想，或许一定会——即便这听上去近似一种可疑的“谴责受害者”逻辑，即便很多时候，性侵犯和“穿什么样，长什么样、做了什么”并没有任何关系。可是面对想象中的女儿，与这个并不符合想象的世界，母亲总是想将发生危险的可能再降低一点。所以不仅如此，我或许还会教她哪些“自保”方式是有效的（比如一般来说，我不觉得带着武器一定管用——特别是，歹徒很有可能将你的水果刀胡椒粉用在你身上）——当然，即便如此，假如她不幸受到任何伤害，我一定也不会说“谁让你不保护好自己”这话，不会让她觉得自己该负任何责任。\r\n\r\n    可是说完，还是觉得少了点什么。我们的社会舆论家庭教育观念，似乎从来不缺少对女儿如何避免危险、如何自我保护的教育，也从不缺少对“没有保护好自己”的谴责批评事后诸葛亮，然而成问题的恰恰在于，当我们将重心一味地放在“教女儿如何避免性侵会吃亏。”）\r\n\r\n    BBC纪录片《印度的女儿》中，一位当年的凶手在接受采访时说，“她不应该反抗，她要是不反抗，就不会死”——《印度的女儿》在印度被禁，之后，在由这部纪录片引起的女权/人权抗议示威中，有这样一条标语“别教我女儿该穿什么，教你的儿子别去强奸。”',',思想,',82,0,'2015-10-09 17:18:16','2017-06-14 10:36:56',0,'',1,''),(20,1,'geohash实现(c语言)',NULL,'','',0,'<p style=\"margin-top:auto;margin-bottom:auto;text-indent:28px;line-height:26px;background:white\"><strong><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">GeoHash算法简介</span></strong></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:28px;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">首先，你要Baidu下，找到该算法核心原理，这里摘自网络文档，简单介绍下。<br/></span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">GeoHash算法是通过二分法，经过一定次数的无限逼近，将经纬度的二维坐标浮点值变成一个可排序、可比较的的字符串编码。</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">在编码中的每个字符代表一个区域，并且前面的字符是后面字符的父区域，即父子字符串有相同的前缀。其算法的过程如下：</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">地球纬度区间是[-90,90]， 如某纬度是39.92324，可以通过下面算法对39.92324进行逼近编码:</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">1）区间[-90,90]进行二分为[-90,0),[0,90]，称为左右区间，可以确定39.92324属于右区间[0,90]，给标记为1；</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">2）接着将区间[0,90]进行二分为 [0,45),[45,90]，可以确定39.92324属于左区间 [0,45)，给标记为0；</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">3）递归上述过程39.92324总是属于某个区间[a,b]。随着每次迭代区间[a,b]总在缩小，并越来越逼近39.928167；</span></p><p><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">4）如果给定的纬度（39.92324）属于左区间，则记录0，如果属于右区间则记录1，这样随着算法的进行会产生一个序列1011 1000 1100 01111001，序列的长度跟给定的区间划分次数有关。</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\"><img src=\"/static/upload/bigpic/20151027/1445915589633127061.png\"/></span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">同理，地球经度区间是</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">[-180,180]</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，对经度</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">116.3906</span><span style=\"font-size:14px;font-family: 宋体;color:#362E2B\">进行编码的过程也类似：</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family: 宋体;color:#362E2B\"><img src=\"/static/upload/bigpic/20151027/1445915619033198681.png\"/></span></p><p style=\"text-indent:0;background: white\"><span style=\"color: rgb(54, 46, 43); font-family: 宋体; line-height: 26px;\">组码</span><br/></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">通过上述计算，纬度产生的编码为</span><span style=\"font-size: 14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1011 1000 1100 0111 1001</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，经度产生的编码为</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">1101 00101100 0100 0100</span><span style=\"font-size:14px;font-family: 宋体;color:#362E2B\">。奇数位放纬度，偶数位放经度，相互穿插，把</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">2</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">条串编码组合生成新串：</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size: 14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">1</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:red\">0</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#00B0F0\">1</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">。</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">最后使用用</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">0-9</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">、</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">b-z</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">（去掉</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">a, i, l, o</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">）这</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">32</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">个字母进行</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">base32</span><span style=\"font-size:14px;font-family: 宋体;color:#362E2B\">编码，不会</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">base32</span><span style=\"font-size:14px;font-family: 宋体;color:#362E2B\">的网上搜搜。首先将</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">1110011101 00100 01111 00000 01101 01011 00001</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">转成十进制</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\"> 28</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">29</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">4</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">15</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">0</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">13</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">11</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">1</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">，十进制对应的编码就是</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">wx4g0ec1</span><span style=\"font-size:14px;font-family: 宋体;color:#362E2B\">。同理，将编码转换成经纬度的解码算法与之相反，具体不再赘述。</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family: 宋体;color:#362E2B\"><img src=\"/static/upload/bigpic/20151027/1445915653824211920.png\"/></span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">由上可知，字符串越长，表示的范围越精确。当</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">GeoHash base32</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">编码长度为</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">8</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">时，精度在</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">19</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">米左右，而当编码长度为</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">9</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">时，精度在</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">2</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">米左右，编码长度需要根据数据情况进行选择。不过从</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">GeoHash</span><span style=\"font-size:14px;font-family: 宋体;color:#362E2B\">的编码算法中可以看出它的一个缺点，位于边界两侧的两点，虽然十分接近，但编码会完全不同。实际应用中，可以同时搜索该点所在区域的其他八个区域的点，即可解决这个问题。</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:0;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">&nbsp;</span></p><p style=\"margin-top:auto;margin-bottom:auto;text-indent:28px;line-height:26px;background:white\"><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">以上原理部分是我从网路上摘录的，以下是我的</span><span style=\"font-size:14px;font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#362E2B\">c</span><span style=\"font-size:14px;font-family:宋体;color:#362E2B\">实现方法：</span></p><p style=\"text-indent:0;background: white\"><span style=\"font-size:13px;line-height:150%;font-family: &#39;Courier New&#39;;color:teal\">/**</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* C</span><span style=\"font-size: 13px;font-family:宋体;color:teal\">语言实现版本</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;*/</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#804000\">#include<stdio.h></stdio.h></span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#804000\">#define BASE32 &quot;0123456789bcdefghjkmnpqrstuvwxyz&quot;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">把</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">ASCII</span><span style=\"font-size:13px;font-family:宋体;color:green\">码表搬下来，去掉我们不用的字符，将解码要用的下标转换如下</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">static</span> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> UNBASE32</span><strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">[]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">={</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">3</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">4</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">5</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">6</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">7</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">8</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">9</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">10</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">11</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">12</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">13</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">14</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">15</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">16</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">17</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">18</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">19</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">20</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">21</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">22</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">23</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">24</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">25</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">26</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">27</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">28</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">29</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">30</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">31</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">};</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">/**</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param latitude </span><span style=\"font-size:13px;font-family:宋体;color:teal\">纬度</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param longitude </span><span style=\"font-size:13px;font-family:宋体;color:teal\">经度</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param precision </span><span style=\"font-size:13px;font-family:宋体;color:teal\">字符编码结果的长度（精度）</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param geohash </span><span style=\"font-size:13px;font-family:宋体;color:teal\">编码结果</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;*/</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">void</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> geohash_encode</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> latitude</span><strong><span style=\"font-size:13px;font-family: &#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> longitude</span><strong><span style=\"font-size:13px;font-family: &#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> precision</span><strong><span style=\"font-size:13px;font-family: &#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> is_odd </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">是否奇数标志，</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">1</span><span style=\"font-size:13px;font-family:宋体;color:green\">奇数</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\"> 0</span><span style=\"font-size:13px;font-family:宋体;color:green\">偶数</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">编码计数</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">];</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">纬度，</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">lats[0]</span><span style=\"font-size:13px;font-family:宋体;color:green\">当前查找区间的左边界，最小值；</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">lats[1]</span><span style=\"font-size:13px;font-family:宋体;color:green\">当前查找范围的右边界，最大值；</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">];</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">经度，</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">lons[0]</span><span style=\"font-size:13px;font-family:宋体;color:green\">当前查找区间的左边界，最小值；</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">lons[1]</span><span style=\"font-size:13px;font-family:宋体;color:green\">当前查找范围的右边界，最大值；</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">对当前查找区间向左或向右折半后，新的边界值。</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> bits</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0x10</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0x08</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0x04</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0x02</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0x01</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">};</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">用二进制表示，依次为</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\"> {00010000,00001000,00000100,00000010,00000001}</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> bit </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//bits</span><span style=\"font-size:13px;font-family: 宋体;color:green\">的下标</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> tmp </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">每计算满</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">5</span><span style=\"font-size:13px;font-family:宋体;color:green\">位二进制位后，进行一次</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">Base32</span><span style=\"font-size:13px;font-family: 宋体;color:green\">编码，然后清零重复计算。这个值就是临时存储</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">5</span><span style=\"font-size:13px;font-family:宋体;color:green\">位二进制中间值的。</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">初始化，将查找区间设为最大。</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">90.0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">90.0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">180.0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">180.0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">while</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;&lt; span=&quot;&quot;&gt;<!--<--><!--<--><!--<--><!--<--><!--<--></span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> precision</span><strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">is_odd</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">奇数，处理纬度</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mid </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">])</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">/</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">latitude </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&gt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">|=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> bits</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">bit</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">];</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">偶数，处理经度</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mid </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">])</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">/</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">longitude </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&gt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">落在右侧</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">|=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> bits</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">bit</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">];</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">求</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">“</span><span style=\"font-size:13px;font-family:宋体;color:green\">或</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">”</span><span style=\"font-size:13px;font-family:宋体;color:green\">运算，实际是给第</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">i</span><span style=\"font-size:13px;font-family:宋体;color:green\">位赋值</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">“1”</span><span style=\"font-size:13px;font-family:宋体;color:green\">。</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">落在左侧，给第</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">i</span><span style=\"font-size:13px;font-family:宋体;color:green\">位赋值</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">“0”</span><span style=\"font-size:13px;font-family:宋体;color:green\">，由于初始化就是</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">0</span><span style=\"font-size:13px;font-family:宋体;color:green\">，所以这里不用操作了。</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is_odd </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">!</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">is_odd</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">取反</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">bit </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;&lt; span=&quot;&quot;&gt;<!--<--><!--<--><!--<--><!--<--><!--<--></span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">4</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bit</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">满</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">4bit</span><span style=\"font-size:13px;font-family:宋体;color:green\">，进行</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">base32</span><span style=\"font-size:13px;font-family:宋体;color:green\">编码，然后对中间值清零</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">++]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> BASE32</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">tmp</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">];</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">进行</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">Base32</span><span style=\"font-size:13px;font-family:宋体;color:green\">编码</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bit </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">最后一位置</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">0</span><span style=\"font-size:13px;font-family:宋体;color:green\">，数组结束标志</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">二分查找</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> find</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> c</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">){</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> start </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> end </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">31</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">15</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">for</span></strong><strong><span style=\"font-size:13px;font-family: &#39;Courier New&#39;;color:navy\">(;;){</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">二分查找</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;mid </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">start </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> end</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">/</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">BASE32</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">==</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> c </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">||</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> start </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&gt;=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> end</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">){</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">return</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">c </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;&lt; span=&quot;&quot;&gt;<!--<--><!--<--><!--<--><!--<--><!--<--></span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> BASE32</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]){</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">左侧</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; start </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">右侧</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">void</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> geohash_decode</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">latitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">longitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">precision</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">const</span> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">){</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> is_even </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> index </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> tmp1 </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> bit </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">];</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">];</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">p </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">precision </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp; &nbsp;lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">90.0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">90.0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">180.0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">180.0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">while</span></strong><strong><span style=\"font-size:13px;font-family: &#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">!=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">p</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">){</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bit </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//index = find(*p);</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> UNBASE32</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[(*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">p </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:gray\">&#39;0&#39;</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)];</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">while</span></strong><strong><span style=\"font-size:13px;font-family: &#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">bit</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;&lt; span=&quot;&quot;&gt;<!--<--><!--<--><!--<--><!--<--><!--<--></span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">5</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">){</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp1 </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">index </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&gt;&gt;</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">4</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">bit</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">))</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&amp;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0x01</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">将结果右移到最低位，和</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">1</span><span style=\"font-size:13px;font-family:宋体;color:green\">求</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">“</span><span style=\"font-size:13px;font-family:宋体;color:green\">与</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">”</span><span style=\"font-size:13px;font-family:宋体;color:green\">后，取出值</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">is_even</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">){</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mid </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">])</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">/</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">tmp1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">右区间</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mid </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">])</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">/</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">tmp1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> mid</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is_even </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">!</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">is_even</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bit</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//printf(&quot;%d %c [%f,%f %f,%f]\\n&quot;, index, *p, lats[0], lats[1], lons[0], lons[1]);</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">precision</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)++;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">latitude </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lats</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">])</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">/</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">longitude </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> lons</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">])</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">/</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">2</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> main</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(){</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> latitude </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">39.909605</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">double</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> longitude </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">116.397228</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> precision </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">5</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">char</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">20</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">];</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; geohash_encode</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">latitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> longitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> precision</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; printf</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:gray\">&quot;[%f,%f] </span><span style=\"font-size:13px;font-family:宋体;color:gray\">编码结果</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:gray\">:%s\\n&quot;</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> latitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> longitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; latitude </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; longitude </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; precision </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; geohash_decode</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(&amp;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">latitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&amp;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">longitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&amp;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">precision</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; printf</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:gray\">&quot;%s </span><span style=\"font-size:13px;font-family:宋体;color:gray\">解码结果</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:gray\">:[%f,%f] %d\\n&quot;</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> geohash</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> latitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> longitude</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> precision</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">return</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">执行结果：</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">经度为</span>5<span style=\"font-family:宋体\">的时候</span></p><p style=\"text-indent:29px\"><span style=\"background:#D9D9D9\">[<span style=\"color:#00B0F0\">39.9</span>09605,<span style=\"color:#00B0F0\">116.3</span>97228] </span><span style=\"font-family:宋体;background:#D9D9D9\">编码结果</span><span style=\"background:#D9D9D9\">:wx4g0</span></p><p style=\"text-indent:29px\"><span style=\"background:#D9D9D9\">wx4g0 </span><span style=\"font-family:宋体;background:#D9D9D9\">解码结果</span><span style=\"background:#D9D9D9\">:[<span style=\"color:#00B0F0\">39.9</span>24316,<span style=\"color:#00B0F0\">116.3</span>89160] 5</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">经度为</span>10<span style=\"font-family:宋体\">的时候</span></p><p style=\"text-indent:29px\"><span style=\"background:#D9D9D9\">[<span style=\"color:#00B050\">39.90960</span>5,<span style=\"color:#00B050\">116.39722</span>8] </span><span style=\"font-family:宋体;background:#D9D9D9\">编码结果</span><span style=\"background:#D9D9D9\">:wx4g09mf7c</span></p><p style=\"text-indent:29px\"><span style=\"background:#D9D9D9\">wx4g09mf7c </span><span style=\"font-family:宋体;background:#D9D9D9\">解码结果</span><span style=\"background:#D9D9D9\">:[<span style=\"color:#00B050\">39.90960</span>4,<span style=\"color:#00B050\">116.39722</span>3] 10</span></p><p><span style=\"font-size:15px;line-height:150%;font-family:宋体\">经过对比，明显能看出精度为</span><span style=\"font-size:15px;line-height:150%;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">10</span><span style=\"font-size:15px;line-height:150%;font-family:宋体\">的时候，解码的结果更接近原始经纬度值。</span></p><p><br/></p>',',技术,',248,0,'2015-10-27 11:06:21','2015-11-05 14:04:54',0,NULL,0,NULL),(21,1,'排列组合(C语言实现)','C语言，采用递归调用的方式实现排列和组合，代码如下','','',0,'C语言，采用递归调用的方式实现排列和组合，代码如下\r\n```\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint array[] = {1,2,3,4};\r\n#define N  4\r\n#define M  3\r\nint queue[N] = {0}; //保存已经找到的结果，前缀\r\nint top = 0; //队列顶部下标\r\nint flag[N] = {0}; //是否已经排列过了的标志\r\n\r\n/*\r\n  排列\r\n  @param s 递归深度\r\n  @param n 数组最大长度\r\n */\r\nvoid perm(int s, int n)\r\n{\r\n    int i;\r\n    if (s > n) // 越界递归结束\r\n    {\r\n        return;\r\n    }\r\n\r\n    if (s == n) // 找到结果，打印，递归结束\r\n    {\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            printf(\"%d\", queue[i]);\r\n        }\r\n        printf(\"\\t\");\r\n        return ;\r\n    }\r\n\r\n    for (i = 0; i < n; i++)\r\n    {\r\n        if (flag[i] == 0)\r\n        {\r\n            flag[i] = 1;\r\n            queue[s] = array[i];\r\n            perm(s+1, n);\r\n            flag[i] = 0;\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\n  组合\r\n  @param s 递归深度\r\n  @param n 数组最大长度\r\n  @param m 需要的组合长度\r\n */\r\nvoid comb(int s, int n, int m)\r\n{\r\n    int i = 0;\r\n    if (s > n) // 越界递归结束\r\n        return ;\r\n\r\n    if (top == m) // 找到结果，打印，递归结束\r\n    {\r\n        for (i = 0; i < m; i++)\r\n        {\r\n            printf(\"%d\", queue[i]);\r\n        }\r\n        printf(\"\\t\");\r\n        return ;\r\n    }\r\n\r\n    queue[top++] = array[s];\r\n    comb(s+1, n, m); //向下一级递归\r\n    top—;\r\n    comb(s+1, n, m); //向下一级递归\r\n}\r\n\r\nint main()\r\n{\r\n    int i = 0;\r\n    printf(\"全排列:\\n\");\r\n    perm(0, N);\r\n    printf(\"\\n1~%d的所有组合:\\n\", N);\r\n    for(i=1; i<=N; i++){\r\n        comb(0, N, i);\r\n    }\r\n    printf(\"\\n\");\r\n    return 0;\r\n}\r\n```\r\n结果:\r\n\r\n\r\n全排列:\r\n```\r\n1234    1243    1324    1342    1423    1432    2134    2143    2314    2341    2413    2431    3124    3142    3214    3241   3412     3421    4123    4132    4213    4231    4312    4321\r\n```\r\n1~4的所有组合:\r\n```\r\n1       2       3       4       12      13      14      23      24      34      123     124     134     234     1234\r\n```',',技术,',66,0,'2015-10-29 04:11:39','2017-05-15 01:33:46',0,'',0,NULL),(22,1,'神奇的求平方根的代码','有人在Quake III的源代码里面发现这么一段用来求平方根的代码。0×5f3759df？ 这是个什么东西？ 学过数值分析就知道，算法里面求平方根一般采用的是无限逼近的方法，比如牛顿迭代法，抱歉当年我数值分析学的太烂，也讲不清楚。','','',0,'有人在Quake III的源代码里面发现这么一段用来求平方根的代码。0×5f3759df？ 这是个什么东西？ 学过数值分析就知道，算法里面求平方根一般采用的是无限逼近的方法，比如牛顿迭代法，抱歉当年我数值分析学的太烂，也讲不清楚。简单来说比如求5的平方根，选一个猜测值比如2，那么我们可以这么算：\r\n\r\n 5/2 = 2.5; 2.5+2/2 = 2.25; 5/2.25 = xxx; 2.25+xxx/2 = xxxx …\r\n\r\n这样反复迭代下去，结果必定收敛于sqrt(5)，没错，一般的求平方根都是这么算的。而卡马克的不同之处在于，他选择了一个神秘的猜测值 0×5f3759df作为起始，使得整个逼近过程收敛速度暴涨，对于Quake III所要求的精度10的负三次方，只需要一次迭代就能够得到结果。普渡大学的数学家Chris Lomont看了以后觉得有趣，决定要研究一下卡马克弄出来的这个猜测值有什么奥秘。Lomont也是个牛人，在精心研究之后从理论上也推导出一个最佳猜 测值，和卡马克的数字非常接近, 0×5f37642f。卡马克真牛，他是外星人吗？传奇并没有在这里结束。Lomont计算出结果以后非常满意，于是拿自己计算出的起始值和卡马克的神秘 数字做比赛，看看谁的数字能够更快更精确的求得平方根。结果是卡马克赢了… 谁也不知道卡马克是怎么找到这个数字的。最后Lomont怒了，采用暴力方法一个数字一个数字试过来，终于找到一个比卡马克数字要好上那么一丁点的数字， 虽然实际上这两个数字所产生的结果非常近似，这个暴力得出的数字是0×5f375a86。\r\n\r\n```\r\n#include <stdio.h>\r\n\r\n/*================SquareRootFloat================*/\r\nfloat SquareRootFloat(float number)\r\n{\r\n    long i;\r\n    float x, y;\r\n    const float f = 1.5F;\r\n    x = number 0.5F;\r\n    y = number;\r\n    i = ( long ) &y;\r\n    i = 0x5f3759df - ( i >> 1 ); // 注意这一行\r\n    y = ( float ) &i; y = y ( f - ( x y y ) );\r\n    y = y ( f - ( x y y ) );\r\n    return number y;\r\n}\r\n/*===============================================*/\r\n\r\nint main()\r\n{\r\n    printf(\"%f\\n\", SquareRootFloat(5));\r\n    return 0;\r\n}\r\n```',',技术,',131,0,'2015-10-30 19:37:41','2017-06-14 10:40:34',0,'',1,'http://www.vimer.cn?p=334'),(23,1,'【转】小白鼠喝毒水问题-海明码',NULL,'','',0,'<span id=\"_baidu_bookmark_start_2\" style=\"display: none; line-height: 0px;\"><span style=\"line-height: 0px;\">﻿</span>‍</span><span id=\"_baidu_bookmark_start_5\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_8\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_11\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_14\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_17\" style=\"display: none; line-height: 0px;\">‍</span><p><span id=\"_baidu_bookmark_start_1\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_4\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_7\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_10\" style=\"display: none; line-height: 0px;\">‍</span></p><p>&nbsp; &nbsp; 有1000瓶水，其中有一瓶有毒，小白鼠只要尝一点带毒的水24小时后就会死亡，至少要多少只小白鼠才能在24小时时鉴别出哪瓶水有毒？</p><p>&nbsp; &nbsp; 这是一道很经典的面试题目，先说解题方法吧，2^n &gt;= 1000,其中n就是小白鼠的数量。如果知道答案了，也许很多人就恍然大雾，当然有些专业的人士用下面的归纳法证明了下：</p><p>1）当n=1时，即有2瓶水，任取一瓶水喂老鼠，若24小时后老鼠死，则此瓶水有毒；若24小时后老鼠没死，则此瓶水无毒，另一瓶水有毒。课件只需一个老鼠即可判断出哪瓶有毒。即当n=1时命题成立。</p><p>2）假设当n=k(k&gt;1)时，命题为真。即须k只老鼠即可判断出哪瓶水有毒。</p><p>&nbsp; &nbsp;则当n=k+1时，即有2^(n+1)瓶水。</p><p>&nbsp; &nbsp;将水分成2组，命名为P1和P2，每组2^n瓶水.</p><p>&nbsp; &nbsp;则这两组瓶中有一组全没毒，另一组中有仅一瓶有毒。</p><p>&nbsp; &nbsp;a) 取1只老鼠、任取一组瓶子，假设取的是P1，将P1中的全部瓶子水都让老鼠尝一下。则24小时后可以根据此老鼠的生死情况判断毒药在哪一组。</p><p>&nbsp; &nbsp;b) 取k只老鼠，根据假设可知当n=k时，可判断哪瓶水有毒。用这k只老鼠同时去检测P1和P2，则24小时后可挑出P1中的某一瓶和P2中的某一瓶，这两瓶可能有毒。</p><p>&nbsp; &nbsp;根据a、b中的结果综合分析，可得知毒药瓶是哪一个。</p><p>&nbsp; &nbsp;即当n=k+1时，命题为真。</p><p>命题得证。</p><p><br/></p><p>这个证明应该是没问题，但是我很感兴趣的就是，如何猜出来这个命题的哪？我就说下这个过程吧，来检测瓶中的水有没有毒，只能靠小白鼠死没死亡来判断，也就是2种状态，这里1表示死亡，0表示存活。那么10个小白鼠，那么可以表示2^10（代表10次方）种状态，也就是1024。那么这1024种状态能不能对应出那瓶水有毒那，如果可以这个题目就解决了。看到这里，又回到了上面的证明，这个归纳法明显可以证明，此猜想没问题。由此归纳法可以看出，此问题符合算法中的，动态规划法，也就是该问题可以分解成更小的问题，1000（也就是1024瓶以内）瓶水给10个老鼠喝，512（512瓶水以内）瓶水给9个老鼠喝...以此类推，平且每个大问题的子问题，还跟这个大问题有关系，由数学归纳法证明的第二步，可以看出，通过子问题的解决，更大的问题带入到步骤2中就可以解决了。</p><p>以上步骤说了半天都是，说明此方法是正确的，可证明的。但是如果要问怎么安排老鼠喝水，才能判断那瓶有毒那？也就是把这个动态规划的算法如何来实现。其实改归纳法证明中的第二步骤中的b)后面的内容，已经透露出了运用的实现方法。也就是把有所有的水给某一个老鼠M10喝，剩下的老鼠喝的水都不能包含M10喝的那瓶毒水，那么如果M10死亡了，剩下的都活着，就检查出来毒水了。以此类推老鼠M9喝的水肯定包含一瓶其他老鼠都没喝过的，这样才能检查出这瓶水有毒。这样我们就可以得出下面的结论：</p><p>1 表示死亡 0 表示存活</p><p>0000000001 &nbsp; &nbsp; &nbsp;M1喝了第一瓶的水，其他老鼠都没喝，那么M1老鼠死亡，其他没死推断出第1瓶水有毒</p><p>0000000010 &nbsp; &nbsp; &nbsp;M2喝了第二瓶的水，其他老鼠都没喝，那么M2老鼠死亡，其他没死推断出第2瓶水有毒</p><p>0000000100 &nbsp; &nbsp; &nbsp;M3喝了第4（2^2）瓶的水，其他老鼠都没喝，那么M3老鼠死亡，其他没死推断出第4(2^2)瓶水有毒</p><p>......</p><p>这里开始有疑问了，那么从第2---第4瓶水，中间的那瓶水有毒如何推断那？这里就用到一个方法叫组合。11代表第3瓶水有毒，也就是M1和M2必须同时喝第三瓶水，而M3不能喝，那么M1和M2死，M3没死就可以得出第三瓶水有毒。下面的各瓶水的判断，都快可以依据这个理论类推，根据上面数学归纳的证明，应该可以判断出来所有的剩余的水。这里可以发现一个显而易见的规律，M1老鼠所有奇数位置的水都得喝，因为M1老鼠可以测试有毒瓶子的位置为xxxxxxxxx1 (x代表未知)，换成10进制必须包含一个2^0也就是1，那显然是奇数。只有这样才能组合出水的位置，从刚才第三瓶水的判断也可以看出。M2老鼠喝水当然也有规律了，xxxxxxxx1x，换成10进制必须包含2^1也就是2，根据2进制转换成10进制的算法，我们看下面的数字，4号瓶子(100)2=(4)10==2^2 ,3号瓶 (11)2=(3)10=2^1 + 2^0 , 2号瓶(10)2=(2)10= 2^1 , 1号瓶(1)2=(1)10=2^0。其中3就包含了2^1方，也就是3号瓶子的水，M2必须喝，根据这个方法(101)2=(5)10=2^2 + 2^0那么5号M2就不用喝，我们总结下就可以看出，其实M2如果换成10进制的话，每隔2个位置就需要M2喝，也就是6，8，10，12...都需要。那么M3那同理根据这个推算方式，每隔4个位置就需要M3喝，也就是4，8，12...。至此所有的老鼠应该喝的水所在的瓶子的位置都判断出来了。</p><p>上面的方法，讲完后，如果你学习过计算机网络中海明码的编码规则，那你岂不是就恍然大悟了。这不就是海明码的编码规则么？下面我们就对比下海明码的编码规则：</p><h2 style=\"line-height: 26px;background: white\"><span style=\"font-family:华文行楷;color:#333333\">下面看如何计算海明码</span><span style=\"font-family:&#39;Arial&#39;,&#39;sans-serif&#39;;color:#333333\">(Hamming Code )</span></h2><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">海明码</span>(Hamming Code )<span style=\"font-family:宋体\">编码的关键是使用多余的奇偶校验位来识别一位错误。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">码字</span>(Code Word)&nbsp;<span style=\"font-family:宋体\">按如下方法构建：</span></p><p style=\"text-indent:29px\">1<span style=\"font-family:宋体\">、把所有</span>2<span style=\"font-family: 宋体\">的幂次方的数据位标记为奇偶校验位</span>(<span style=\"font-family:宋体\">编号为</span>1, 2, 4, 8, 16, 32, 64<span style=\"font-family:宋体\">等的位置</span>)<span style=\"font-family:宋体\">，如</span><span style=\"color:red\">10</span>1<span style=\"color:red\">1</span>011<span style=\"color:red\">1</span>0101101<span style=\"color:red\">1</span>10…<span style=\"font-family: 宋体\">，从左往右，标红的是对应的校验位</span></p><p style=\"text-indent:29px\">2<span style=\"font-family:宋体\">、其他数据位用于待编码数据</span>. (<span style=\"font-family:宋体\">编号为</span>3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17<span style=\"font-family:宋体\">等的位置</span>)</p><p style=\"text-indent:29px\">3<span style=\"font-family:宋体\">、每个奇偶校验位的值代表了代码字中部分数据位的奇偶性，其所在位置决定了要校验和跳过的比特位顺序。</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">位置</span>1<span style=\"font-family:宋体\">：校验</span>1<span style=\"font-family:宋体\">位，跳过</span>1<span style=\"font-family: 宋体\">位，校验</span>1<span style=\"font-family:宋体\">位，跳过</span>1<span style=\"font-family:宋体\">位</span>(1,3,5,7,9,11,13,15,…) &nbsp;&nbsp;<span style=\"font-family:宋体;color:red\">这里和老鼠和水的位置是不是一样的</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">位置</span>2<span style=\"font-family:宋体\">：校验</span>2<span style=\"font-family:宋体\">位，跳过</span>2<span style=\"font-family: 宋体\">位，校验</span>2<span style=\"font-family:宋体\">位，跳过</span>2<span style=\"font-family:宋体\">位</span>&nbsp;(<span style=\"color:#00B0F0\">2,3</span>,6,7,<span style=\"color:#00B0F0\">10,11</span>,14,15,…)</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">位置</span>4<span style=\"font-family:宋体\">：校验</span>4<span style=\"font-family:宋体\">位，跳过</span>4<span style=\"font-family: 宋体\">位，校验</span>4<span style=\"font-family:宋体\">位，跳过</span>4<span style=\"font-family:宋体\">位</span>(<span style=\"color:#00B0F0\">4,5,6,7</span>,12,13,14,15,<span style=\"color:#00B0F0\">20,21,22,23</span>,…)</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">位置</span>8<span style=\"font-family:宋体\">：校验</span>8<span style=\"font-family:宋体\">位，跳过</span>8<span style=\"font-family: 宋体\">位，校验</span>8<span style=\"font-family:宋体\">位，跳过</span>8<span style=\"font-family:宋体\">位</span>(8-15,24-31,40-47,…)</p><p style=\"text-indent:29px\">…</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">如果全部校验的位置中有奇数个</span>1<span style=\"font-family:宋体\">，把该奇偶校验位置为</span>1<span style=\"font-family:宋体\">；如果全部校验的位置中有偶数个</span>1<span style=\"font-family:宋体\">，把该奇偶校验位置为</span>0.</p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">举例说明：</span></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">一个字节的数据：</span>10011010</p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">构造数据字</span>(Data Word),<span style=\"font-family:宋体\">对应的校验位留空</span>_ _ 1 _ 0 0 1 _ 1 0 1 0</p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">计算每个校验位的奇偶性</span>&nbsp;( ?<span style=\"font-family:宋体\">代表要设置的比特位</span>):</p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">位置</span>1<span style=\"font-family:宋体\">检查</span>1,3,5,7,9,11:</p><p style=\"text-indent: 29px\">? _&nbsp;<span style=\"color:#FF6600\">1</span>&nbsp;_&nbsp;<span style=\"color:#FF6600\">0</span>&nbsp;0&nbsp;<span style=\"color:#FF9900\">1</span>&nbsp;_&nbsp;<span style=\"color:#FF9900\">1</span>&nbsp;0&nbsp;<span style=\"color:#FF9900\">1</span>&nbsp;0.&nbsp;<span style=\"font-family: 宋体\">偶数个</span>1<span style=\"font-family:宋体\">，因此位置</span>1<span style=\"font-family:宋体\">设为</span>0<span style=\"font-family:宋体\">，即</span>: 0 _ 1 _ 0 0 1 _ 1 0 1 0</p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">位置</span>2<span style=\"font-family:宋体\">检查</span>2,3,6,7,10,11:</p><p style=\"text-indent: 29px\">0<span style=\"color:#993300\">&nbsp;?</span>&nbsp;<span style=\"color:red\">1</span>&nbsp;_ 0&nbsp;<span style=\"color:red\">0 1</span>&nbsp;_ 1&nbsp;<span style=\"color: red\">0 1</span>&nbsp;0.&nbsp;<span style=\"font-family:宋体\">奇数个</span>1<span style=\"font-family:宋体\">，因此位置</span>2<span style=\"font-family:宋体\">设为</span>1<span style=\"font-family:宋体\">，即</span>: 0 1 1 _ 0 0 1 _ 1 0 1 0</p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">位置</span>4<span style=\"font-family:宋体\">检查</span>4,5,6,7,12:</p><p style=\"text-indent: 29px\">0 1 1 ?&nbsp;<span style=\"color:red\">0 0 1</span>&nbsp;_ 1 0 1&nbsp;<span style=\"color:red\">0</span>.&nbsp;<span style=\"font-family:宋体\">奇数个</span>1<span style=\"font-family:宋体\">，因此位置</span>4<span style=\"font-family:宋体\">设为</span>1<span style=\"font-family:宋体\">，即</span>: 0 1 1 1 0 0 1 _ 1 0 1 0</p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">位置</span>8<span style=\"font-family:宋体\">检查</span>8,9,10,11,12:</p><p style=\"text-indent: 29px\">0 1 1 1 0 0 1 ?&nbsp;<span style=\"color:red\">1 0 1 0</span>.&nbsp;<span style=\"font-family:宋体\">偶数个</span>1<span style=\"font-family:宋体\">，因此位置</span>8<span style=\"font-family:宋体\">设为</span>0<span style=\"font-family:宋体\">，即</span>: 0 1 1 1 0 0 1 0 1 0 1 0</p><p style=\"text-indent: 29px\"><br/></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">因此码字为</span>: 011100101010.</p><p style=\"text-indent: 28px;line-height: 26px;background: white\"><strong><span style=\"font-size:14px;font-family:宋体;color:#333333\">&nbsp;</span></strong><strong><span style=\"font-size:14px;font-family:宋体;color:#333333\">查找并纠错一位错误</span></strong></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">上例中构建了一个码字</span>&nbsp;011100101010<span style=\"font-family:宋体\">，假定实际接收到的数据是</span>011100101110.&nbsp;<span style=\"font-family:宋体\">则接收方可以计算出哪一位出错并对其进行更正。方法就是验证每一个校验位。记下所有出错的校验位，可以发现校验位</span>2<span style=\"font-family:宋体\">和</span>8<span style=\"font-family:宋体\">的数据不正确</span>.&nbsp;<span style=\"font-family:宋体\">错误校验位</span>&nbsp;2 + 8 = 10,&nbsp;<span style=\"font-family:宋体\">则位置</span>10<span style=\"font-family: 宋体\">的数据出错。一般说来，对所有校验位进行检查</span>,&nbsp;<span style=\"font-family:宋体;color:#00B0F0\">将所有出错的校验位置相加</span><span style=\"color:#00B0F0\">,&nbsp;</span><span style=\"font-family:宋体;color:#00B0F0\">得到的就是错误信息所在的位置</span>.</p><p style=\"text-indent: 29px\"><span style=\"font-size: 14px; line-height: 21px; text-indent: 29px;\">转自&nbsp;</span><a href=\"http://blog.csdn.net/mengtnt/article/details/8477747\" _src=\"http://blog.csdn.net/mengtnt/article/details/8477747\" style=\"font-size: 14px; line-height: 21px; text-indent: 29px; white-space: normal;\">http://blog.csdn.net/mengtnt/article/details/8477747</a><span style=\"font-size: 14px; line-height: 21px; text-indent: 29px;\">&nbsp;针对原文做了部分修改。</span></p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"text-indent:29px\">&nbsp;</p><p><br/></p>',',技术,',58,0,'2015-10-30 22:36:23','2015-10-30 22:47:44',0,NULL,1,NULL),(24,1,'大数取模','【问题】求大数取模如：2147483647 的 2147483647次方与28461取模？\r\n\r\n知道大数取模的二进制方法么？','','',0,'【问题】求大数取模如：2147483647 的 2147483647次方与28461取模？\r\n\r\n知道大数取模的二进制方法么？\r\n\r\n举个例子。\r\n\r\n设要计算(5^100)%7 （\'^\'表示乘方运算）\r\n\r\n因100=502，\r\n\r\n故(5^100)%7=((5^50)^2)%7=(((5^50)%7)^2)%7。\r\n\r\n现在，我们只要计算(5^50)%7的值，代入上式就可以得到(5^100)%7的值。\r\n\r\n而(5^50)%7比(5^100)%7显然要好计算，因为指数已经减少了2倍。\r\n\r\n现在，我们要计算(5^50)%7的值，我们仍可按照上面的方法来进行：\r\n\r\n50=252\r\n\r\n于是：(5^50)%7==((5^25)^2)%7。\r\n\r\n再就是求(5^25)%7的值。\r\n\r\n因25=122+1\r\n\r\n故：(5^25)%7=(((5^12)^2)5)%7。\r\n\r\n再就是求(5^12)%7…\r\n\r\n最后，我们注意到，我们将指数分解的是按照指数的二进制形式来进行的。\r\n\r\n以下是解决的代码，来自 http://blog.sina.com.cn/s/blog_6a14dbb701014fns.html\r\n```\r\n(a+b)%n=(a%n+b%n)%n\r\n(a-b)%n=(a%n-b%n+n)%n\r\n\r\n```\r\n为什么要加n，由于a%n可能小于b%n,所以加n保证为正整数\r\n\r\n```\r\n\r\na*b%n=(a%n*b%n)%n\r\n\r\n```\r\n\r\n这些事大整数取模的基础\r\n\r\n```\r\nint mod(char str[],int num)\r\n{\r\n    int number[100];\r\n    for(int i=0;i<strlen(str);i++)\r\n     number[i]=str[i]-\'0\';\r\n    int remainder=0;\r\n    for(int i=0;i<strlen(str);i++)\r\n    {\r\n        remainder=((long long)remainder*10+number[i])%num;\r\n    }\r\n    return remainder;\r\n}\r\n```\r\n\r\n幂取模\r\n```\r\nint pow_mod(int a,int n,int m)\r\n{\r\n    if(n==1) return a;\r\n    else\r\n    {\r\n        int x=pow_mod(int a,int n/2,int m)\r\n        long long x=(long long)x*x%m;\r\n        if(n%2==1)\r\n           x=(long long)x*a%m;\r\n        return (int)x;\r\n     }\r\n}\r\n```\r\n字符串类型的数字\r\n```\r\nint mod(char str[],int num)\r\n{\r\n    int number[100];\r\n    for(int i=0;i<100;i++)\r\n     number[i]=str[i]-\'0\';\r\n    int remainder=0;\r\n    for(int i=0;i<100;i++)\r\n    {\r\n        remainder=((long long)remainder10+number[i])%num;\r\n    }\r\n    return remainder;\r\n}\r\n```\r\n之所以强制转换为long long ，是为了防止乘法过程中溢出\r\n\r\n```\r\n/**\r\n\r\n  大整数取模，转自 http://bbs.csdn.net/topics/210031004和http://blog.sina.com.cn/s/blog_6a14dbb701014fns.html\r\n\r\n /\r\n\r\n#include\r\n\r\n#include\r\n\r\n \r\n\r\n/**\r\n\r\n  a^n%mod=? a的n次方，对mod取模的结果\r\n\r\n  @param   a 底数\r\n\r\n  @param   n 指数\r\n\r\n  @param   mod 模\r\n\r\n  @return  余数\r\n\r\n /\r\n\r\nint Mod(int a, int n, int mod)\r\n\r\n{\r\n\r\n    if(n==1) //指数为1的时候，直接输出模结果。\r\n\r\n        return a % mod;\r\n\r\n    else\r\n\r\n    {\r\n\r\n        long long x = Mod(a, n >>= 1, mod); //指数除以2,降为原来的一半，再递归调用，算出子值。\r\n\r\n        x = x x % mod; //平方后取模\r\n\r\n        if(n & 1) //指数为奇数，再加一个次幂后取模的计算\r\n\r\n            x = x a % mod;\r\n\r\n        return (int)x;\r\n\r\n     }\r\n\r\n}\r\n\r\n \r\n\r\n/**\r\n\r\n  超过整型长度的数字，用字符串表示，对mod取模的结果\r\n\r\n  @param   str 底数\r\n\r\n  @param   mod 模\r\n\r\n  @return  余数\r\n\r\n /\r\n\r\nint Modstr(char str[],int mod)\r\n\r\n{\r\n\r\n    int number[100];\r\n\r\n    int i = 0;\r\n\r\n    for(i=0;i < strlen(str);i++)\r\n\r\n        number[i]=str[i]-\'0\';\r\n\r\n    int remainder=0;\r\n\r\n    for(i=0;i < strlen(str);i++)\r\n\r\n    {\r\n\r\n        remainder = ((long long)remainder * 10 + number[i]) % mod;\r\n\r\n    }\r\n\r\n    return remainder;\r\n\r\n}\r\n\r\n \r\n\r\nint main(){\r\n\r\n    printf(\"Mod 5^3 %% 7 = %d\\n\", Mod(5, 3, 7));\r\n\r\n    printf(\"Mod 2053417840^2041433586 %% 29313 = %d\\n\", Mod(2053417840, 2041433586, 29313));\r\n\r\n    printf(\"Modstr 123434567890123 %% 5 = %d\\n\", Modstr(\"123434567890123\", 5));\r\n\r\n    return 0;\r\n\r\n}\r\n```\r\n运行结果\r\n\r\nMod 5^3 % 7 = 6\r\n\r\nMod 2053417840^2041433586 % 29313 = 15037\r\n\r\nModstr 123434567890123 % 5 = 3\r\n\r\n\r\n',',技术,',49,0,'2015-11-04 00:02:28','2017-07-28 18:59:17',0,'',1,'http://bbs.csdn.net/topics/210031004和http://blog.sina.com.cn/s/blog_6a14dbb701014fns.html'),(25,1,'斐波那契数列','一般而言，兔子在出生两个月后，就有繁殖能力，一对兔子每个月能生出一对小兔子来。如果所有兔都不死，那么一年以后可以繁殖多少对兔子？','','',0,'首先看一个兔子问题：\r\n\r\n一般而言，兔子在出生两个月后，就有繁殖能力，一对兔子每个月能生出一对小兔子来。如果所有兔都不死，那么一年以后可以繁殖多少对兔子？\r\n\r\n我们不妨拿新出生的一对小兔子分析一下：\r\n\r\n第一个月小兔子没有繁殖能力，所以还是一对；\r\n\r\n两个月后，生下一对小兔总数共有两对；\r\n\r\n三个月以后，老兔子又生下一对，因为小兔子还没有繁殖能力，所以一共是三对；\r\n\r\n……\r\n\r\n依次类推可以列出下表：\r\n\r\n/static/upload/bigpic/20151102/1446463851043410148.png\r\n\r\n以上生兔子的数列，就是斐波那契数列\r\n\r\n斐波那契数列，又称黄金分割数列，指的是这样一个数列：0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233，377，610，987，1597，2584，4181，6765，10946，17711，28657，46368……\r\n\r\n在较高的序列，两个连续的“斐波纳契数”的序列相互分割，将接近黄金比例（1.618:1或1:0.618）。\r\n\r\n特别指出：第0项是0，第1项是第一个1。\r\n\r\n这个数列从第2项开始，每一项都等于前两项之和。\r\n\r\n递推公式\r\n\r\n如果设F(n）为该数列的第n项（n∈N），那么这句话可以写成如下形式： \r\n\r\nF(0)=0，F(1)=1，F(n)=F(n-1)+F(n-2) (n≥2，n∈N)\r\n\r\n这是一个线性递推数列。\r\n\r\n代码实现\r\n```\r\n#include <stdio.h>\r\n\r\nint deep = 0;\r\n\r\n//斐波那契 递归方式\r\nint Fibonacci(int n)\r\n{\r\n    int fib = 0;\r\n    if(n==1 || n==2){\r\n        if(n > deep){\r\n            printf(\"0 1 1 \");\r\n            deep++;\r\n        }\r\n        return 1;\r\n    }\r\n    fib = Fibonacci(n-1) + Fibonacci(n-2);\r\n    if(n > deep){\r\n        printf(\"%d \", fib);\r\n        deep++;\r\n    }\r\n    return fib;\r\n}\r\n\r\n//斐波那契 迭代方式\r\nint Fibonacci1(int n){\r\n    int fib = 0;\r\n    int fib1 = 0;\r\n    int fib2 = 1;\r\n    int i = 0;\r\n    printf(\"0 1 \");\r\n    for(i=2; i<=< span=\"\">n; i++){\r\n        fib = fib1 + fib2;\r\n        fib1 = fib2;\r\n        fib2 = fib;\r\n        printf(\"%d \", fib);\r\n    }\r\n    return fib;\r\n}\r\n\r\nint main()\r\n{\r\n    int n = 20;\r\n    printf(\"n=%d\\n斐波那契 递归方式:\\n\", n);\r\n    Fibonacci(n);\r\n    printf(\"\\n斐波那契 迭代方式:\\n\");\r\n    Fibonacci1(n);\r\n    return 0;\r\n}\r\n```\r\n运行结果\r\n\r\nn=20\r\n\r\n斐波那契 递归方式:\r\n\r\n0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765\r\n\r\n斐波那契 迭代方式:\r\n\r\n0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765\r\n\r\n',',技术,',46,0,'2015-11-03 03:22:22','2017-05-15 01:38:15',0,'',0,NULL),(26,1,'抢红包的红包生成算法','过年微信红包很火，最近有个项目也要做抢红包，于是写了个红包的生成算法。','','',0,'算法思想摘自\r\n\r\nhttp://blog.csdn.net/hengyunabc/article/details/19177877\r\n\r\n不过这篇文章没有C实现的代码，我根据他的思想用C实现了红包算法，并且将结果复制到Excel绘制出概率分布图！\r\n过年微信红包很火，最近有个项目也要做抢红包，于是写了个红包的生成算法。\r\n\r\n<p style=\"text-indent:29px\"><strong><span style=\"font-family:宋体\">红包生成算法的需求</span></strong></p><p style=\"text-indent:29px\"><strong><span style=\"font-family:宋体\">预先生成所有的红包还是一个请求随机生成一个红包</span></strong></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">简单来说，就是<span style=\"color:#00B0F0\">把一个大整数</span></span><span style=\"color:#00B0F0\">m</span><span style=\"font-family:宋体;color:#00B0F0\">分解（直接以</span><span style=\"color:#00B0F0\">“</span><span style=\"font-family:宋体;color:#00B0F0\">分为单位，如</span><span style=\"color:#00B0F0\">1</span><span style=\"font-family:宋体;color:#00B0F0\">元即</span><span style=\"color:#00B0F0\">100</span><span style=\"font-family:宋体;color:#00B0F0\">）分解成</span><span style=\"color:#00B0F0\">n</span><span style=\"font-family:宋体;color:#00B0F0\">个小整数的过程</span><span style=\"font-family:宋体\">，小整数的范围是</span>[min, max]<span style=\"font-family:宋体\">。</span></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">最简单的思路，先保底，每个小红包保证有</span>min<span style=\"font-family:宋体\">，然后每个请求都随机生成一个</span>0<span style=\"font-family:宋体\">到</span>(max-min)<span style=\"font-family:宋体\">范围的整数，再加上</span>min<span style=\"font-family:宋体\">就是红包的钱数。</span></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">这个算法虽然简单，但是有一个弊端：最后生成的红包可能都是</span>min<span style=\"font-family:宋体\">钱数的。也就是说可能最后的红包都是</span>0.01<span style=\"font-family:宋体\">元的。</span></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">另一种方式是预先生成所有红包，这样就比较容易控制了。我选择的是预先生成所有的红包。</span></p><p style=\"text-indent:29px\"><strong><span style=\"font-family:宋体\">理想的红包生成算法</span></strong></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">理想的红包生成结果是平均值附近的红包比较多，大红包和小红包的数量比较少。</span></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">可以想像下，生成红包的数量的分布有点像</span><strong><span style=\"font-size:14px;line-height:150%;font-family:宋体;color:#333333\">正态分布</span></strong><span style=\"font-family:宋体\">。</span></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">那么如何实现这种平均线附近值比较多的要求呢？</span></p><p style=\"text-indent: 29px\"><span style=\"font-family:宋体\">就是要找到一种算法，可以提高平均值附近的概率。那么利用一种</span>”<span style=\"font-family:宋体\">膨胀</span>“<span style=\"font-family:宋体\">再</span>”<span style=\"font-family: 宋体\">收缩</span>“<span style=\"font-family:宋体\">的方式来达到这种效果。</span></p><p style=\"text-indent: 28px\"><strong><span style=\"font-size:14px;line-height:150%;font-family:宋体;color:#333333\">先平方，再生成平方范围内的随机数，再开方，那么概率就不再是平均的了。</span></strong></p><p><span style=\"font-size:15px;line-height:150%;font-family:宋体\">具体算法：</span></p><p style=\"text-indent:29px\">C<span style=\"font-family:宋体\">语言实现版本</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#804000\">#include &lt;stdio.h&gt;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#804000\">#include &lt;time.h&gt;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#804000\">#include &lt;math.h&gt;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#804000\">#include &lt;stdlib.h&gt;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> sqr</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> n</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">查表快，还是直接算快？</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">return</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> n </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> n</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> nextLong</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> n</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">return</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> rand</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">()%((</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> n</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> nextLong1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">return</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> rand</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">()%((</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">max </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">))</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">/**</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* </span><span style=\"font-size: 13px;font-family:宋体;color:teal\">生产</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">min</span><span style=\"font-size:13px;font-family:宋体;color:teal\">和</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">max</span><span style=\"font-size:13px;font-family:宋体;color:teal\">之间的随机数，但是概率不是平均的，从</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">min</span><span style=\"font-size:13px;font-family:宋体;color:teal\">到</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">max</span><span style=\"font-size:13px;font-family:宋体;color:teal\">方向概率逐渐加大。</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\"> </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* </span><span style=\"font-size: 13px;font-family:宋体;color:teal\">先平方，然后产生一个平方值范围内的随机数，再开方，这样就产生了一种</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:teal\">“</span><span style=\"font-size:13px;font-family:宋体;color:teal\">膨胀</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:teal\">”</span><span style=\"font-size:13px;font-family:宋体;color:teal\">再</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:teal\">“</span><span style=\"font-size:13px;font-family:宋体;color:teal\">收缩</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:teal\">”</span><span style=\"font-size:13px;font-family:宋体;color:teal\">的效果。</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\"> </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;*&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param min </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param max </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @return </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;*/</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> xRandom</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">return</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> sqrt</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">nextLong</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">sqr</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">max </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)));</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">/** </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;*&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param total </span><span style=\"font-size:13px;font-family:宋体;color:teal\">红包总金额</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param count </span><span style=\"font-size:13px;font-family:宋体;color:teal\">红包数量</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param max </span><span style=\"font-size:13px;font-family:宋体;color:teal\">每个小红包的最大金额</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param min </span><span style=\"font-size:13px;font-family:宋体;color:teal\">每个小红包的最小金额</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @param result </span><span style=\"font-size:13px;font-family:宋体;color:teal\">存放生成的每个小红包的值的数组</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;* @return </span><span style=\"font-size:13px;font-family:宋体;color:teal\">红包数量</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:teal\">&nbsp;*/</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">void</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> generate</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> total</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> average </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> total </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">/</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> a </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> average </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> b </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">这样的随机数的概率实际改变了，产生大数的可能性要比产生小数的概率要小。</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">这样就实现了大部分红包的值在平均数附近。大红包和小红包比较少。</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> range1 </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> sqr</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">average </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> range2 </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> sqr</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">max </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> average</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">for</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">因为小红包的数量通常是要比大红包的数量要多的，因为这里的概率要调换过来。</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">当随机数</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">&gt;</span><span style=\"font-size:13px;font-family:宋体;color:green\">平均值，则产生小红包</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">当随机数</span><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:green\">&lt;</span><span style=\"font-size:13px;font-family:宋体;color:green\">平均值，则产生大红包</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">nextLong1</span><strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&gt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> average</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">在平均线上减钱</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> temp </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> xRandom</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> average</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> temp</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; total </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> temp</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">else</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">在平均线上加钱</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> temp </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> xRandom</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">average</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> temp</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; total </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">-=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> temp</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">如果还有余钱，则尝试加到小红包里，如果加不进去，则尝试下一个。</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">while</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">total </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&gt;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">for</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">total </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&gt;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&amp;&amp;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]++;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;total</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">--;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">// </span><span style=\"font-size:13px;font-family:宋体;color:green\">如果钱是负数了，还得从已生成的小红包中抽取回来</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">while</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">total </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">for</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">if</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">total </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&amp;&amp;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&gt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]--;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; total</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</span><strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> main</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">()</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">15</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> total </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> count </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:#FF8000\">10</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">红包数量</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">money_count</span><strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">每个钱数的红包数量</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; srand</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">time</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">));</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; result </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*)</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">malloc</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">sizeof</span></strong><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">long</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; generate</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">100</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> min</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; printf</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:gray\">&quot;hongbao:\\n&quot;</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">for</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:gray\">&quot;%d &quot;</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; total </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+=</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">];</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">检查生成的红包的总额是否正确</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; printf</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:gray\">&quot;\\ntotal:%d\\n&quot;</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> total</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">统计每个钱数的红包数量，也就是概率值，检查是否接近正态分布</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; money_count </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">*)</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">malloc</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">sizeof</span></strong><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)*</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">for</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; money_count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#8000FF\">int</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">)</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]]</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">+=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">1</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; printf</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:gray\">&quot;fenbu:\\n&quot;</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">for</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:gray\">&quot;%d %d|&quot;</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> money_count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">//</span><span style=\"font-size:13px;font-family:宋体;color:green\">为了方便在</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">excel</span><span style=\"font-size:13px;font-family:宋体;color:green\">中绘制折线图，这里特地将结果竖直输出，复制到</span><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:green\">excel</span><span style=\"font-size:13px;font-family: 宋体;color:green\">中直接绘制折线图。</span></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:blue\">for</span></strong> <strong><span style=\"font-size: 13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">=</span></strong> <span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:#FF8000\">0</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">&lt;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> max</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">;</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">++)</span></strong> <strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">{</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:gray\">&quot;%d\\n&quot;</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">,</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\"> money_count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">[</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">i</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">]);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; free</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">money_count</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">&nbsp;&nbsp;&nbsp; free</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">(</span></strong><span style=\"font-size: 13px;font-family: &#39;Courier New&#39;\">result</span><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">);</span></strong></p><p style=\"text-indent:0;line-height: normal;background:white\"><strong><span style=\"font-size:13px;font-family:&#39;Courier New&#39;;color:navy\">}</span></strong></p><p style=\"text-indent:29px\">1.<span style=\"font-family:宋体\">总金额为</span>100<span style=\"font-family:宋体\">，发红包数量为</span>10<span style=\"font-family:宋体\">，单个红包最低</span>1<span style=\"font-family:宋体\">最高</span>15<span style=\"font-family: 宋体\">时候，输出结果</span></p><p style=\"text-indent:29px\">hongbao:</p><p style=\"text-indent:29px\">12 3 8 12 13 11 13 11 8 9</p><p style=\"text-indent:29px\">total:100</p><p style=\"text-indent:29px\">fenbu:</p><p style=\"text-indent:29px\">0 0|1 0|2 0|3 1|4 0|5 0|6 0|7 0|8 2|9 1|10 0|11 2|12 2|13 2|14 0|</p><p style=\"text-indent:29px\">2.<span style=\"font-family:宋体\">总金额为</span>1000000<span style=\"font-family:宋体\">，发红包数量为</span>10000<span style=\"font-family:宋体\">，单个红包最低</span>1<span style=\"font-family:宋体\">最高</span>200<span style=\"font-family: 宋体\">时候，根据输出结果绘制折线图如下，可以看出满足正态分布：</span></p><p style=\"text-indent:29px\"><img src=\"/static/upload/bigpic/20151103/1446559056644536200.png\"/></p><p><br/></p>',',技术,',37,0,'2015-11-05 05:54:40','2017-07-28 18:59:07',0,'/static/upload/bigpic/20151103/1446559056644536200.png',1,'http://blog.csdn.net/hengyunabc/article/details/19177877'),(27,1,'李鸿章之死',NULL,'','',0,'100年前的1901年11月7日，李鸿章在屈辱和病痛中辞世。生当“三千年未有之变局”的李鸿章，生前身后都遭到诟病。本文试图从新的视角审视李鸿章，相信对仍致力于实现现代化的国人不无助益。离1901年的结束仅剩不到一个月的时候，回銮路上的大清国皇太后慈禧在黄河岸边的辉县收到了那个令朝野上下无不悲哀的消息：李鸿章死了。\r\n\r\n李鸿章，大清国直隶总督兼北洋大臣。\r\n\r\n就在他咽气之前的一个小时，俄国公使还站在他的床头逼迫他在俄占中国东北的条约上签字。为了大清国与洋人争辩了一生的李鸿章已不能说话，他只有眼泪了。眼泪流尽了，他的眼睛闭上了。\r\n\r\n自1840年英国人用舰炮打开中国的国门以后，中国人沿海岸修筑的所有整齐对称的炮台和花费巨银买来的位居世界第六的舰队，没有一次阻挡住“蛮夷”的入侵：“自道光中叶以来，外患渐深，至于今日，危迫极已。咸丰十年，英法联军入都，毁圆明园，文宗出走，崩于热河……自此以后，法并安南，日攘朝鲜，属地渐失。各海口亦为列强所据，德占胶州，俄占旅顺大连，英占威海九龙，法占广湾……”而就在李鸿章死时，因为允许外国在中国驻军和几近天文数字的赔款而成为“将来无数困难问题发生之源”的《辛丑条约》刚刚签订，外国联军仍在整个朝廷逃亡在外的情况下占领着大清国的都城北京。\r\n\r\n对于风雨飘摇中的大清国来说，洋人的气焰永远是一个巨大的威胁。而李鸿章一死，大清上下就失去了惟一能够与洋人周旋的人。李鸿章的死令“太后及帝哭失声”，大清国犹如“梁倾栋折，骤失倚侍”。\r\n\r\n#### 洋务重臣\r\n还在与太平军作战的时候，李鸿章就显露出他与大清国所有官员的不同之处：对外国的科学技术和国内的经济活动有极大的兴趣。最初的动机是他组建的淮军需要银两购买武器。当淮军在两岸布满太平军营垒的水道上成功地进行了大穿越进至上海，从而一举扫平了长江下游的太平军后，李鸿章利用上海富绅的银两引进洋人的机器设备，创办了中国第一个近代军工企业：上海洋枪三局。李鸿章算过一笔账：一发英国的普通炮弹在市场上要卖到30两银子，1万发铜帽子弹要卖到19两银子。大清国凭什么要把白花花的银子给了洋人？\r\n\r\n创办近代企业需要的不仅仅是财力，更重要的是思想和观念的更新。李鸿章曾写有一份描绘蒸汽动力运转的奏折，无异于100年前的一篇科普文章：\r\n\r\n镟木、打眼、绞镙旋、铸弹诸机器，皆绾于汽炉，中盛水而下炽炭，水沸气满，开窍由铜喉达入气筒，筒中络一铁柱，随气升降俯仰，拔动铁轮，轮绾皮带，系绕轴心，彼此连缀，轮转则带旋，带旋则机动，仅资人力以发纵，不靠人力之运动。\r\n\r\n在几乎没人知道世界上有蒸汽机的大清国里，头上是顶戴花翎、脑后依然拖着辫子的李鸿章，能够如此细致地观察蒸汽机的运转原理，这着实令人惊叹。\r\n\r\n大清中叶以后，由于京杭运河淤塞，朝廷南北货物的调运部分改为海路，李鸿章抓住时机，督办创立了“招商局轮船公司”。这是中国第一家民营轮船公司，它承揽了朝廷“官物”运输一半的运量，而其随后展开的客运业竟挤垮了英美合办的旗昌公司。\r\n\r\n而当洋人要在中国开设电报业务的时候，大清国朝野上下无不惊慌失措，以为“电报之设，深入地下，横冲直撞，四通八达，地脉既绝……”李鸿章也不允许洋人从香港铺设来的海底电缆上岸。只是，时隔不久，由他支持铺设的中国第一条电报电缆线在大沽口到天津城之间开通了。李鸿章能够完全不理会“地脉”，也能够完全不理会洋人，因为他知道电报业蕴藏着极高的军事和民用价值。之后，由大清国政府的银子作为投资、以赢利为目的的电报公司成立。李鸿章称此举为“官督商办”，因为在中国创办拥有自主权的企业“事体重大，有裨国计民生，故需官为扶持并酌借官帑以助商力之不足”。\r\n\r\n由于李鸿章的主持和参与，洋务派创办了中国近代第一条铁路、第一座钢铁厂、第一座机器制造厂、第一所近代化军校、第一支近代化海军舰队……\r\n\r\n李鸿章为大清国国计民生近代化所奠基的所有事业，令他身后的国人一直在受益。他是对中国近代化产生了至关重要影响的洋务运动的中坚。但是，李鸿章一生所从事的另一种“洋务”，却使他在生前和身后招致众多的痛骂，因为根据国人一向的认知，中国近代史上的屈辱与不公都是他一手造成的，他所有竭尽心力的努力无不是在把国家的领土、财富和臣民出卖给洋人，这位大清重臣的罪责深重得几乎令人难以置信。\r\n\r\n大清国没有“外交”的概念，所有的外事统统归于“洋务”。洋务运动的首领李鸿章不可避免地成为了大清国当然的“外交家”。李鸿章的外交生涯不但让西方人知道了大清国有一个“相貌堂堂”且“矜持、自信和傲慢”的李中堂，而且也让中国人在上一个世纪之交那段悲伤的日子里终于揪出了一个“罪魁祸首”————李鸿章让国人因为遭受屈辱而积淀的愤恨在怒斥他的过程中得到宣泄。\r\n\r\n洋人了解李鸿章的外交能力，是通过中英《烟台条约》的谈判。其时，英国人的军舰开入烟台，日本军队开始向朝鲜武装挑衅，以对大清国构成战争威胁。皇亲醇亲王主张与英国人决裂开战，而李鸿章的思路是：大清国不能再在外交上走一贯的老路，即事端一出，动辄开战，战则必败，败则议和，和则割地赔款。1876年9月，《烟台条约》签订。觊觎更多在华利益的英国人事后说：“这个文件既不明智也不实用，毫无意义，是一堆冗言赘语而已。”尽管洋人说，面对强大的威胁，李鸿章依然能谈出一个明显存有抵抗态度的条约，是一件“值得惊诧”的外交事件，但从烟台回到直隶总督府的李鸿章还是因为赔款和开放口岸而背上了卖国的罪名。\r\n\r\n1894年爆发的中日甲午之战，是李鸿章一生遇到的最大的挫折———“海军费绌，设备多不完，惟鸿章知之深。朝野皆不习外事，谓日本国小不足平，故全国主战，独鸿章深知其强盛，逆料中国海陆军皆不可恃，故宁忍诟言和。朝臣争劾鸿章误国，枢臣日责鸿章，乃不得已而备战。”到1895年2月17日16时，日本联合舰队在风雪交加中开进威海卫，浩浩大清国败于一个弹丸小国的事实，令自认为是“天朝中心”的国人举国愕然。朝廷顾不得“天国颜面”，再令李鸿章去日本议和。\r\n\r\n李鸿章在日本马关被一名刺客击中，子弹卡在他左眼下的骨头缝里，没有医生敢在这个位置下手术刀，李鸿章给朝廷的电报只有六个字：“伤处疼，弹难出。”而面对日本人割让辽东、台湾、澎湖，赔款军费3亿两白银的“要价”，朝廷在给李鸿章的电报中均是模棱两可的“着鸿章酌量办理”。伤痛和心痛折磨着李鸿章。如果采取强硬的态度和立场，只能导致中日战争继续扩大。以大清国实际的军力状况而言，战争的结果只能是中国的东北被全面占领；而如果答应日本人的条件，大清国主权和财产的损失也是巨大的。两害取其轻，这是面对残局的李鸿章的选择。\r\n\r\n1895年4月，带着《马关条约》草约和脸上的绷带回国的李鸿章，发现他成了举国的“公敌”：朝廷斥责他办事不力，官员说他丧权辱国，民间暗示他拿了日本人的银子，更有人公开声明要不惜一切杀掉他以雪“心头奇耻大辱”。\r\n\r\n每一次在国家面临危机时出来收拾残局的李鸿章，被国人目为卖国者，只有全体军机大臣在上奏给皇帝的一份奏折中说过的“中国之败全由不西化之故，非鸿章之过”，曾令李鸿章老泪纵横。\r\n\r\n#### 振聋发聩之声\r\n因为签订《马关条约》而被免去显赫职务的李鸿章，赋闲在京城贤良寺。\r\n\r\n1896年，俄国沙皇加冕，各国派员祝贺，俄国人特别提到了代表的级别问题，朝廷只有派李鸿章去。因为洋人们说，对于19世纪的中国，他们只知有李鸿章而不知有朝廷。李鸿章以在马关被刺为由一再推辞，而朝廷就一再坚决不准，当李鸿章认为确实到了“众望所归”的时候了，便表示自己“非敢爱身，惟虞辱命”，只有“一息尚存，万程当赴”。\r\n\r\n李鸿章的俄国之行还有一个重要行动，即与俄国结盟。\r\n\r\n“联俄拒日”是甲午之后大清国朝廷中的主流认识，以两江总督刘坤一说得最为明确：威胁大清国的国家以日本为最，日本企图占领东北的野心积蓄已久，而俄国因为与大清国东北接壤必最不愿意。所以“我若乘此时与之深相结纳，互为声援，并稍予便宜，俄必乐从我”。\r\n\r\n在插满了大清黄龙旗的彼得堡，李鸿章开始与俄国人商谈《中俄密约》。《中俄密约》的要点是：中俄两国针对日本的军事威胁结成互相援助的军事联盟；俄国在中国东北地区铺设铁路与俄国横穿西伯利亚的远东铁路接轨。\r\n\r\n这一次，李鸿章没能意识到一个具有近代常识的问题：铁路的延伸正是扩张领土的主要手段。至于当大清国受到日本威胁的时候，铁路能够便于军事援助这一点，李鸿章和大清国的官员都没想到，如果俄国人想侵入并占领中国的东北，这条铁路同样会给俄国人提供军事运输的便利。更何况在中国境内修建铁路，一旦“路权”模糊不清，俄国人就会有理由在铁路沿线派驻武装。后来的历史证明这就是对中国东北安全构成巨大威胁的“中东铁路警察队”。关于后者，李鸿章想到了，于是他坚决反对俄国以官方的名义投资铁路，而坚持用私人投资的方式。李鸿章以为这样就可以将铁路的修建变成商业行为。\r\n\r\n离开俄国，李鸿章开始了他的欧美之行。在英国，他特意在代表西方民主制度的议院旁听了议员们的辩论，李鸿章觉得那简直是一窝蜂似的吵架。而大清国要员的出现引起了英国人极大的关注。一位英国人这样描述了他所看到的73岁的李鸿章：\r\n\r\n他像来自另外一个世界的身材奇高、容貌慈祥的异乡人。他蓝色的长袍光彩夺目，步伐和举止端庄，向看他的每个人投以感激的优雅的微笑。从容貌看来，这一代或上一代人都会认为李鸿章难以接近，这不是因为他给你巨大的成就或人格力量的深刻印象，而是他的神采给人以威严的感觉，像是某种半神、半人，自信、超然，然而又有文雅和对苦苦挣扎的芸芸众生的优越感。\r\n\r\n令李鸿章感兴趣的是英国的海军和陆军。他还参加了汇丰银行的招待会，在英国商人们表示要到中国去开拓市场的时候，李鸿章的开明思想令他说出了：“实具同心。”　　当李鸿章乘坐的客轮到达纽约港时，美国海军最强大的舰队依次列阵港湾，鸣炮致敬以欢迎大清国的重臣。美国《纽约时报》记者报道说，当客轮驶往美国的途中，李鸿章在船上对每一位他见到的美国人都问这样的三个问题：你是做什么的？你能挣多少钱？你住得离纽约近吗？\r\n\r\n《纽约时报》记者接着报道说：“没有乘客表示他曾向女士问过这三个问题。”\r\n\r\n而对美国记者关于“美国资本在中国投资出路”的回题，李鸿章的回答是：只有将货币、劳动力和土地有机地结合起来，才会产生财富。清国政府非常高兴地欢迎任何资本到我国投资……必须邀请欧美资本进入清国以建立现代化的工业企业，帮助清国人民开发利用本国丰富的自然资源。但这些企业的自主权应掌握在清国政府手中。我们欢迎你们来华投资，资金和技工由你们提供。但是，对于铁路、电讯等事务，要由我们自己控制。我们必须保护国家主权。这不可谓不前瞻。\r\n\r\n美国记者的另一个问题是：阁下，您赞成将美国的或欧洲的报纸介绍到贵国吗？\r\n\r\n李鸿章的回答是：清国办有报纸，但遗憾的是清国的编辑们不愿将真相告诉读者，他们不像你们的报纸讲真话，只讲真话。清国的编辑们在讲真话的时候十分吝啬，他们只讲部分的真实，而且他们也没有你们报纸这么大的发行量。由于不能诚实地说明真相，我们的报纸就失去了新闻本身的高贵价值，也就未能成为广泛传播文明的方式了。\r\n\r\n为了抗议美国的排华法案，李鸿章甚至宁愿选择经加拿大而非美国西部回国。李说：排华法案是世界上最不公平的法案。所有的政治经济学家都承认，竞争促使全世界的市场迸发活力，而竞争既适用于商品也适用于劳动力。(引自郑曦原编《帝国的回忆》)\r\n\r\n结束访美之后，李鸿章搭乘美轮回国。到达日本横滨港需要换船。李鸿章当年离开马关的时候曾表示“终生不履日地”，现在又有了《中俄密约》，让他痛恨起日本人更有底气了。换船必须先上码头，但是为了不让自己的精神和肉体与日本国土发生一丝关系，李鸿章无论如何也不上岸。侍从们只好在美轮和招商局的轮船之间搭起一块跳板，冒着掉到海里的危险将他扶上船。\r\n\r\n李鸿章以为《中俄密约》可保大清国20年无事。然而仅仅4年之后，最先攻破大清国都城第一道城门东便门的正是俄国人！紧接着，曾经告诉李鸿章自己的国土大得用不完、没有侵占别人一寸土地想法的俄国人开始胁迫大清政府将“东三省永远归俄国所有”。这时候，李鸿章终于明白：大清国自与洋人来往以来所奉行的“以夷制夷”的策略是多么的天真无知。\r\n\r\n李鸿章在给朝廷的奏折中表示：在某种意义上讲，大清国已经没有绝对封闭的国防。西方势力不但在文化上侵蚀着中国，更重要的是他们有侵占中国的野心，其手段是“一国生事，多国构煽”，列强的“友好”和“野心”从来都是搀杂在一起的，大清国对此必须保持警惕。世界发展至今日，一国已不可能关闭国门而安然生存。大清国如果打开国门参与世界商品经济的往来，不但可以富强自己，而且因为贸易是双边的，等于也就制约了别人，这样的制约甚至强过武力，整个地球便可“胥聚于中国”。持有这样的认识，不但在百年前的中国可谓凤毛麟角，即使是在当代中国也可属振聋发聩之声。\r\n\r\n#### 最后一次出场\r\n1900年6月，外国联军攻陷了中国北方的海岸门户大沽炮台，3天之后，京城门户天津陷落，以保护使馆为名登陆的联军向通州进发，而通州距大清国的都城北京仅20公里。21日，大清国宣布与各国进入战争状态。然后朝廷的电报一封接一封地到达南方，要求各省封疆大臣率兵北上共同灭洋。而李鸿章深知国家忧患日深，军力积弱日久，“若不量力而轻于一试，恐数千年文物之邦，从此已矣”。李鸿章给朝廷发去一封电报————大清国两广总督对朝廷“北上勤王”的圣旨的回答是：“此乱命也，粤不奉诏。”\r\n\r\n这也许是上一个世纪之交中国历史上最著名的一句话，它标志着在封建帝国内具有近代政治意识的官员第一次在国家政治事务中显示出鲜明的独立性和抗争性。大清国南方日益活跃的商品贸易和经济活动，潜移默化地影响着官员们的思维方式和统治模式，这种影响虽可能如风蚀岩石般缓慢但却是不可逆转的。两江总督刘坤一、湖广总督张之洞、闽浙总督许应、四川总督奎俊等在获悉了李鸿章的电文后，确定了共同抗旨以求东南互保的原则。他们的道理很简单：如果大清国的南方也发生了动乱，那么乱了敌人的同时肯定也要乱了自己。虽然在以后很长时期内这些人无不被国人痛斥为一群“出卖民族利益的无耻之徒”，但在1900年的庚子巨祸中究竟是他们确保了大清国南方半壁江山的稳定。\r\n\r\n“以卵敌石，岂能幸免？”\r\n\r\n1900年8月15日，大清国都城沦陷，政府和朝廷逃亡。\r\n\r\n此一悲惨事件发生之前，朝廷的电报再一次一封接一封地到达南方，要求李鸿章北上与正在攻打这个国家的洋人议和。朝廷为此将李鸿章由两广总督重新调任为大清国封疆大臣中的最高职位：直隶总督兼北洋大臣。而慈禧的最后一纸任命是：“着李鸿章为全权大臣。”———“每当满清政府把这个巨大的帝国带到毁灭的边缘，他们惟一必须启用的人就是李鸿章。”1900年7月17日，当77岁的李鸿章在广州登船准备北上的时候，南海知县裴景福问他有什么办法可以让国家少受些损失，李鸿章感叹道：“不能预料！惟有竭力磋磨，展缓年分，尚不知做得到否？吾尚有几年？一日和尚一日钟，钟不鸣，和尚亦死矣！”李鸿章生命的最后一年，就是在这样悲伤的心境中开始了他与洋人噩梦般的周旋。　　9月29日，李鸿章到达天津。他去了他曾经执政达20多年的直隶总督府，在满目疮痍的天津城中，总督府已是一片废墟。10月11日，李鸿章到达北京。外国联军宣布除了“两个小院落仍属于清国政府管辖”之外，整个京城由各国军队分区占领。那两个小院落一个是李鸿章居住的贤良寺，一个是参加与联军议和谈判的庆亲王的府邸。\r\n\r\n11月初，联军照会李鸿章和庆亲王，提出议和谈判的六项原则：惩办祸首；禁止军火输入中国；索取赔款；使馆驻扎卫兵；拆毁大沽炮台；天津至大沽间驻扎洋兵，保障大沽与北京之间的交通安全自由。这六项严重侮辱大清国国家主权的“原则”，令李鸿章说出了列强犹如“虎狼群”的话，他终于意识到自己根本无法结束大清国的厄运。　　逃亡至西安的慈禧在黄尘烈风中天天盼着李鸿章的“好”消息———“望电报如饥渴”，虽然大清国于1900年夏天发生的巨祸是由慈禧一手酿成，但李鸿章必须在联军的追究面前维护住慈禧的权力，他只有日复一日地“竭力磋磨”————“每当聚议时，一切辩驳均由李鸿章陈词；所奏朝廷折电，概出李鸿章之手。”李鸿章病倒了，起因是在拜会英、德公使后回贤良寺的路上受了风寒。故作拖延以“漫天要价”的联军沉不气了，占尽“中国财力兵力”的“议和大纲”终于出笼。\r\n\r\n湖广总督张之洞联合南方的封疆大臣，力主不能在“议和大纲”上“画押”。李鸿章对“不明敌情”却“局外论事”的张之洞十分恼火，他表示如果坚持不“画押”，谈判即刻便会破裂，结果只能是将大清国拖入无休止的战乱————联军在京城屯兵数万，有随时扩大战争的能力；在这种内外皆危之际，高谈阔论并不能扭转危难。\r\n\r\n而因为“议和大纲”既没有将慈禧列为祸首，又没有让她交出权力，于是朝廷给李鸿章回电：“敬念宗庙社稷，关系至重，不得不委曲求全。”1901年1月15日，李鸿章和庆亲王代表大清国在“议和大纲”上签字。国人即刻指责道：“卖国者秦桧，误国者李鸿章！”\r\n\r\n李鸿章吐血了。知道自己已经时日不多，李鸿章想尽快地结束谈判，而谈判结束的直接标志是联军撤出京城和皇室朝廷回京。可是，“议和大纲”签字后，联军并没有撤军的迹象。各国的态度是：必须把赔款的数额定下来，必须亲眼看到惩办祸首。\r\n\r\n关于惩办问题的谈判耗尽了李鸿章最后的气力，他无法接受皇亲们在菜市口被洋人斩首，最终还是顶住了联军要求对皇亲“正法”的压力。\r\n\r\n接下来是赔款问题的谈判，李鸿章已经没有力气与洋人争来争去了，他不愿为大清国的几两银子再低三下四了，他吐血已经吐到了“濒危”的程度。只是，病中的李鸿章没忘给张之洞传话，说是电报每个字四角银元实在太贵，要他不要再发“空论长电”，凡事可以摘要发出，以节省经费。赔款问题全部是由下级官员谈的，结果是大清国赔款4亿5千万两，分39年还清，年息4厘。列强们说，4亿5千万中国人，“人均一两，以示侮辱”。朝廷的回电是：“应准照办。”\r\n\r\n1901年9月7日，代表大清国与11国签订了中国近代史上著名的不平等条约《辛丑条约》的李鸿章，在签字回来后再一次大口地吐血————“紫黑色，有大块”，“痰咳不支，饮食不进”。医生诊断为：胃血管破裂。\r\n\r\n李鸿章在病榻上上奏朝廷：\r\n\r\n臣等伏查近数十年内，每有一次构衅，必多一次吃亏。上年事变之来尤为仓促，创深痛巨，薄海惊心。今议和已成，大局稍定，仍希朝廷坚持定见，外修和好，内图富强，或可渐有转机。\r\n\r\n难以想象就要离世的李鸿章在写下“必多一次吃亏”这几个字时会是什么心情。他毕生致力的“外修和好，内图富强”的愿望此时说出来实在是一种前途渺茫下的伤心无奈。\r\n\r\n远在逃亡地的慈禧复电李鸿章，言他“为国宣劳，忧勤致疾”，望他“早日痊愈，荣膺懋赏”。\r\n\r\n但是，李鸿章没有等到“荣膺懋赏”的那一天。1901年11月7日，这位大清重臣已处在油尽灯枯之际，他“久经患难，今当垂暮，复遭此变，忧郁成疾，已乖常度”。站在他床头逼迫他签字的俄国公使走了之后，身边的人大哭：“还有话要对中堂说，不能就这么走了！”李鸿章的眼睛又睁开了，身边的人对他说：“俄国人说了，中堂走了以后，绝不与中国为难！还有，两宫不久就能抵京了！”李鸿章两目炯炯不瞑，张着口似乎想说什么。身边的人再说：“未了之事，我辈可了，请公放心！”李鸿章“目乃瞑”，享年78岁。\r\n\r\n#### 几种评论\r\n李鸿章死后两个月，梁启超写出皇皇大作《李鸿章传》，称：鸿章必为数千年中国历史上一人物，无可疑也。李鸿章必为十九世纪世界历史上一人物，无可疑也。梁启超说他“敬李鸿章之才”，“惜李鸿章之识”，“悲李鸿章之遇”。\r\n\r\n日本人对李鸿章的评价是：知西来大势，识外国文明，想效法自强，有卓越的眼光和敏捷的手腕。\r\n\r\n美国人的评价是：以文人来说，他是卓越的；以军人来说，他在重要的战役中为国家作了有价值的贡献；以从政来说，他为这个地球上最古老、人口最多的国家的人民提供了公认的优良设施；以一个外交家来说，他的成就使他成为外交史上名列前茅的人。\r\n\r\n李鸿章生逢大清国最黑暗、最动荡的年代，他的每一次“出场”无不是在国家存亡危急之时，大清国要他承担的无不是“人情所最难堪”之事。因此，国人在对他咒骂痛斥之时，确实“不可不深自反也”，确实不可“放弃国民之责任”。\r\n\r\n只是，该怎样评价100年前这位不同寻常的大清重臣，中国人一向的定论与百年以来的世界舆论截然不同。\r\n\r\n在中国，评价一个人是很容易同时也是很难的事情。\r\n\r\n李鸿章(1823—1901)',',历史,',59,0,'2015-11-06 19:37:58','2016-08-25 16:31:39',0,NULL,1,'《重读李鸿章》 作者牛贯杰,东方出版社出版。'),(28,1,'索引查找',NULL,'','',0,'索引查找，就是新建一个索引表，将源数据hash后对应到索引表上，查询的时候直接查索引表得到源数据地址。以下是C语言实现的一级索引简单示例\r\n```\r\n#include <stdio.h>\r\n#define N 100 // 主表最大长度\r\n#define M 30 // 索引表最大长度\r\nint ROW_WIDTH = 10;\r\n/**\r\n * 计算索引编号的哈希函数\r\n */\r\n#define hashindex(key) key / 100\r\n/**\r\n * 索引项\r\n */\r\ntypedef struct {\r\nint index; // 索引编号，按照间隔固定的每行长度index_width个数据划分为一个索引段。\r\nint start; // 索引起始位置，以此为基准搜索本行内数据，start = (index - 1) * ROW_WIDTH；\r\nint length; // 有效数据长度\r\n} IndexItem;\r\n/**\r\n * 主表\r\n */\r\nint MainTable[N] = {\r\n/* 177,189,100,123,111,0,0,0,0,0, // 主表固定的每行长度 ROW_WIDTH = 10，后面为0的代表无效数据\r\n201,202,203,204, 0,0,0,0,0,0,\r\n301,302,303, &nbsp;0, &nbsp;0,0,0,0,0,0</p><p>*/</p><p>};</p><p>int MainLength = 0; // 主表长度</p><p><br/></p><p>/**</p><p>&nbsp;* 索引表</p><p>&nbsp;*/</p><p>IndexItem IndexTable[M] = {</p><p>/* &nbsp;{1, 0,5}, // 第一行：第一列索引编号1；第二列索引起始位置 0 = (1 - 1) * 10；第三列有效数据长度是5个；</p><p>&nbsp; &nbsp; {2,10,4}, // 第二行：第一列索引编号2；第二列索引起始位置10 = (2 - 1) * 10；第三列有效数据长度是4个；</p><p>&nbsp; &nbsp; {3,20,3} &nbsp;// 第三行：第一列索引编号3；第二列索引起始位置20 = (3 - 1) * 10；第三列有效数据长度是3个；</p><p>*/</p><p>};\r\nint IndexLength = 0; // 索引表当前有效索引长度\r\nvoid CreateIndex(int *data, int length){\r\nint i = 0;</p><p>&nbsp; &nbsp; int j = 0;</p><p>&nbsp; &nbsp; // 初始化索引表</p><p>&nbsp; &nbsp; for (i = 0; i &lt; M; i++){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; IndexTable[i].index = i + 1;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; IndexTable[i].start = i * ROW_WIDTH;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; IndexTable[i].length = 0;</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp; // 将数据写入主表和索引表</p><p>&nbsp; &nbsp; for (i = 0; i &lt; length; i++){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; j = hashindex(data[i]);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if(j &gt; IndexLength) //记录下当前有效索引长度</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; IndexLength = j;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; MainTable[IndexTable[j-1].start + IndexTable[j-1].length++] = data[i];</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp; MainLength = IndexLength * ROW_WIDTH;</p><p>}</p><p><br/></p><p>/**</p><p>&nbsp;* 索引查找算法</p><p>&nbsp;* @param key 给定值</p><p>&nbsp;* @return 给定值在表中的位置,返回-1表示索引表中不存在该索引项</p><p>&nbsp;*/</p><p>int IndexSearch(int key)</p><p>{</p><p>&nbsp; &nbsp; int i = 0;</p><p>&nbsp; &nbsp; int j = 0;</p><p>&nbsp; &nbsp; int index = hashindex(key); // 求索引编号</p><p><br/></p><p>&nbsp; &nbsp; //遍历索引表,找到对应的索引项</p><p>&nbsp; &nbsp; for (i = 0; i &lt; IndexLength; i++)</p><p>&nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; //找到索引项</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if (IndexTable[i].index == index)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //在源数据中顺序查找，也可以使用二分查找等其他更高效的查找方法，这里就不演示了，只说明下索引的基本原理。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (j = IndexTable[i].start; j &lt; IndexTable[i].start + IndexTable[i].length; j++)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (MainTable[j] == key)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return j;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp; //索引表中不存在该索引项</p><p>&nbsp; &nbsp; return -1;</p><p>}\r\n/**\r\n * 插入数据\r\n * @param key 给定值</p><p>&nbsp;* @return 0,插入成功,返回-1表示索引表中不存在该索引项</p><p>&nbsp;*/\r\nint Insert(int key)\r\n{\r\n    int i = 0;\r\n    int index = hashindex(key); // 求索引编号</p><p><br/></p><p>&nbsp; &nbsp; //遍历索引表,找到对应的索引项</p><p>&nbsp; &nbsp; for (i = 0; i &lt; IndexLength; i++)</p><p>&nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if (IndexTable[i].index == index)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //依索引项将值插入到主表中，这里为了降低复杂度，只演示了在末尾追加数据。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MainTable[IndexTable[i].start + IndexTable[i].length] = key;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //更新索引表</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; IndexTable[i].length++;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 0;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp; //索引表中不存在该索引项</p><p>&nbsp; &nbsp; return -1;</p><p>}</p><p><br/></p><p>int main()</p><p>{</p><p>&nbsp; &nbsp; int test[20] = {177,202,189,123,111,302,201,203,301,204,303,100};</p><p>&nbsp; &nbsp; int testlen = 12;</p><p>&nbsp; &nbsp; int value = 245;</p><p>&nbsp; &nbsp; int i = 0;</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; printf(&quot;================= initial ===================\\n&quot;);</p><p>&nbsp; &nbsp; printf(&quot;initial datas:\\t&quot;);</p><p>&nbsp; &nbsp; for(i = 0; i &lt; testlen; i++){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;%d\\t&quot;, test[i]);</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; CreateIndex(test, testlen);</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; printf(&quot;\\nMain table:&quot;);</p><p>&nbsp; &nbsp; for(i = 0; i &lt; MainLength; i++){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if(0 == i % 10)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;\\n&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;%d\\t&quot;, MainTable[i]);</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; printf(&quot;\\nIndex table:\\n&quot;);</p><p>&nbsp; &nbsp; for(i = 0; i &lt; IndexLength; i++){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;{index=%d, start=%d, length=%d}\\n&quot;, IndexTable[i].index, IndexTable[i].start, IndexTable[i].length);</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; printf(&quot;\\n================= insert ===================\\n&quot;);</p><p>&nbsp; &nbsp; printf(&quot;insert value:\\t%d\\n&quot;, value);</p><p>&nbsp; &nbsp; //插入成功</p><p>&nbsp; &nbsp; if (0 == Insert(value))</p><p>&nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;inserted Main table:&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for(i = 0; i &lt; MainLength; i++){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(0 == i % 10)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;\\n&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;%d\\t&quot;, MainTable[i]);\r\n    }\r\nprintf(&quot;\\ninserted Index table:\\n&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for(i = 0; i &lt; IndexLength; i++){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;{index=%d, start=%d, length=%d}\\n&quot;, IndexTable[i].index, IndexTable[i].start, IndexTable[i].length);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;\\nthe index of %d is:\\t%d\\n&quot;, value, IndexSearch(value));</p><p>&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;inserted Main table:&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for(i = 0; i &lt; MainLength; i++){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;%d\\t&quot;, MainTable[i]);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp; return 0;</p><p>}</p><p>================= initial ===================</p><p>initial datas:<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>177<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>202<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>189<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>123<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>111<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>302<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>201<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>203<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>301<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>204<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>303<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>100<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Main table:</p><p>177<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>189<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>123<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>111<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>100<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>202<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>201<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>203<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>204<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>302<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>301<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>303<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Index table:</p><p>{index=1, start=0, length=5}</p><p>{index=2, start=10, length=4}</p><p>{index=3, start=20, length=3}</p><p><br/></p><p>================= insert ===================</p><p>insert value:<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>245</p><p>inserted Main table:</p><p>177<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>189<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>123<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>111<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>100<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>202<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>201<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>203<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>204<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span><span style=\"color: rgb(255, 0, 0);\">245</span><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>302<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>301<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>303<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>inserted Index table:</p><p>{index=1, start=0, length=5}</p><p>{index=2, start=10, length=<span style=\"color: rgb(255, 0, 0);\">5</span>}</p><p>{index=3, start=20, length=3}</p><p><br/></p><p>the index of 245 is:<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>14</p><p>inserted Main table:177<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>189<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>123<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>111<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>100<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>202<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>201<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>203<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>204<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span><span style=\"color: rgb(255, 0, 0);\">245</span><span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>302<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>301<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>303<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>0</p><p><br/></p><p><span id=\"_baidu_bookmark_end_12\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_9\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_6\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_3\" style=\"display: none; line-height: 0px;\">‍</span></p>\r\n```\r\n',',技术,',59,0,'2015-11-08 08:17:47','2017-04-12 20:57:11',0,'',0,NULL),(29,1,'计算比特币发行量总额',NULL,'','',0,'以下C代码用于计算比特币发行量总额\r\n```\r\n#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main(){\r\n    long btc = 50 * pow(10, 8); // 初始，每个块奖励 50*10^8 聪 (1BTC = 10^8聪)\r\n    long total_btc = 0;\r\n    int interval = 210000; // 每隔 210000 块，比特币奖励减半\r\n    while(btc > 0){\r\n        total_btc += interval * btc;\r\n        btc /= 2;\r\n    }\r\n    printf(\"BTC总量:%ld聪\\n\", total_btc);\r\n}\r\n```\r\n运行输出结果 BTC总量:2099999997690000聪\r\n\r\n',',比特币,技术,',57,0,'2016-02-22 15:06:17','2016-09-09 23:33:00',0,'/static/upload/defaultcover.png',0,NULL),(30,1,'正态分布,python实现','正太分布大家都知道，就是让更多的概率落到中间，两头的极端落的比较少！','','',0,'```\r\n# coding=utf-8\r\n\r\n \r\n\r\nimport numpy as np\r\n\r\nfrom scipy import stats\r\n\r\nimport matplotlib.pyplot as plt\r\n\r\n \r\n\r\nn = 10\r\n\r\np = 0.3\r\n\r\nk = np.arange(0,21)\r\n\r\nbinomial = stats.binom.pmf(k, n, p)\r\n\r\n \r\n\r\nplt.plot(k, binomial, \'o-\')\r\n\r\nplt.title(\'Binomial: n=%i, p=%.2f\' % (n, p), fontsize=15)\r\n\r\nplt.xlabel(\'Number of successes\')\r\n\r\nplt.ylabel(\'Probability of successes\', fontsize=15)\r\n\r\nplt.show()\r\n```\r\n',',技术,',44,0,'2016-02-23 20:50:02','2017-05-15 01:24:58',0,'',0,NULL),(31,1,'对”堆”的理解',NULL,'','',0,'<p>CSDN同步文章：http://blog.csdn.net/socho/article/details/51565498</p><p>堆是一种特殊的完全二叉树，至于什么是完全二叉树自己搜吧。这里就不讲了，看图：&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 14px; line-height: 21px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></p><p><span style=\"font-size: 14px; line-height: 21px;\"></span></p><p><br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602130948483\" alt=\"堆的样例\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">如上，所有父结点都比子结点要小，符合这样特点的完全二叉树我们称为小顶堆。反之，如果所有父结点都比子结点要大，这样的完全二叉树称为大顶堆。那这一特性的实际意义是做什么呢？&nbsp;<br style=\"box-sizing: border-box;\"/>假如有12个数分别是80、7、35、24、19、50、11、2、16、25、67、97，要找出这12个数中最小的数，请问怎么办呢？最简单的方法就是将这12个数从头到尾依次扫一遍，用一个循环就可以解决。这种方法的时间复杂度是O(12)也就是O(N)，如下，灰色部分就是相关算法：&nbsp;<br style=\"box-sizing: border-box;\"/>如下，灰色部分就是相关算法：</p><pre class=\"brush:cpp;toolbar:false\">#include&nbsp;#include&nbsp;int&nbsp;main(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;A[]&nbsp;=&nbsp;{&nbsp;80,&nbsp;7,&nbsp;35,&nbsp;24,&nbsp;19,&nbsp;50,&nbsp;11,&nbsp;2,&nbsp;16,&nbsp;25,&nbsp;67,&nbsp;97};\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i&nbsp;=&nbsp;0,&nbsp;min&nbsp;=&nbsp;INT_MAX;&nbsp;//&nbsp;INT_MAX&nbsp;表示无穷大\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;sizeof(A)/sizeof(int);&nbsp;i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(A[i]&nbsp;&lt;&nbsp;min)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;=&nbsp;A[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;%d\\n&quot;,&nbsp;min);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">输出结果：2&nbsp;<br style=\"box-sizing: border-box;\"/>现在我们需要删除其中最小的数2，然后增加一个新数17，再次找这12个数中最小的一个数。请问该怎么办呢？按上一步的方法，扫描所有的数，找到新的最小的数，这个时间复杂度也是O(N)。假如现在有12次这样的操作（删除最小的数后并添加一个新数）。那么整个时间复杂度就是<span class=\"MathJax_Preview\" style=\"color: rgb(136, 136, 136); box-sizing: border-box;\"></span><span class=\"MathJax\" id=\"MathJax-Element-6-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; box-sizing: border-box;\"><nobr style=\"transition: none; box-sizing: border-box; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;\"><span class=\"math\" id=\"MathJax-Span-1\" style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 11.146em;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 8.917em; height: 0px; font-size: 17.5px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.889em 1000.003em 3.203em -0.454em); top: -2.797em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-2\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span class=\"mn\" id=\"MathJax-Span-3\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">12</span><span class=\"mo\" id=\"MathJax-Span-4\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.231em; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">∗</span><span class=\"mi\" id=\"MathJax-Span-5\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.231em; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">O</span><span class=\"mo\" id=\"MathJax-Span-6\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">(</span><span class=\"mn\" id=\"MathJax-Span-7\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">12</span><span class=\"mo\" id=\"MathJax-Span-8\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">)</span><span class=\"mo\" id=\"MathJax-Span-9\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.289em; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">=</span><span class=\"mi\" id=\"MathJax-Span-10\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.289em; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">O</span><span class=\"mo\" id=\"MathJax-Span-11\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">(</span><span class=\"mn\" id=\"MathJax-Span-12\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">144</span><span class=\"mo\" id=\"MathJax-Span-13\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">)</span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.803em;\"></span></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.432em; color: rgb(255, 255, 255);\"></span></span></nobr></span>即<span class=\"MathJax_Preview\" style=\"color: rgb(136, 136, 136); box-sizing: border-box;\"></span><span class=\"MathJax\" id=\"MathJax-Element-7-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; box-sizing: border-box;\"><nobr style=\"transition: none; box-sizing: border-box; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;\"><span class=\"math\" id=\"MathJax-Span-14\" style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.889em;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.089em; height: 0px; font-size: 17.5px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.774em 1000.003em 3.203em -0.454em); top: -2.797em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-15\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span class=\"mi\" id=\"MathJax-Span-16\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">O</span><span class=\"mo\" id=\"MathJax-Span-17\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">(</span><span class=\"msubsup\" id=\"MathJax-Span-18\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 1.489em; height: 0px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.717em 1000.003em 2.746em -0.454em); top: -2.569em; left: 0.003em;\"><span class=\"mi\" id=\"MathJax-Span-19\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">N<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.06em;\"></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.574em;\"></span></span><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; top: -2.626em; left: 0.974em;\"><span class=\"mn\" id=\"MathJax-Span-20\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-size: 12.3725004196167px; font-family: MathJax_Main;\">2</span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.231em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-21\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">)</span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.803em;\"></span></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.575em; color: rgb(255, 255, 255);\"></span></span></nobr></span>。那有没有更好的方法呢？堆这个特殊的结构恰好能够很好地解决这个问题。&nbsp;<br style=\"box-sizing: border-box;\"/>首先我们先把这个12个数按照最小堆的要求放入一棵完全二叉树：&nbsp;<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602131113377\" alt=\"初始化堆\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/></p><blockquote style=\"box-sizing: border-box; margin: 0px 0px 1.1em; padding: 15px 20px; border-left-width: 10px; border-left-style: solid; border-left-color: rgba(128, 128, 128, 0.0745098); border-radius: 0px 5px 5px 0px; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgba(128, 128, 128, 0.0470588);\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 1.25;\"><strong style=\"box-sizing: border-box;\">注意：</strong>我们这里，堆在程序中的保存方式，是用一个线性数组来存储的，比如数组<strong style=\"box-sizing: border-box;\">A[N]</strong>。实际存储数据的时候，我们数据的排列起点是从A[1]开始的，A[0]没有使用，置空，主要是为了便于直观理解算法，降低复杂度。A[1]就是堆顶，A[i*2]就是其左孩子，A[i*2+1]就是其右孩子(i=1)。</p></blockquote><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">很显然最小的数就是堆顶A[1]位置的2。接下来，我们将堆顶的数替换为17。新数已经不符合最小堆的特性，我们需要将新增加的数调整到合适的位置。那如何调整呢？</p><h2 id=\"向下调整\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"color: rgb(106, 57, 6); box-sizing: border-box;\" name=\"t1\"></a>向下调整</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://img.blog.csdn.net/20160602131322362\" alt=\"替换顶部为17\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/>&nbsp;<br style=\"box-sizing: border-box;\"/>我们需要将17与它的两个儿子7和24比较，并选择较小一个与它交换，交换之后如下。&nbsp;<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602131501206\" alt=\"向下调整1\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/>&nbsp;<br style=\"box-sizing: border-box;\"/>我们发现此时还是不符合最小堆的特性，因此还需要继续向下调整。于是继续将17与它的两个儿子11和67比较，并选择较小一个交换，交换之后如下。&nbsp;<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602131544896\" alt=\"向下调整2\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/>&nbsp;<br style=\"box-sizing: border-box;\"/>到此，还是不符合最小堆的特性，仍需要继续向下调整直到符合最小堆的特性为止。&nbsp;<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602131615771\" alt=\"向下调整3\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/>&nbsp;<br style=\"box-sizing: border-box;\"/>我们发现现在已经符合最小堆的特性了。综上所述，当新增加一个数被放置到堆顶时，如果此时不符合最小堆的特性，则将需要将这个数向下调整，直到找到合适的位置为止，使其重新符合最小堆的特性。&nbsp;<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602131704317\" alt=\"向下调整路径描绘\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">向下调整的代码如下，godown函数是调整的实现：</p><pre class=\"brush:cpp;toolbar:false\">#include&nbsp;#define&nbsp;N&nbsp;12\r\nvoid&nbsp;printHeap(int&nbsp;A[]){\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----------%d-----------\\n&quot;,&nbsp;A[1]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----%d----&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----%d----\\n&quot;,&nbsp;A[2],&nbsp;A[3]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;--%d--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---%d---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---%d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d\\n&quot;,&nbsp;A[4],&nbsp;A[5],&nbsp;A[6],&nbsp;A[7]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\&nbsp;&nbsp;&nbsp;/\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;%d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d&nbsp;%d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d&nbsp;%d\\n&quot;,&nbsp;A[8],&nbsp;A[9],&nbsp;A[10],&nbsp;A[11]&nbsp;,&nbsp;A[12]);\r\n}\r\nvoid&nbsp;swap(int&nbsp;A[],&nbsp;int&nbsp;t,&nbsp;int&nbsp;i){\r\n&nbsp;&nbsp;&nbsp;&nbsp;A[t]&nbsp;=&nbsp;A[t]&nbsp;^&nbsp;A[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;A[i]&nbsp;=&nbsp;A[t]&nbsp;^&nbsp;A[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;A[t]&nbsp;=&nbsp;A[i]&nbsp;^&nbsp;A[t];\r\n}\r\n/*&nbsp;向下调整。\r\n&nbsp;*&nbsp;@param&nbsp;A&nbsp;堆的线性存储方式，数组\r\n&nbsp;*&nbsp;@param&nbsp;n&nbsp;节点总数\r\n&nbsp;*&nbsp;@param&nbsp;i&nbsp;需要向下调整的节点编号\r\n&nbsp;*/\r\nvoid&nbsp;godown(int&nbsp;A[],&nbsp;int&nbsp;n,&nbsp;int&nbsp;i)&nbsp;//传入一个需要向下调整的结点编号i，这里传入1，即从堆的顶点开始向下调整&nbsp;\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;t,flag=0,count=0;//flag用来标记是否需要继续向下调整&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//当i结点有儿子的时候（其实是至少有左儿子的情况下）并且有需要继续调整的时候循环窒执行\r\n&nbsp;&nbsp;&nbsp;&nbsp;while(&nbsp;i*2&nbsp;A[i*2]&nbsp;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t=i*2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t=i;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果他有右儿子的情况下，再对右儿子进行讨论&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(i*2+1&nbsp;&nbsp;A[i*2+1])\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t=i*2+1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果发现最小的结点编号不是自己，说明子结点中有比父结点更小的&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(t!=i)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swap(A,&nbsp;t,&nbsp;i);//交换\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=t;//更新i为刚才与它交换的儿子结点的编号，便于接下来继续向下调整\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n\\n第&nbsp;%d&nbsp;次调整堆：\\n&quot;,&nbsp;++count);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printHeap(A);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=1;//则否说明当前的父结点已经比两个子结点都要小了，不需要在进行调整了,退出\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n&nbsp;\r\nint&nbsp;main(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;A[N+1]&nbsp;=&nbsp;{&nbsp;0,&nbsp;2,&nbsp;7,&nbsp;24,&nbsp;11,&nbsp;67,&nbsp;35,&nbsp;25,&nbsp;16,&nbsp;19,&nbsp;97,&nbsp;80,&nbsp;50};&nbsp;//&nbsp;这里为了直接展示调整堆算法，直接给出已经建好堆的数组，免去建堆这一步，A[0]是不使用的，堆从A[1]开始。\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;初始化堆:\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printHeap(A);\r\n&nbsp;&nbsp;&nbsp;&nbsp;A[1]&nbsp;=&nbsp;17;&nbsp;//&nbsp;测试，修改堆顶值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n\\n修改堆顶值为17:\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printHeap(A);\r\n&nbsp;&nbsp;&nbsp;&nbsp;godown(A,&nbsp;N,&nbsp;1);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">我们刚才在对17进行调整的时候，竟然只进行了3次比较，就重新恢复了最小堆的特性。现在最小的数依然在堆顶为7。之前那种从头到尾扫描的方法需要12次比较，现在只需要3次就够了。现在每次删除最小的数并新增一个数，并求当前最小数的时间复杂度是O(3)，这恰好是<span class=\"MathJax_Preview\" style=\"color: rgb(136, 136, 136); box-sizing: border-box;\"></span><span class=\"MathJax\" id=\"MathJax-Element-46-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; box-sizing: border-box;\"><nobr style=\"transition: none; box-sizing: border-box; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;\"><span class=\"math\" id=\"MathJax-Span-22\" style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 5.431em;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 4.346em; height: 0px; font-size: 17.5px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.889em 1000.003em 3.203em -0.454em); top: -2.797em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-23\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span class=\"mi\" id=\"MathJax-Span-24\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">O</span><span class=\"mo\" id=\"MathJax-Span-25\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">(</span><span class=\"mi\" id=\"MathJax-Span-26\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">l</span><span class=\"mi\" id=\"MathJax-Span-27\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">o</span><span class=\"msubsup\" id=\"MathJax-Span-28\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0.974em; height: 0px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.946em 1000.003em 2.974em -0.511em); top: -2.569em; left: 0.003em;\"><span class=\"mi\" id=\"MathJax-Span-29\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">g<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.574em;\"></span></span><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; top: -1.997em; left: 0.517em;\"><span class=\"mn\" id=\"MathJax-Span-30\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-size: 12.3725004196167px; font-family: MathJax_Main;\">2</span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.231em;\"></span></span></span></span><span class=\"mn\" id=\"MathJax-Span-31\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">12</span><span class=\"mo\" id=\"MathJax-Span-32\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">)</span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.803em;\"></span></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.432em; color: rgb(255, 255, 255);\"></span></span></nobr></span>即<span class=\"MathJax_Preview\" style=\"color: rgb(136, 136, 136); box-sizing: border-box;\"></span><span class=\"MathJax\" id=\"MathJax-Element-47-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; box-sizing: border-box;\"><nobr style=\"transition: none; box-sizing: border-box; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;\"><span class=\"math\" id=\"MathJax-Span-33\" style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 5.26em;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 4.174em; height: 0px; font-size: 17.5px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.889em 1000.003em 3.203em -0.454em); top: -2.797em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-34\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span class=\"mi\" id=\"MathJax-Span-35\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">O</span><span class=\"mo\" id=\"MathJax-Span-36\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">(</span><span class=\"mi\" id=\"MathJax-Span-37\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">l</span><span class=\"mi\" id=\"MathJax-Span-38\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">o</span><span class=\"msubsup\" id=\"MathJax-Span-39\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0.974em; height: 0px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.946em 1000.003em 2.974em -0.511em); top: -2.569em; left: 0.003em;\"><span class=\"mi\" id=\"MathJax-Span-40\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">g<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.574em;\"></span></span><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; top: -1.997em; left: 0.517em;\"><span class=\"mn\" id=\"MathJax-Span-41\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-size: 12.3725004196167px; font-family: MathJax_Main;\">2</span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.231em;\"></span></span></span></span><span class=\"mi\" id=\"MathJax-Span-42\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">N<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.06em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-43\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">)</span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.803em;\"></span></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.432em; color: rgb(255, 255, 255);\"></span></span></nobr></span>简写为<span class=\"MathJax_Preview\" style=\"color: rgb(136, 136, 136); box-sizing: border-box;\"></span><span class=\"MathJax\" id=\"MathJax-Element-48-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; box-sizing: border-box;\"><nobr style=\"transition: none; box-sizing: border-box; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;\"><span class=\"math\" id=\"MathJax-Span-44\" style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 4.689em;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.717em; height: 0px; font-size: 17.5px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.889em 1000.003em 3.203em -0.454em); top: -2.797em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-45\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span class=\"mi\" id=\"MathJax-Span-46\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">O</span><span class=\"mo\" id=\"MathJax-Span-47\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">(</span><span class=\"mi\" id=\"MathJax-Span-48\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">l</span><span class=\"mi\" id=\"MathJax-Span-49\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">o</span><span class=\"mi\" id=\"MathJax-Span-50\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">g<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span class=\"mi\" id=\"MathJax-Span-51\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">N<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.06em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-52\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">)</span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.803em;\"></span></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.432em; color: rgb(255, 255, 255);\"></span></span></nobr></span>。假如现在有10000个数，进行1万次替换最小数的操作，使用原来扫描的方法计算机需要运行大约10000*10000=1亿次；而现在只需要<span class=\"MathJax_Preview\" style=\"color: rgb(136, 136, 136); box-sizing: border-box;\"></span><span class=\"MathJax\" id=\"MathJax-Element-49-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; box-sizing: border-box;\"><nobr style=\"transition: none; box-sizing: border-box; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;\"><span class=\"math\" id=\"MathJax-Span-53\" style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 5.031em;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 4.003em; height: 0px; font-size: 17.5px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.946em 1000.003em 3.203em -0.454em); top: -2.797em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-54\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span class=\"mi\" id=\"MathJax-Span-55\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">N<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.06em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-56\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.231em; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">∗</span><span class=\"mi\" id=\"MathJax-Span-57\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.231em; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">l</span><span class=\"mi\" id=\"MathJax-Span-58\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">o</span><span class=\"mi\" id=\"MathJax-Span-59\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">g<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span class=\"mi\" id=\"MathJax-Span-60\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">N<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.06em;\"></span></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.803em;\"></span></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.289em; color: rgb(255, 255, 255);\"></span></span></nobr></span>次(N=10000)，即14*10000次=14万次(214=16384，所以<span class=\"MathJax_Preview\" style=\"color: rgb(136, 136, 136); box-sizing: border-box;\"></span><span class=\"MathJax\" id=\"MathJax-Element-50-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; box-sizing: border-box;\"><nobr style=\"transition: none; box-sizing: border-box; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;\"><span class=\"math\" id=\"MathJax-Span-61\" style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 4.746em;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.774em; height: 0px; font-size: 17.5px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.946em 1000.003em 3.203em -0.454em); top: -2.797em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-62\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span class=\"mi\" id=\"MathJax-Span-63\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">l</span><span class=\"mi\" id=\"MathJax-Span-64\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">o</span><span class=\"mi\" id=\"MathJax-Span-65\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">g<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span class=\"mn\" id=\"MathJax-Span-66\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">10000</span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.803em;\"></span></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.289em; color: rgb(255, 255, 255);\"></span></span></nobr></span>的对数值大概是14)。从亿到几万的量级跨度，可是跌了不少啊，那么算下节省了 (1亿次/14万次) 约是7百多倍的计算量，这可是巨大的优化啊。&nbsp;<br style=\"box-sizing: border-box;\"/>看下上面程序的运行结果：&nbsp;<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602130416944\" alt=\"向下调整运行结果\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/></p><h2 id=\"向上调整\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"color: rgb(106, 57, 6); box-sizing: border-box;\" name=\"t2\"></a>向上调整</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">说到这里，如果只是想新增一个值，而不是替换或者删除最小值又该如何操作呢？即如何在原有的堆上直接插入一个新元素呢？只需要直接将新元素插入到末尾，再根据情况判断新元素是否需要上移，直到满足堆的特性为止。如果堆的大小为N（即有N个元素），那么插入一个新元素所需要的时间也是<span class=\"MathJax_Preview\" style=\"color: rgb(136, 136, 136); box-sizing: border-box;\"></span><span class=\"MathJax\" id=\"MathJax-Element-52-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; box-sizing: border-box;\"><nobr style=\"transition: none; box-sizing: border-box; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;\"><span class=\"math\" id=\"MathJax-Span-67\" style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 4.689em;\"><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.717em; height: 0px; font-size: 17.5px;\"><span style=\"transition: none; box-sizing: border-box; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.889em 1000.003em 3.203em -0.454em); top: -2.797em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-68\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;\"><span class=\"mi\" id=\"MathJax-Span-69\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">O</span><span class=\"mo\" id=\"MathJax-Span-70\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">(</span><span class=\"mi\" id=\"MathJax-Span-71\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">l</span><span class=\"mi\" id=\"MathJax-Span-72\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">o</span><span class=\"mi\" id=\"MathJax-Span-73\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">g<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span class=\"mi\" id=\"MathJax-Span-74\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Math-italic;\">N<span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; overflow: hidden; height: 1px; width: 0.06em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-75\" style=\"transition: none; box-sizing: border-box; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;\">)</span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.803em;\"></span></span></span><span style=\"transition: none; box-sizing: border-box; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.432em; color: rgb(255, 255, 255);\"></span></span></nobr></span>。例如我们现在要新增一个数15。&nbsp;<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602132345422\" alt=\"向上调整路径图\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/>&nbsp;<br style=\"box-sizing: border-box;\"/>先将15与它的父结点35比较，发现比父结点小，为了维护最小堆的特性，需要与父结点的值进行交换。交换之后发现还是要比它此时的父结点24小，因此需要再次与父结点交换。至此又重新满足了最小堆的特性。向上调整完毕后如下。&nbsp;<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602132431205\" alt=\"向上调整结果图\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">向上调整的代码goup函数如下。：</p><pre class=\"brush:cpp;toolbar:false\">#include&nbsp;#define&nbsp;N&nbsp;13\r\nvoid&nbsp;printHeap(int&nbsp;A[]){\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----------%d-----------\\n&quot;,&nbsp;A[1]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----%d-----&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----%d----\\n&quot;,&nbsp;A[2],&nbsp;A[3]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;--%d--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---%d---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---%d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d\\n&quot;,&nbsp;A[4],&nbsp;A[5],&nbsp;A[6],&nbsp;A[7]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\&nbsp;&nbsp;&nbsp;/\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;%d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d&nbsp;%d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d&nbsp;%d\\n&quot;,&nbsp;A[8],&nbsp;A[9],&nbsp;A[10],&nbsp;A[11]&nbsp;,&nbsp;A[12]);\r\n}\r\nvoid&nbsp;printHeap1(int&nbsp;A[]){\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----------%d-----------\\n&quot;,&nbsp;A[1]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----%d-----&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----%d----\\n&quot;,&nbsp;A[2],&nbsp;A[3]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;&nbsp;--%d--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---%d---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;---%d---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d\\n&quot;,&nbsp;A[4],&nbsp;A[5],&nbsp;A[6],&nbsp;A[7]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;%d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d&nbsp;%d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d&nbsp;%d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%d\\n&quot;,&nbsp;A[8],&nbsp;A[9],&nbsp;A[10],&nbsp;A[11]&nbsp;,&nbsp;A[12],&nbsp;A[13]);\r\n}\r\nvoid&nbsp;swap(int&nbsp;A[],&nbsp;int&nbsp;t,&nbsp;int&nbsp;i){\r\n&nbsp;&nbsp;&nbsp;&nbsp;A[t]&nbsp;=&nbsp;A[t]&nbsp;^&nbsp;A[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;A[i]&nbsp;=&nbsp;A[t]&nbsp;^&nbsp;A[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;A[t]&nbsp;=&nbsp;A[i]&nbsp;^&nbsp;A[t];\r\n}\r\n/*&nbsp;向上调整。\r\n&nbsp;*&nbsp;@param&nbsp;A&nbsp;堆的线性存储方式，数组\r\n&nbsp;*&nbsp;@param&nbsp;n&nbsp;节点总数\r\n&nbsp;*&nbsp;@param&nbsp;i&nbsp;需要向上调整的节点编号\r\n&nbsp;*/\r\nvoid&nbsp;goup(int&nbsp;A[],&nbsp;int&nbsp;n,&nbsp;int&nbsp;i)&nbsp;//传入一个需要向上调整的结点编号i\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;flag=0,&nbsp;count&nbsp;=&nbsp;0;&nbsp;//&nbsp;flag用来标记是否需要继续向上调整\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(1&nbsp;==&nbsp;i)&nbsp;&nbsp;return;&nbsp;//如果是堆顶，就返回，不需要调整了&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//不在堆顶&nbsp;并且&nbsp;当前结点i的值比父结点小的时候继续向上调整&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;while(i!=1&nbsp;&amp;&amp;&nbsp;flag==0)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//判断是否比父结点的小&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(A[i]&lt;A[i/2])&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swap(A,&nbsp;i,&nbsp;i/2);//交换和父节点的位置\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n\\n第&nbsp;%d&nbsp;次调整堆：\\n&quot;,&nbsp;++count);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printHeap1(A);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=1;//表示已经不需要调整了，当前结点的值比父结点的值要大&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=i/2;&nbsp;//更新编号i为它父结点的编号，从而便于下一次继续向上调整&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n&nbsp;\r\n&nbsp;\r\nint&nbsp;main(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;A[N+1]&nbsp;=&nbsp;{&nbsp;0,&nbsp;2,&nbsp;7,&nbsp;24,&nbsp;11,&nbsp;67,&nbsp;35,&nbsp;25,&nbsp;16,&nbsp;19,&nbsp;97,&nbsp;80,&nbsp;50};&nbsp;//&nbsp;这里为了直接展示调整堆算法，直接给出已经建好堆的数组，免去建堆这一步，A[0]是不使用的，堆从A[1]开始。\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;初始化堆:\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printHeap(A);\r\n&nbsp;&nbsp;&nbsp;&nbsp;A[13]&nbsp;=&nbsp;15;&nbsp;//&nbsp;测试，堆尾增加值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n\\n堆尾增加一个15:\\n&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printHeap1(A);\r\n&nbsp;&nbsp;&nbsp;&nbsp;goup(A,&nbsp;N,&nbsp;13);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">运行结果：&nbsp;<br style=\"box-sizing: border-box;\"/><img src=\"http://img.blog.csdn.net/20160602130243738\" alt=\"向上调整运行结果\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 100%;\"/></p><hr style=\"margin: 2em 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgba(128, 128, 128, 0.0980392); color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><blockquote style=\"box-sizing: border-box; margin: 0px 0px 1.1em; padding: 15px 20px; border-left-width: 10px; border-left-style: solid; border-left-color: rgba(128, 128, 128, 0.0745098); border-radius: 0px 5px 5px 0px; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgba(128, 128, 128, 0.0470588);\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 1.25;\">始于2009-05-26，西理工科协；更新至2016-06-02，杭州。</p></blockquote><p><span style=\"font-size: 14px; line-height: 21px;\"><br/></span><br/></p>',',技术,',69,0,'2016-06-03 12:13:15','2016-06-03 14:13:18',0,NULL,0,NULL),(32,1,'c语言实现回调函数','c语言实现回调函数','','',0,'CSDN同步文章：http://blog.csdn.net/socho/article/details/51583112\r\n\r\ncallback.c\r\n```\r\n/**\r\n * @file c语言实现回调函数\r\n * @detial 在java等更高级的语言中往往已经给我们封装好了回调函数的调用方式，直接用就可以了。\r\n * 而C语言中并没有这种直接可以操作的回调方式，我们用函数指针来实现回调原理。\r\n */\r\n\r\n#include <stdio.h>\r\n\r\n// 将函数名作为指针的格式为：int (ptr)(char p) 即：返回值(指针名)(参数列表)\r\ntypedef int (callback)(char str); // 回调函数的名称为 callback，参数是char p\r\n\r\n// functionA的格式符合 callback 的格式，因此可以看作是一个 callback类型\r\nint functionA(char str)\r\n{\r\n    printf(\"回调 functionA(char str) 函数:%s!\\n\", str);\r\n    return 0;\r\n}\r\n\r\n// functionB的格式符合 callback 的格式，因此也可以看作是一个 callback类型\r\nint functionB(char str)\r\n{\r\n    printf(\"回调 functionB(char str) 函数:%s!\\n\", str);\r\n    return 0;\r\n}\r\n\r\n// 调用回调函数，方式一：通过命名方式\r\nint test1(callback p_callback, char str)\r\n{\r\n    printf(\"test1:\\n不调用回调函数打印:%s!\\n\", str);\r\n    p_callback(str);\r\n    return 0;\r\n}\r\n\r\n// 调用回调函数，方式二：直接通过函数指针\r\nint test2(int (ptr)(), char str)\r\n{\r\n    printf(\"test2:\\n不调用回调函数打印:%s!\\n\", str);\r\n    (ptr)(str);\r\n}\r\n\r\nint main()\r\n{\r\n    char str = \"hello world!\";\r\n    test1(functionA, str);\r\n    test1(functionB, str);\r\n    test2(functionA, str);\r\n    test2(functionB, str);\r\n\r\n    printf(\"test3:\\n\");\r\n    callback test3 = functionB;\r\n    test3(str);\r\n    return 0;\r\n}\r\n```\r\n运行结果 \r\n[root@centos6 data]# gcc callback.c \r\n[root@centos6 data]# ./a.out \r\ntest1: \r\n不调用回调函数打印:hello world!! \r\n回调 functionA(char str) 函数:hello world!! \r\ntest1: \r\n不调用回调函数打印:hello world!! \r\n回调 functionB(char str) 函数:hello world!! \r\ntest2: \r\n不调用回调函数打印:hello world!! \r\n回调 functionA(char str) 函数:hello world!! \r\ntest2: \r\n不调用回调函数打印:hello world!! \r\n回调 functionB(char str) 函数:hello world!! \r\ntest3: \r\n回调 functionB(char str) 函数:hello world!!\r\n\r\n>始于2012-10-05，Tencent；更新至2016-06-04，杭州。\r\n\r\n',',技术,',53,0,'2016-06-04 18:23:15','2017-06-05 00:11:29',0,'',0,NULL),(33,1,'冒泡排序','冒泡排序是我们接触算法所学的第一个排序算法！','','',0,'冒泡排序（Bubble Sort）。\r\n[1]\r\n**时间复杂度**\r\n若文件的初始状态是正序的，一趟扫描即可完成排序。所需的关键字比较次数C和记录移动次数M均达到最小值：$C_{min}=n-1, M_{min}=0$。所以，冒泡排序最好的时间复杂度为$O(n)$。若初始文件是反序的，需要进行n - 1趟排序。每趟排序要进行n - i次关键字的比较(1≤i≤n-1)，且每次比较都必须移动记录三次来达到交换记录位置。在这种情况下，比较和移动次数均达到最大值：\r\n $C_{max}=\\frac{n(n-1)}{2}=O(n^2)$\r\n $M_{max}=\\frac{3n(n-1)}{2}=O(n^2)$\r\n冒泡排序的最坏时间复杂度为$O(n^2)$\r\n综上，因此冒泡排序总的平均时间复杂度为$O(n^2)$\r\n**算法稳定性**\r\n冒泡排序就是把小的元素往前调或者把大的元素往后调。比较是相邻的两个元素比较，交换也发生在这两个元素之间。所以，如果两个元素相等，不用交换；如果两个相等的元素没有相邻，那么即使通过前面的两两交换把两个相邻起来，这时候也不会交换，所以相同元素的前后顺序并没有改变，所以冒泡排序是一种稳定排序算法。\r\n\r\nC语言实现\r\n```c\r\n#include <stdio.h>\r\n#define SIZE 9\r\n\r\nvoid printArr(int arr[], int n)\r\n{\r\n	int i;\r\n	for (i = 0; i < n; i++)\r\n	{\r\n		printf(\"%d \", arr[i]);\r\n	}\r\n}\r\n\r\n/*\r\n * 交换\r\n */\r\nvoid swap(int arr[], int i, int j)\r\n{\r\n	arr[i] = arr[i] ^ arr[j];\r\n	arr[j] = arr[i] ^ arr[j];\r\n	arr[i] = arr[j] ^ arr[i];\r\n}\r\n\r\n/*\r\n * @param arr 待排序的数组\r\n * @param n 数组大小\r\n */\r\nvoid bubble_sort(int arr[], int n)\r\n{\r\n    int i, j, temp;\r\n    for (j = 0; j < n - 1; j++) // 针对所有的元素重复向后扫描的步骤，除了最后一个。\r\n	{\r\n		for (i = 0; i < n - 1 - j; i++) // 对每一对相邻元素作比较，从开始第一对到结尾 n - 1 - j 的最后一对。将最大的数冒泡漂移到最后，所以最后的元素就是是最大的数。\r\n        {\r\n            if(arr[i] > arr[i + 1]) // 比较相邻的元素。如果第一个比第二个大，就交换他们两个。\r\n            {\r\n				swap(arr, i, i+1);\r\n            }\r\n        }\r\n		// 输出日志\r\n		printf(\"第%d次扫描，将最大的数%d冒泡到位置arr[%d]，共对比%d次:\\n\", j+1, arr[n-1-j], n-1-j, n-1-j);\r\n		printArr(arr, n);\r\n		printf(\"\\n\\n\");\r\n	}\r\n        \r\n}\r\n \r\nint main()\r\n{\r\n    int number[SIZE] = {101, -1, 16, 87, 84, 0, 25, 11, 2};\r\n    int i;\r\n	printf(\"原序列:\\n\");\r\n	printArr(number, SIZE);\r\n	printf(\"\\n\\n\");\r\n    bubble_sort(number, SIZE);\r\n}\r\n```\r\n运行结果\r\n[root@centos6 data]# gcc test.c     \r\n[root@centos6 data]# ./a.out \r\n原序列:\r\n101 -1 16 87 84 0 25 11 2 \r\n\r\n第1次扫描，将最大的数101冒泡到位置arr[8]，共对比8次:\r\n-1 16 87 84 0 25 11 2 **101** \r\n\r\n第2次扫描，将最大的数87冒泡到位置arr[7]，共对比7次:\r\n-1 16 84 0 25 11 2 **87 101** \r\n\r\n第3次扫描，将最大的数84冒泡到位置arr[6]，共对比6次:\r\n-1 16 0 25 11 2 **84 87 101** \r\n\r\n第4次扫描，将最大的数25冒泡到位置arr[5]，共对比5次:\r\n-1 0 16 11 2 **25 84 87 101** \r\n\r\n第5次扫描，将最大的数16冒泡到位置arr[4]，共对比4次:\r\n-1 0 11 2 **16 25 84 87 101** \r\n\r\n第6次扫描，将最大的数11冒泡到位置arr[3]，共对比3次:\r\n-1 0 2 **11 16 25 84 87 101** \r\n\r\n第7次扫描，将最大的数2冒泡到位置arr[2]，共对比2次:\r\n-1 0 **2 11 16 25 84 87 101** \r\n\r\n第8次扫描，将最大的数0冒泡到位置arr[1]，共对比1次:\r\n-1 **0 2 11 16 25 84 87 101** \r\n****\r\n>冒泡排序(1)  ．数据结构．2014-03-20[引用日期2008-09-26]\r\n>始于2008-09-26，西理工；更新至2016-06-04，杭州。\r\n',',技术,',43,0,'2016-06-05 15:12:38','2017-06-14 14:00:12',0,'',0,NULL),(34,1,'索引查找',NULL,'','',0,'<span id=\"_baidu_bookmark_start_2\" style=\"display: none; line-height: 0px;\">‍</span><p style=\"text-indent: 0em;\"><span style=\"font-family:宋体;background:white\"><span id=\"_baidu_bookmark_start_1\" style=\"display: none; line-height: 0px;\">‍</span>CSDN同步文章：http://blog.csdn.net/socho/article/details/51585522</span></p><span id=\"_baidu_bookmark_end_3\" style=\"display: none; line-height: 0px;\">‍</span><p style=\"text-indent:29px\"><span style=\"font-family:宋体;background:white\">索引查找是在索引表和主表上进行的查找，主表是线性表。先按照给定的哈希算法</span><span style=\"background:white\">(</span><span style=\"font-family:宋体;background:white\">比如</span><span style=\"background:white\">value%100)</span><span style=\"font-family: 宋体;background:white\">对每一个</span><span style=\"background:white\">value</span><span style=\"font-family:宋体;background:white\">做哈希运算，将</span><span style=\"background:white\">value</span><span style=\"font-family:宋体;background:white\">映射到不同的数据段中</span><span style=\"background:white\">(</span><span style=\"font-family:宋体;background:white\">以模</span><span style=\"background:white\">100</span><span style=\"font-family:宋体;background:white\">为单位</span><span style=\"background:white\">)</span><span style=\"font-family:宋体;background:white\">，这样每隔</span><span style=\"background:white\">100</span><span style=\"font-family:宋体;background:white\">个数段的区间就被一个哈希值做的索引映射到，以这种方式创建主表，同时创建一个索引表，记录每个</span><span style=\"background:white\">100</span><span style=\"font-family:宋体;background:white\">个数区间的索引编号、起始位置、有效数据长度。在查找数据的时候，只要以同样的哈希算法先计算哈希值，直接按该值跳到对应的数据区间，这直接就将查找空间缩小了，然后在这个区间内使用常用的顺序查找、二分查找等方式找到要找的值的位置。</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">#include</span> <span style=\"font-size:14px;color:#A31515;background:white;background: white\"><stdio.h></stdio.h></span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">#define</span><span style=\"font-size: 14px;background: white\"> N 100 </span><span style=\"font-size:14px;color:green;background:white;background: white\">// </span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">主表最大长度</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">#define</span><span style=\"font-size: 14px;background: white\"> M 30 </span><span style=\"font-size:14px;color:green;background:white;background: white\">// </span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">索引表最大长度</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> ROW_WIDTH = 10;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> index_cur_len = 0; </span><span style=\"font-size:14px;color:green;background:white;background:white\">// </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">索引表当前有效索引长度</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> main_len = 0; </span><span style=\"font-size:14px;color:green;background:white;background:white\">// </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">主表长度</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">/**</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">计算索引编号的哈希函数</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;*/</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">#define</span><span style=\"font-size: 14px;background: white\"> hashindex(key) key / 100</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">/**</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">索引项</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;*/</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">typedef</span> <span style=\"font-size:14px;color:blue;background:white;background: white\">struct</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">{</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> index; </span><span style=\"font-size:14px;color:green;background:white;background: white\">// </span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">索引编号，按照间隔固定的每行长度</span><span style=\"font-size:14px;color:green;background:white;background: white\">index_width</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">个数据划分为一个索引段。</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> start; </span><span style=\"font-size:14px;color:green;background:white;background: white\">// </span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">索引起始位置，以此为基准搜索本行内数据，</span><span style=\"font-size:14px;color:green;background:white;background: white\">start = (index - 1) * ROW_WIDTH</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">；</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> length; </span><span style=\"font-size:14px;color:green;background:white;background:white\">// </span><span style=\"font-size: 14px;font-family:宋体;color:green;background:white;background:white\">有效数据长度</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">} IndexUnit;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">/**</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">主表</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;*/</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> main_table[N] = {</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">/*&nbsp; 177,189,100,123,111,0,0,0,0,0, // </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">主表固定的每行长度</span><span style=\"font-size:14px;color:green;background:white;background:white\"> ROW_WIDTH = 10</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">，后面为</span><span style=\"font-size:14px;color:green;background:white;background:white\">0</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">的代表无效数据</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;&nbsp;&nbsp; 201,202,203,204,&nbsp; 0,0,0,0,0,0,</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;&nbsp;&nbsp; 301,302,303,&nbsp; 0,&nbsp; 0,0,0,0,0,0</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">*/</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">};</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">/**</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">索引表</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;*/</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">IndexUnit index_table[M] = {</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">/*&nbsp; {1, 0,5}, // </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">第一行：第一列索引编号</span><span style=\"font-size:14px;color:green;background:white;background:white\">1</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">；第二列索引起始位置</span><span style=\"font-size:14px;color:green;background:white;background: white\"> 0 = (1 - 1) * 10</span><span style=\"font-size: 14px;font-family:宋体;color:green;background:white;background:white\">；第三列有效数据长度是</span><span style=\"font-size:14px;color:green;background:white;background:white\">5</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">个；</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;&nbsp;&nbsp; {2,10,4}, // </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">第二行：第一列索引编号</span><span style=\"font-size:14px;color:green;background:white;background:white\">2</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">；第二列索引起始位置</span><span style=\"font-size:14px;color:green;background:white;background: white\">10 = (2 - 1) * 10</span><span style=\"font-size: 14px;font-family:宋体;color:green;background:white;background:white\">；第三列有效数据长度是</span><span style=\"font-size:14px;color:green;background:white;background:white\">4</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">个；</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;&nbsp;&nbsp; {3,20,3}&nbsp; // </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">第三行：第一列索引编号</span><span style=\"font-size:14px;color:green;background:white;background:white\">3</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">；第二列索引起始位置</span><span style=\"font-size:14px;color:green;background:white;background:white\">20 = (3 - 1) * 10</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">；第三列有效数据长度是</span><span style=\"font-size:14px;color:green;background:white;background:white\">3</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">个；</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">*/</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">};</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">void</span><span style=\"font-size: 14px;background: white\"> create_index(</span><span style=\"font-size:14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> *data, </span><span style=\"font-size: 14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> length){</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> i = 0;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> j = 0;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">// </span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">初始化索引表</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\"> (i = 0; i &lt; M; i++){</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index_table[i].index = i + 1;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index_table[i].start = i * ROW_WIDTH;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index_table[i].length = 0;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">// </span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">将数据写入主表和索引表</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\"> (i = 0; i &lt; length; i++){</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = hashindex(data[i]);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">if</span><span style=\"font-size: 14px;background: white\">(j &gt; index_cur_len) </span><span style=\"font-size:14px;color:green;background:white;background:white\">//</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">记录下当前有效索引长度</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index_cur_len = j;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; main_table[index_table[j-1].start + index_table[j-1].length++] = data[i];</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; main_len = index_cur_len * ROW_WIDTH;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">}</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">/**</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">索引查找算法</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* @param key </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">给定值</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* @return </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">给定值在表中的位置</span><span style=\"font-size:14px;color:green;background:white;background:white\">,</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">返回</span><span style=\"font-size:14px;color:green;background:white;background: white\">-1</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">表示索引表中不存在该索引项</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;*/</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> index_search(</span><span style=\"font-size:14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> key)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">{</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> i = 0;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> j = 0;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> index = hashindex(key); </span><span style=\"font-size:14px;color:green;background:white;background:white\">// </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">求索引编号</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">//</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">遍历索引表</span><span style=\"font-size:14px;color:green;background:white;background: white\">,</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">找到对应的索引项</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\"> (i = 0; i &lt; index_cur_len; i++)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; {</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">//</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">找到索引项</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">if</span><span style=\"font-size: 14px;background: white\"> (index_table[i].index == index)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">//</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">在源数据中顺序查找，也可以使用二分查找等其他更高效的查找方法，这里就不演示了，只说明下索引的基本原理。</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\"> (j = index_table[i].start; j &lt; index_table[i].start + index_table[i].length; j++)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">if</span><span style=\"font-size: 14px;background: white\"> (main_table[j] == key)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background: white;background:white\">return</span><span style=\"font-size: 14px;background: white\"> j;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">break</span><span style=\"font-size: 14px;background: white\">;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">//</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">索引表中不存在该索引项</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">return</span><span style=\"font-size: 14px;background: white\"> -1;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">}</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">/**</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">插入数据</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* @param key </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">给定值</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;* @return 0,</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">插入成功</span><span style=\"font-size:14px;color:green;background:white;background:white\">,</span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">返回</span><span style=\"font-size:14px;color:green;background:white;background: white\">-1</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">表示索引表中不存在该索引项</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:green;background:white;background:white\">&nbsp;*/</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> insert(</span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> key)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">{</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> i = 0;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> index = hashindex(key); </span><span style=\"font-size:14px;color:green;background:white;background:white\">// </span><span style=\"font-size:14px;font-family:宋体;color:green;background:white;background:white\">求索引编号</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">//</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">遍历索引表</span><span style=\"font-size:14px;color:green;background:white;background: white\">,</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">找到对应的索引项</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\"> (i = 0; i &lt; index_cur_len; i++)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; {</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">if</span><span style=\"font-size: 14px;background: white\"> (index_table[i].index == index)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">//</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">依索引项将值插入到主表中，这里为了降低复杂度，只演示了在末尾追加数据。</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;main_table[index_table[i].start + index_table[i].length] = key;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">//</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">更新索引表</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index_table[i].length++;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">return</span><span style=\"font-size: 14px;background: white\"> 0;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">//</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">索引表中不存在该索引项</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">return</span><span style=\"font-size: 14px;background: white\"> -1;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">}</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size:14px;color:blue;background:white;background:white\">int</span><span style=\"font-size: 14px;background: white\"> main()</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">{</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> test[20] = {177,202,189,123,111,302,201,203,301,204,303,100};</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> testlen = 12;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> value = 245;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">int</span><span style=\"font-size: 14px;background: white\"> i = 0;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;================= initial ===================\\n&quot;</span><span style=\"font-size: 14px;background: white\">);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;</span><span style=\"font-size:14px;font-family:宋体;color:#A31515;background:white;background:white\">原数据</span><span style=\"font-size:14px;color:#A31515;background:white;background:white\">:\\t&quot;</span><span style=\"font-size: 14px;background: white\">);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\">(i = 0; i &lt; testlen; i++){</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;%d\\t&quot;</span><span style=\"font-size: 14px;background: white\">, test[i]);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; create_index(test, testlen);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;\\n</span><span style=\"font-size:14px;font-family:宋体;color:#A31515;background:white;background:white\">主表</span><span style=\"font-size:14px;color:#A31515;background:white;background:white\">:&quot;</span><span style=\"font-size: 14px;background: white\">);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\">(i = 0; i &lt; main_len; i++){</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">if</span><span style=\"font-size: 14px;background: white\">(0 == i % 10)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;\\n&quot;</span><span style=\"font-size: 14px;background: white\">);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;%d\\t&quot;</span><span style=\"font-size: 14px;background: white\">, main_table[i]);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;\\n</span><span style=\"font-size:14px;font-family:宋体;color:#A31515;background:white;background:white\">索引表</span><span style=\"font-size:14px;color:#A31515;background:white;background:white\">:\\n&quot;</span><span style=\"font-size: 14px;background: white\">);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\">(i = 0; i &lt; index_cur_len; i++){</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;{index=%d, start=%d, length=%d}\\n&quot;</span><span style=\"font-size: 14px;background: white\">, index_table[i].index, index_table[i].start, index_table[i].length);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;\\n================= insert ===================\\n&quot;</span><span style=\"font-size: 14px;background: white\">);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;</span><span style=\"font-size:14px;font-family:宋体;color:#A31515;background:white;background:white\">插入数据</span><span style=\"font-size:14px;color:#A31515;background:white;background:white\">: %d\\n&quot;</span><span style=\"font-size: 14px;background: white\">, value);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:green;background:white;background: white\">//</span><span style=\"font-size:14px;font-family: 宋体;color:green;background:white;background:white\">插入成功</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">if</span><span style=\"font-size: 14px;background: white\"> (0 == insert(value))</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; {</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;</span><span style=\"font-size:14px;font-family:宋体;color:#A31515;background:white;background:white\">插入主表</span><span style=\"font-size:14px;color:#A31515;background:white;background:white\">:&quot;</span><span style=\"font-size: 14px;background: white\">);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\">(i = 0; i &lt; main_len; i++){</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">if</span><span style=\"font-size: 14px;background: white\">(0 == i % 10)</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background:white\">&quot;\\n&quot;</span><span style=\"font-size: 14px;background: white\">);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;%d\\t&quot;</span><span style=\"font-size: 14px;background: white\">, main_table[i]);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;\\n</span><span style=\"font-size:14px;font-family:宋体;color:#A31515;background:white;background:white\">更新索引表</span><span style=\"font-size:14px;color:#A31515;background:white;background:white\">:\\n&quot;</span><span style=\"font-size: 14px;background: white\">);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">for</span><span style=\"font-size: 14px;background: white\">(i = 0; i &lt; index_cur_len; i++){</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;{index=%d, start=%d, length=%d}\\n&quot;</span><span style=\"font-size: 14px;background: white\">, index_table[i].index, index_table[i].start, index_table[i].length);</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(</span><span style=\"font-size:14px;color:#A31515;background:white;background: white\">&quot;\\n</span><span style=\"font-size:14px;font-family:宋体;color:#A31515;background:white;background:white\">通过索引算法查找</span><span style=\"font-size:14px;color:#A31515;background:white;background:white\"> %d </span><span style=\"font-size:14px;font-family:宋体;color:#A31515;background:white;background:white\">，在主表中的位置是</span><span style=\"font-size:14px;color:#A31515;background:white;background:white\">:main_table[%d]\\n&quot;</span><span style=\"font-size: 14px;background: white\">, value, index_search(value));</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;color:blue;background:white;background: white\">return</span><span style=\"font-size: 14px;background: white\"> 0;</span></p><p style=\"text-indent:0;line-height: normal;text-autospace:none\"><span style=\"font-size: 14px;background: white\">}</span></p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">运行结果：</span></p><p style=\"text-indent:29px\">[root@centos6 data]# gcc test.c</p><p style=\"text-indent:29px\">[root@centos6 data]# ./a.out</p><p style=\"text-indent:29px\">================= initial ===================</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">原数据</span>: 177&nbsp;&nbsp;&nbsp;&nbsp; 202&nbsp;&nbsp;&nbsp;&nbsp; 189&nbsp;&nbsp;&nbsp;&nbsp; 123&nbsp;&nbsp;&nbsp;&nbsp; 111&nbsp;&nbsp;&nbsp;&nbsp; 302&nbsp;&nbsp;&nbsp;&nbsp; 201&nbsp;&nbsp;&nbsp;&nbsp; 203&nbsp;&nbsp;&nbsp;&nbsp; 301&nbsp;&nbsp;&nbsp;&nbsp; 204&nbsp;&nbsp;&nbsp;&nbsp; 303&nbsp;&nbsp;&nbsp;&nbsp; 100</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">主表</span>:</p><p style=\"text-indent:29px\">177&nbsp;&nbsp;&nbsp;&nbsp; 189&nbsp;&nbsp;&nbsp;&nbsp; 123&nbsp;&nbsp;&nbsp;&nbsp; 111&nbsp;&nbsp;&nbsp;&nbsp; 100&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0</p><p style=\"text-indent:29px\">202&nbsp;&nbsp;&nbsp;&nbsp; 201&nbsp;&nbsp;&nbsp;&nbsp; 203&nbsp;&nbsp;&nbsp;&nbsp; 204&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0</p><p style=\"text-indent:29px\">302&nbsp;&nbsp;&nbsp;&nbsp; 301&nbsp;&nbsp;&nbsp;&nbsp; 303&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">索引表</span>:</p><p style=\"text-indent:29px\">{index=1, start=0, length=5}</p><p style=\"text-indent:29px\">{index=2, start=10, length=4}</p><p style=\"text-indent:29px\">{index=3, start=20, length=3}</p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"text-indent:29px\">================= insert ===================</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">插入数据</span>: 245</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">插入主表</span>:</p><p style=\"text-indent:29px\">177&nbsp;&nbsp;&nbsp;&nbsp; 189&nbsp;&nbsp;&nbsp;&nbsp; 123&nbsp;&nbsp;&nbsp;&nbsp; 111&nbsp;&nbsp;&nbsp;&nbsp; 100&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0</p><p style=\"text-indent:29px\">202&nbsp;&nbsp;&nbsp;&nbsp; 201&nbsp;&nbsp;&nbsp;&nbsp; 203&nbsp;&nbsp;&nbsp;&nbsp; 204&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\">245</span>&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0</p><p style=\"text-indent:29px\">302&nbsp;&nbsp;&nbsp;&nbsp; 301 &nbsp;&nbsp;&nbsp;&nbsp;303&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">更新索引表</span>:</p><p style=\"text-indent:29px\">{index=1, start=0, length=5}</p><p style=\"text-indent:29px\">{index=2, start=10, length=<span style=\"color:red\">5</span>}</p><p style=\"text-indent:29px\">{index=3, start=20, length=3}</p><p style=\"text-indent:29px\">&nbsp;</p><p style=\"text-indent:29px\"><span style=\"font-family:宋体\">通过索引算法查找</span> 245 <span style=\"font-family:宋体\">，在主表中的位置是</span>:main_table[14]</p><p style=\"text-indent:28px\"><span style=\"font-size:14px;line-height:150%;font-family:宋体;color:#362E2B\">始于</span><span style=\"font-size:14px;line-height:150%;font-family:&#39;microsoft yahei&#39;,&#39;serif&#39;;color:#362E2B\">2012-05-13</span><span style=\"font-size:14px;line-height:150%;font-family:宋体;color:#362E2B\">，</span><span style=\"font-size: 14px;line-height:150%;font-family:&#39;microsoft yahei&#39;,&#39;serif&#39;;color:#362E2B\">Tencent</span><span style=\"font-size:14px;line-height:150%;font-family:宋体;color:#362E2B\">；更新至</span><span style=\"font-size:14px;line-height:150%;font-family:&#39;microsoft yahei&#39;,&#39;serif&#39;;color:#362E2B\">2016-06-04</span><span style=\"font-size:14px;line-height:150%;font-family:宋体;color:#362E2B\">，杭州。</span></p><p><br/></p>',',技术,',50,0,'2016-06-04 18:25:30','2016-06-04 18:28:04',0,NULL,0,NULL),(35,1,'linux下如何让程序无法重复启动',NULL,'','',0,'<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">同步CSDN文章：http://blog.csdn.net/socho/article/details/51586517</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">通常情况下一个程序可以被多次执行，也就存在多个相同的进程。有时候我们有些全局资源只允许单进程访问，为了不让进程多起，要实现进程在一台机器上只能有一个实例的方法。&nbsp;<br style=\"box-sizing: border-box;\"/>经查找，可以使用flock的方式，建一个lock file，让程序执行前先检查是否有执行中的实例，即对文件加锁。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">single_program.c</p><pre class=\"brush:cpp;toolbar:false\">#include&nbsp;&lt;stdio.h&gt;\r\n#include&nbsp;&lt;stdlib.h&gt;\r\n#include&nbsp;&lt;string.h&gt;\r\n#include&nbsp;&lt;sys/file.h&gt;\r\n#include&nbsp;&lt;sys/stat.h&gt;\r\n#include&nbsp;&lt;sys/types.h&gt;\r\n#include&nbsp;&lt;errno.h&gt;\r\n#include&nbsp;&lt;unistd.h&gt;\r\n\r\nint&nbsp;main()\r\n{\r\n	int&nbsp;lock_file&nbsp;=&nbsp;open(&quot;/tmp/single_proc.lock&quot;,&nbsp;O_CREAT|O_RDWR,&nbsp;0666);\r\n	int&nbsp;rc&nbsp;=&nbsp;flock(lock_file,&nbsp;LOCK_EX|LOCK_NB);\r\n	if&nbsp;(rc)\r\n	{\r\n		if&nbsp;(EWOULDBLOCK&nbsp;==&nbsp;errno)\r\n		{\r\n			printf(&quot;该实例已经运行，退出!\\n&quot;);\r\n		}\r\n	}\r\n	else\r\n	{\r\n		char&nbsp;buffer[64];\r\n		sprintf(buffer,&nbsp;&quot;pid:%d\\n&quot;,&nbsp;getpid());\r\n		write(lock_file,&nbsp;buffer,&nbsp;strlen(buffer));\r\n		printf(&quot;已启动新实例，输入任何字符退出...\\n&quot;);\r\n\r\n		scanf(&quot;%s&quot;,buffer);\r\n		printf(&quot;Exit\\n&quot;,buffer);\r\n		close(lock_file);&nbsp;//&nbsp;不要忘记释放文件指针\r\n	}\r\n	exit(0);\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">运行结果&nbsp;<br style=\"box-sizing: border-box;\"/>[root@centos6 data]# gcc single_program.c -o single_program&nbsp;<br style=\"box-sizing: border-box;\"/>[root@centos6 data]# ./single_program&nbsp;<br style=\"box-sizing: border-box;\"/>已启动新实例，输入任何字符退出…</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">以上程序会阻塞等待，然后新开一个终端，同样执行该程序&nbsp;<br style=\"box-sizing: border-box;\"/>[root@centos6 data]# ./single_program&nbsp;<br style=\"box-sizing: border-box;\"/>该实例已经运行，退出!&nbsp;<br style=\"box-sizing: border-box;\"/>[root@centos6 data]#&nbsp;<br style=\"box-sizing: border-box;\"/>可以看到程序一启动就退出了。查看锁文件&nbsp;<br style=\"box-sizing: border-box;\"/>[root@centos6 data]# cat /tmp/single_proc.lock&nbsp;<br style=\"box-sizing: border-box;\"/>pid:7162&nbsp;<br style=\"box-sizing: border-box;\"/>表明现在已经加了一个全局的锁文件，无法在启动新进程了。查看已经启动的进程&nbsp;<br style=\"box-sizing: border-box;\"/>[root@centos6 data]# ps -ef|grep -v grep|grep single_program&nbsp;<br style=\"box-sizing: border-box;\"/>root 7162 6521 0 22:13 pts/0 00:00:00 ./single_program&nbsp;<br style=\"box-sizing: border-box;\"/>确实只有一个进程，这样的方式我们可以用在一些只允许一台机器上启动单进程的特殊场景。</p><hr style=\"margin: 2em 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgba(128, 128, 128, 0.0980392); color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><blockquote style=\"box-sizing: border-box; margin: 0px 0px 1.1em; padding: 15px 20px; border-left-width: 10px; border-left-style: solid; border-left-color: rgba(128, 128, 128, 0.0745098); border-radius: 0px 5px 5px 0px; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgba(128, 128, 128, 0.0470588);\"><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 1.25;\">始于2011-12-03，Tencent；更新至2016-06-04，杭州。</p></blockquote><p><br/></p>',',技术,',46,0,'2016-06-04 22:28:48','2016-06-04 22:34:35',0,NULL,0,NULL),(36,1,'排列组合 C语言实现','排列组合 C语言实现','','',0,'```C\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint array[] = {1,2,3,4};\r\n\r\n#define N  4\r\n#define M  3\r\nint results[N] = {0}; //保存已经找到的结果前缀数组\r\nint results_end = 0; //结果前缀数组有效数据下标\r\nint is_used[N] = {0}; //是否已经排列过了的标志\r\n\r\n/**\r\n * 排列\r\n * @param deep 递归深度\r\n * @param n 数组最大长度\r\n */\r\nvoid perm(int deep, int n)\r\n{\r\n    int i;\r\n    if (deep > n) // 越界递归结束\r\n    {\r\n        return;\r\n    }\r\n\r\n    if (deep == n) // 找到结果，打印，递归结束\r\n    {\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            printf(\"%d\", results[i]);\r\n        }\r\n        printf(\"\\t\");\r\n        return ;\r\n    }\r\n\r\n    for (i = 0; i < n; i++)\r\n    {\r\n        if (is_used[i] == 0)\r\n        {\r\n            is_used[i] = 1;\r\n            results[deep] = array[i];\r\n            perm(deep+1, n);\r\n            is_used[i] = 0;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 组合\r\n * @param deep 递归深度\r\n * @param n 数组最大长度\r\n * @param m 要查找的组合的长度\r\n */\r\nvoid comb(int deep, int n, int m)\r\n{\r\n    int i = 0;\r\n    if (deep > n) // 越界递归结束\r\n        return ;\r\n    if (results_end == m) // 找到结果，打印，递归结束\r\n    {\r\n        for (i = 0; i < m; i++)\r\n        {\r\n            printf(\"%d\", results[i]);\r\n        }\r\n        printf(\"\\t\");\r\n        return ;\r\n    }\r\n    results[results_end++] = array[deep];\r\n    comb(deep+1, n, m); //向下一级递归\r\n    results_end--;\r\n    comb(deep+1, n, m); //向下一级递归\r\n}\r\n\r\nint main()\r\n{\r\n    int i = 0;\r\n    printf(\"全排列:\\n\");\r\n    perm(0, N);\r\n    printf(\"\\n1~%d的所有组合:\\n\", N);\r\n    for(i=1; i<=N; i++){\r\n        comb(0, N, i);\r\n    }\r\n    printf(\"\\n\");\r\n    return 0;\r\n}\r\n```\r\n运行结果\r\n[root@centos6 data]# gcc test.c \r\n[root@centos6 data]# ./a.out \r\n全排列:\r\n1234    1243    1324    1342    1423    1432    2134    2143    2314    2341   2413     2431    3124    3142    3214    3241    3412    3421    4123    4132   4213     4231    4312    4321\r\n1~4的所有组合:\r\n1       2       3       4       12      13      14      23      24      34     123      124     134     234     1234\r\n****\r\n>始于2010-12-30，Tencent；更新至2016-06-02，杭州。\r\n>CSDN同步文章：http://blog.csdn.net/socho/article/details/51586749',',技术,',54,0,'2016-06-05 07:32:31','2017-06-14 10:44:22',0,'',0,NULL),(37,1,'快速排序',NULL,'','',0,'<p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">CSDN同步文章：http://blog.csdn.net/socho/article/details/51591293</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">C语言实现</span></p><pre class=\"brush:cpp;toolbar:false\">#include&nbsp;&lt;stdio.h&gt;\r\n#define&nbsp;N&nbsp;9\r\nint&nbsp;A[N]&nbsp;=&nbsp;{&nbsp;10,&nbsp;-3&nbsp;,&nbsp;28,&nbsp;76,&nbsp;37,&nbsp;55,&nbsp;-1,&nbsp;99,&nbsp;11};\r\nvoid&nbsp;printArr()\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;N;&nbsp;i++)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;%d&nbsp;&quot;,&nbsp;A[i]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;\\n&quot;);\r\n}\r\nvoid&nbsp;quick_sort(int&nbsp;a[],int&nbsp;numsize)&nbsp;//a是整形数组，numsize是元素个数&nbsp;\r\n{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i&nbsp;=&nbsp;0,&nbsp;j&nbsp;=&nbsp;numsize-1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;val&nbsp;=&nbsp;a[0];//指定参考值val大小\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(numsize&gt;1)//确保数组长度至少为2，否则无需排序&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(i&lt;j)//循环结束条件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(&nbsp;;&nbsp;i&nbsp;&lt;&nbsp;j;&nbsp;j--)&nbsp;//从后向前搜索比val小的元素，找到后填到a[i]中并跳出循环&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(a[j]&lt;val)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i]=a[j];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;参考值%d，前&nbsp;%d的元素|&nbsp;&quot;,&nbsp;val,&nbsp;val);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printArr();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i]=val;&nbsp;//将保存在val中的数放到a[i]中\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;参考值%d，整理结果\\t\\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&quot;,&nbsp;val);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printArr();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quick_sort(a,i);&nbsp;//递归，对前i个数排序&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quick_sort(a+i+1,numsize-1-i);&nbsp;//对i+1到numsize这numsize-1-i个数排序&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n}\r\nint&nbsp;main()\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;原数列|&nbsp;&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;printArr();\r\n&nbsp;&nbsp;&nbsp;&nbsp;quick_sort(A,&nbsp;N);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;\r\n}</pre><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">运行结果&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">[root@centos6 data]# gcc test.c&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">[root@centos6 data]# ./a.out&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">原数列| 10 -3 28 76 37 55 -1 99 11&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值10，前 &lt;– 后 找a[j–]&lt;10的元素| -1 -3 28 76 37 55 -1 99 11&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值10，前 –&gt; 后 找a[i++]&gt;10的元素| -1 -3 28 76 37 55 28 99 11&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值10，整理结果 | -1 -3 10 76 37 55 28 99 11&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值-1，前 &lt;– 后 找a[j–]&lt;-1的元素 | -3 -3 10 76 37 55 28 99 11&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值-1，整理结果 | -3 -1 10 76 37 55 28 99 11&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值76，前 &lt;– 后 找a[j–]&lt;76的元素 | -3 -1 10 11 37 55 28 99 11&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值76，前 –&gt; 后 找a[i++]&gt;76的元素| -3 -1 10 11 37 55 28 99 99&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值76，整理结果 | -3 -1 10 11 37 55 28 76 99&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值11，整理结果 | -3 -1 10 11 37 55 28 76 99&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值37，前 &lt;– 后 找a[j–]&lt;37的元素| -3 -1 10 11 28 55 28 76 99&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值37，前 –&gt; 后 找a[i++]&gt;37的</span></span><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">元素| -3 -</span><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">1 10 11 28 55 55 76 99&nbsp;</span><br style=\"box-sizing: border-box; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">参考值37，整理结果 | -3 -1 10 11 28 37 55 76 99</span></span></p><p><strong>结果分析</strong></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">假设有两个指针，i指向开始，j指向结束。i从前向后运动做比较，j从后向前运动做比较，当两者交集的时候，比较结束。&nbsp;</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">1.参考值10</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">这是最开始的情况，将数组第一个元素A[0]作为参考值，另找一变量保存该值，i=0</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 0, 0);\">10</span><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\"> -3 28 76 37 55 -1 99 11</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">1&gt;后--&gt;前</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">然后，先从后往前找小于10的数，j递减，i=0,j=8</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td><span style=\"color:red\">i</span></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td><span style=\"color:red\">j</span></td></tr><tr><td>A[N]</td><td bgcolor=\"red\">10</td><td>-3</td><td>28</td><td>76</td><td>37</td><td>55</td><td>-1</td><td>99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span id=\"_baidu_bookmark_start_17\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_19\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_21\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_23\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_25\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_27\" style=\"display: none; line-height: 0px;\">‍</span><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">11比10大，不符合条件，略过，继续向前找，i=0,j=7</span><span id=\"_baidu_bookmark_end_28\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_26\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_24\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_22\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_20\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_18\" style=\"display: none; line-height: 0px;\">‍</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td><span style=\"color:red\">i</span></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td><span style=\"color:red\">j</span></td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"red\">10</td><td>-3</td><td>28</td><td>76</td><td>37</td><td>55</td><td>-1</td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span id=\"_baidu_bookmark_start_1\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_3\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_5\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_7\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_9\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_11\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_13\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_15\" style=\"display: none; line-height: 0px;\">‍</span><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">99比10大，不符合条件，略过，继续向前找，i=0,j=6</span><span id=\"_baidu_bookmark_end_16\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_14\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_12\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_10\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_8\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_6\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_4\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_2\" style=\"display: none; line-height: 0px;\">‍</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td><span style=\"color:red\">i</span></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td><span style=\"color:red\">j</span></td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"red\">10</td><td>-3</td><td>28</td><td>76</td><td>37</td><td>55</td><td bgcolor=\"#7FFFD4\">-1</td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">-1比10小，符合条件，将-1拷贝到参考值10的位置A[i]去，则此时A[j]位置的数据已经没有意义了，我们可以将它置0或者不管也行，将来会将别的值拷贝到此位置，i=0,j=6</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td><span style=\"color:red\">i</span></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td width=\"0\"><span style=\"color:red\">j</span></td><td width=\"16\">7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"red\">-1</td><td>-3</td><td>28</td><td>76</td><td>37</td><td>55</td><td bgcolor=\"#7FFFD4\" width=\"16\"><span style=\"text-decoration: line-through;\">-1</span></td><td bgcolor=\"#7FFFD4\" width=\"16\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">停止当前方向查找，转向从前往后找。</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">2&gt;前--&gt;后</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">接上一步，这次以原来参考值所在位置A[0+1]，从前向后查找大于10的数，i递增，i=1,j=6</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td><span style=\"color:red\">i</span></td><td>2</td><td>3</td><td>4</td><td>5</td><td><span style=\"color:red\">j</span></td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-1</td><td bgcolor=\"orange\">-3</td><td>28</td><td>76</td><td>37</td><td>55</td><td bgcolor=\"#7FFFD4\"><span style=\"text-decoration: line-through;\">-1</span></td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">-3比10小，不符合条件，略过，继续向后找，i=2,j=6</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td>1</td><td><span style=\"color:red\">i</span></td><td>3</td><td>4</td><td>5</td><td><span style=\"color:red\">j</span></td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-1</td><td bgcolor=\"orange\">-3</td><td bgcolor=\"orange\">28</td><td>76</td><td>37</td><td>55</td><td bgcolor=\"#7FFFD4\"><span style=\"text-decoration: line-through;\">-1</span></td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">28比10大，符合条件，将28拷贝A[j]去，则此时A[i]位置的数据已经没有意义了，我们可以将它置0或者不管也行，将来会将别的值拷贝到此位置，i=2,j=6</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td>1</td><td><span style=\"color:red\">i</span></td><td>3</td><td>4</td><td>5</td><td><span style=\"color:red\">j</span></td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-1</td><td bgcolor=\"orange\">-3</td><td bgcolor=\"orange\"><span style=\"text-decoration: line-through;\">28</span></td><td>76</td><td>37</td><td>55</td><td bgcolor=\"#7FFFD4\">28</td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">停止当前方向查找，此时发现i依然小于j，对参考值10的整理还没有结束。再转向从后往后前查找，直到i和j相遇为止。</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">3&gt;后--&gt;前</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">接上一步，这次从后往前找小于10的数，j递减，i=2,j=5</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td>1</td><td><span style=\"color:red\">i</span></td><td>3</td><td>4</td><td><span style=\"color:red\">j</span></td><td>6</td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-1</td><td bgcolor=\"orange\">-3</td><td bgcolor=\"orange\"><span style=\"text-decoration: line-through;\">28</span></td><td>76</td><td>37</td><td bgcolor=\"#7FFFD4\">55</td><td bgcolor=\"#7FFFD4\">28</td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">55比10大，不符合条件，略过，继续向前找，i=2,j=4</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td>1</td><td><span style=\"color:red\">i</span></td><td>3</td><td><span style=\"color:red\">j</span></td><td>5</td><td>6</td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-1</td><td bgcolor=\"orange\">-3</td><td bgcolor=\"orange\"><span style=\"text-decoration: line-through;\">28</span></td><td>76</td><td bgcolor=\"#7FFFD4\">37</td><td bgcolor=\"#7FFFD4\">55</td><td bgcolor=\"#7FFFD4\">28</td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">37比10大，不符合条件，略过，继续向前找，i=2,j=3</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td>1</td><td><span style=\"color:red\">i</span></td><td><span style=\"color:red\">j</span></td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-1</td><td bgcolor=\"orange\">-3</td><td bgcolor=\"orange\"><span style=\"text-decoration: line-through;\">28</span></td><td bgcolor=\"#7FFFD4\">76</td><td bgcolor=\"#7FFFD4\">37</td><td bgcolor=\"#7FFFD4\">55</td><td bgcolor=\"#7FFFD4\">28</td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">76比10大，不符合条件，略过，继续向前找，i=2,j=2\r\n当i=2,j=2时，此时发现i和j相遇了，则停止查找。</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">4&gt;参考值归位</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">i和j已经相遇，将参考值10拷贝到A[i]的位置</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td>1</td><td style=\"word-break: break-all;\"><span style=\"color:red\">i=j</span></td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-1</td><td bgcolor=\"orange\">-3</td><td bgcolor=\"red\">10</td><td bgcolor=\"#7FFFD4\">76</td><td bgcolor=\"#7FFFD4\">37</td><td bgcolor=\"#7FFFD4\">55</td><td bgcolor=\"#7FFFD4\">28</td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">至此，对参考值10的整理已经结束，可以看到10的左侧都是小于10的数，10的右侧都是大于10的数。\r\n这这是完成了第一轮整理，接下来，还要分两部分递归，将10的左侧{A[0]~A[1]}和10的右侧{A[3]~A[8]}作为子集，分别按以上相同的步骤递归调用函数整理。&nbsp;</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">2.参考值-1\r\n整理过程就不写了，与参考值10的过程一样，这里直接给出整理完成的结果</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-3</td><td bgcolor=\"red\">-1</td><td bgcolor=\"#7FFFD4\">10</td><td bgcolor=\"#7FFFD4\">76</td><td bgcolor=\"#7FFFD4\">37</td><td bgcolor=\"#7FFFD4\">55</td><td bgcolor=\"#7FFFD4\">28</td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">3.参考值76</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-3</td><td bgcolor=\"orange\">-1</td><td bgcolor=\"orange\">10</td><td bgcolor=\"red\">76</td><td bgcolor=\"#7FFFD4\">37</td><td bgcolor=\"#7FFFD4\">55</td><td bgcolor=\"#7FFFD4\">28</td><td bgcolor=\"#7FFFD4\">99</td><td bgcolor=\"#7FFFD4\">11</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">4.参考值11\r\n这个没有可移动的，跳过</span></p><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">5.参考值37</span></p><table border=\"1px;\"><tbody><tr class=\"firstRow\"><td>下标</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td></tr><tr><td>A[N]</td><td bgcolor=\"orange\">-3</td><td bgcolor=\"orange\">-1</td><td bgcolor=\"orange\">10</td><td bgcolor=\"orange\">11</td><td bgcolor=\"orange\">28</td><td bgcolor=\"red\">37</td><td bgcolor=\"#7FFFD4\">55</td><td bgcolor=\"#7FFFD4\">76</td><td bgcolor=\"#7FFFD4\">99</td></tr></tbody></table><p><span style=\"color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 26px; background-color: rgb(255, 255, 255);\">至此整个排序结束，已经是有序队列！</span></p>',',技术,',113,0,'2016-06-05 23:23:39','2016-06-14 18:03:28',0,NULL,0,NULL),(38,1,'C调用graphviz绘制堆',NULL,'','',0,'之前的博客[《对”堆”的理解》](http://blog.csdn.net/socho/article/details/51565498 \"《对”堆”的理解》\")中打印堆是在终端中，不是很直观，发现一个可以生成图片的利器graphviz，于是用c语言调用下，程序运行中生成图片，特别直观了。\r\n以上是用终端打印出来的，发现了一个绘图利器graphviz，可以把堆画出来。安装这个软件什么的就不讲了，自己百度，这里默认已经安装好了。所以，对以上代码更新\r\n```\r\n#include <stdio.h>\r\n#define N 12\r\nvoid printHeap(int A[], char *filename, int color_point){\r\n    ///// 这里是在终端打印节点 /////\r\n    printf(&quot;            -----------%d-----------\\n&quot;, A[1]);\r\n    printf(&quot;           /                       \\\\\\n&quot;);\r\n    printf(&quot;      ----%d----               ----%d----\\n&quot;, A[2], A[3]);\r\n    printf(&quot;     /          \\\\             /          \\\\\\n&quot;);\r\n    printf(&quot;  --%d--     ---%d---     ---%d          %d\\n&quot;, A[4], A[5], A[6], A[7]);\r\n    printf(&quot; /      \\\\   /        \\\\   /\\n&quot;);\r\n    printf(&quot;%d      %d %d        %d %d\\n&quot;, A[8], A[9], A[10], A[11] , A[12]);\r\n    ///// 以下是输出到heap_*.dot文件中，供用graphicvz生成png图片节点表示法用 /////\r\n    int i = 0;\r\n    FILE* fp = fopen(filename, &quot;w+&quot;); //dot -Tpng heap.dot -o heap.png\r\n    if( NULL == fp)\r\n    {\r\n        fprintf(stderr, &quot;打开文件描述符失败\\n&quot;);\r\n        return;\r\n    }\r\n    fprintf(fp, &quot;digraph {\\n&quot;);\r\n    for ( i = 1; i &lt;= N/2; i++)\r\n    {\r\n        if (i*2 &lt;= N)\r\n        {\r\n            fprintf(fp, &quot; %llu -&gt; %llu\\n&quot;, A[i], A[i*2]) ;\r\n        } else {\r\n            fprintf(fp, &quot; %llu -&gt; null [style = dotted]\\n&quot;, A[i]); // 设置null节点连接线的属性\r\n        }\r\n        if (i*2+1 &lt;= N){\r\n            fprintf(fp, &quot; %llu -&gt; %llu\\n&quot;, A[i], A[i*2+1]);\r\n        } else {\r\n            fprintf(fp, &quot; %llu -&gt; null [style = dotted]\\n&quot;, A[i]);\r\n        }\r\n    }\r\n    if (0 != color_point) // 需要染色的节点\r\n    {\r\n        fprintf(fp, &quot;;\\n %d [color = red]\\n&quot;, color_point);\r\n    }\r\n    fprintf(fp, &quot;;\\n null [style = dotted]}\\n&quot;); // 设置null节点的属性\r\n    fclose(fp);\r\n}\r\nvoid swap(int A[], int t, int i){\r\n    A[t] = A[t] ^ A[i];\r\n    A[i] = A[t] ^ A[i];\r\n    A[t] = A[i] ^ A[t];\r\n}\r\n/* 向下调整。\r\n * @param A 堆的线性存储方式，数组\r\n * @param n 节点总数\r\n * @param i 需要向下调整的节点编号\r\n */\r\nvoid godown(int A[], int n, int i) //传入一个需要向下调整的结点编号i，这里传入1，即从堆的顶点开始向下调整 \r\n{\r\n    int t,flag=0,count=0;//flag用来标记是否需要继续向下调整 \r\n    //当i结点有儿子的时候（其实是至少有左儿子的情况下）并且有需要继续调整的时候循环窒执行\r\n    while( i*2 A[i*2] )\r\n            t=i*2;\r\n        else\r\n            t=i; \r\n        //如果他有右儿子的情况下，再对右儿子进行讨论 \r\n        if(i*2+1  A[i*2+1])\r\n                t=i*2+1;\r\n        }\r\n        //如果发现最小的结点编号不是自己，说明子结点中有比父结点更小的  \r\n        if(t!=i)\r\n        {\r\n            swap(A, t, i);//交换\r\n            i=t;//更新i为刚才与它交换的儿子结点的编号，便于接下来继续向下调整\r\n            count++;\r\n            printf(&quot;\\n\\n第 %d 次调整堆：\\n&quot;, count);\r\n            char filename[10];\r\n            sprintf(filename, &quot;heap%d.dot&quot;, count);\r\n            printHeap(A, filename, 17);\r\n        }\r\n        else\r\n            flag=1;//则否说明当前的父结点已经比两个子结点都要小了，不需要在进行调整了,退出\r\n    }\r\n}\r\nint main(){\r\n    int A[N+1] = { 0, 2, 7, 24, 11, 67, 35, 25, 16, 19, 97, 80, 50}; // 这里为了直接展示调整堆算法，直接给出已经建好堆的数组，免去建堆这一步，A[0]是不使用的，堆从A[1]开始。\r\n    printf(&quot;初始化堆:\\n&quot;);\r\n    printHeap(A, &quot;heap.dot&quot;, 0);\r\n    A[1] = 17; // 测试，修改堆顶值\r\n    printf(\"\\n\\n修改堆顶值为17:\\n\");\r\n    printHeap(A, &quot;heap0.dot&quot;, 17);\r\n    godown(A, N, 1);\r\n    return 0;\r\n}\r\n```\r\n编译gcc heap.c -o heap \r\n然后执行./heap\r\n可以看到同之前一样也在打印出堆，不过这次多生成了一些东西，在当前目录下发现了heap.dot、heap0.dot、heap1.dot、heap2.dot、heap3.dot几个文件，然后在当前目录下写一个脚本dot.sh，编辑脚本，内容如下\r\n```\r\n#!/bin/sh\r\ndot -Tpng heap.dot -o heap.png\r\ndot -Tpng heap0.dot -o heap0.png\r\ndot -Tpng heap1.dot -o heap1.png\r\ndot -Tpng heap2.dot -o heap2.png\r\ndot -Tpng heap3.dot -o heap3.png\r\n```\r\ndot是graphviz的命令，记得要把这个燃尽安装上哦。\r\n然后，执行脚本./dot.sh\r\n然后就发现生成了heap.png、heap0.png、heap1.png、heap2.png、heap3.png，分别是上面终端打印出几种形态的图片版本，例如\r\n![heap.png](http://img.blog.csdn.net/20160608202823419)\r\n![heap0.png](http://img.blog.csdn.net/20160608202838778)\r\n![heap1.png](http://img.blog.csdn.net/20160608202854107)\r\n![heap2.png](http://img.blog.csdn.net/20160608202912889)\r\n![heap3.png](http://img.blog.csdn.net/20160608202925092)\r\n',',技术,',55,0,'2016-06-12 16:44:41','2016-08-13 16:05:06',0,NULL,0,NULL),(39,1,'Golang实现基于时间轮算法的定时器',NULL,'','',0,'关于什么是时间轮算法，自己百度吧，这里列出我用go语言实现的时间轮算法，已经上线应用，稳定。\r\n```golang\r\npackage timer\r\nimport (\r\n    \"log\"\r\n    \"sync\"\r\n    \"time\"\r\n)\r\nconst wheel_cnt uint8 = 5                                                                   //时间轮数量5个\r\nvar element_cnt_per_wheel = [wheel_cnt]uint32{256, 64, 64, 64, 64}                          //每个时间轮的槽(元素)数量。在 256+64+64+64+64 = 512 个槽中，表示的范围为 2^32\r\nvar right_shift_per_wheel = [wheel_cnt]uint32{8, 6, 6, 6, 6}                                //当指针指向当前时间轮最后一位数，再走一位就需要向上进位。每个时间轮进位的时候，使用右移的方式，最快实现进位。这里是每个轮的进位二进制位数\r\nvar base_per_wheel = [wheel_cnt]uint32{1, 256, 256 * 64, 256 * 64 * 64, 256 * 64 * 64 * 64} //记录每个时间轮指针当前指向的位置\r\nvar mutex sync.Mutex                                                                        //加锁\r\nvar rwmutex sync.RWMutex\r\nvar newest [wheel_cnt]uint32                           //每个时间轮当前指针所指向的位置\r\nvar timewheels [5][]*Node                              //定义5个时间轮\r\nvar TimerMap map[string]*Node = make(map[string]*Node) //保存待执行的计时器，方便按链表节点指针地址直接删除定时器\r\ntype Timer struct {\r\n    Name        string            //定时器名称\r\n    Inteval     uint32            //时间间隔，即以插入该定时器的时间为起点，Inteval秒之后执行回调函数DoSomething()。例如进程插入该定时器的时间是2015-04-05 10:23:00，Inteval=5，则执行DoSomething()的时间就是2015-04-05 10:23:05。\r\n    DoSomething func(interface{}) //自定义事件处理函数，需要触发的事件\r\n    Args        interface{}       //上述函数的输入参数\r\n}\r\nfunc SetTimer(name string, inteval uint32, handler func(interface{}), args interface{}) {\r\n    if inteval &lt;= 0 {\r\n        return\r\n    }\r\n    var bucket_no uint8 = 0\r\n    var offset uint32 = inteval\r\n    var left uint32 = inteval\r\n    for offset &gt;= element_cnt_per_wheel[bucket_no] { //偏移量大于当前时间轮容量，则需要向高位进位\r\n        offset &gt;&gt;= right_shift_per_wheel[bucket_no] //计算高位的值。偏移量除以低位的进制。比如低位当前是256，则右移8个二进制位，就是除以256，得到的结果是高位的值。\r\n        var tmp uint32 = 1\r\n        if bucket_no == 0 {\r\n            tmp = 0\r\n        }\r\n        left -= base_per_wheel[bucket_no] * (element_cnt_per_wheel[bucket_no] - newest[bucket_no] - tmp)\r\n        bucket_no++\r\n    }\r\n    if offset &lt; 1 {\r\n        return\r\n    }\r\n    if inteval &lt; base_per_wheel[bucket_no]*offset {\r\n        return\r\n    }\r\n    left -= base_per_wheel[bucket_no] * (offset - 1)\r\n    pos := (newest[bucket_no] + offset) % element_cnt_per_wheel[bucket_no] //通过类似hash的方式，找到在时间轮上的插入位置\r\n    var node Node\r\n    node.SetData(Timer{name, left, handler, args})\r\n    rwmutex.RLock()\r\n    TimerMap[name] = timewheels[bucket_no][pos].InsertHead(node) //插入定时器\r\n    rwmutex.RUnlock()\r\n    //fmt.Println(\"pos \", bucket_no, pos, tmp)\r\n}\r\nfunc step() {\r\n    //var dolist list.List\r\n    {\r\n        rwmutex.RLock()\r\n        //遍历所有桶\r\n        var bucket_no uint8 = 0\r\n        for bucket_no = 0; bucket_no &lt; wheel_cnt; bucket_no++ {\r\n            newest[bucket_no] = (newest[bucket_no] + 1) % element_cnt_per_wheel[bucket_no] //当前指针递增1\r\n            //fmt.Println(newest)\r\n            var head *Node = timewheels[bucket_no][newest[bucket_no]] //返回当前指针指向的槽位置的表头\r\n            var firstElement *Node = head.Next()\r\n            for firstElement != nil { //链表不为空\r\n                if value, ok := firstElement.Data().(Timer); ok { //如果element里面确实存储了Timer类型的数值，那么ok返回true，否则返回false。\r\n                    inteval := value.Inteval\r\n                    doSomething := value.DoSomething\r\n                    args := value.Args\r\n                    if nil != doSomething { //有遇到函数为nil的情况，所以这里判断下非nil\r\n                        if 0 == bucket_no || 0 == inteval {\r\n                            //dolist.PushBack(value) //执行自定义处理函数\r\n                            go doSomething(args)\r\n                        } else {\r\n                            SetTimer(value.Name, inteval, doSomething, args) //重新插入计时器\r\n                        }\r\n                    }\r\n                    Delete(firstElement) //删除定时器\r\n                }\r\n                firstElement = head.Next() //重新定位到链表第一个元素头\r\n            }\r\n            if 0 != newest[bucket_no] { //指针不是0，还未转回到原点，跳出。如果回到原点，则说明转完了一圈，需要向高位进位1，则继续循环入高位步进一步。\r\n                break\r\n            }\r\n        }\r\n        rwmutex.RUnlock()\r\n    }\r\n}\r\nfunc Run() {\r\n    var i int = 0\r\n    for {\r\n        go step()\r\n        i++\r\n        log.Printf(\"第%ds\", i)\r\n        //间隔时间inteval=1s\r\n        time.Sleep(1 * time.Second)\r\n    }\r\n}\r\nfunc init() { //初始化\r\n    var bucket_no uint8 = 0\r\n    for bucket_no = 0; bucket_no &lt; wheel_cnt; bucket_no++ {\r\n        var i uint32 = 0\r\n        for ; i &lt; element_cnt_per_wheel[bucket_no]; i++ {\r\n            timewheels[bucket_no] = append(timewheels[bucket_no], new(Node))\r\n        }\r\n    }\r\n}</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1.1em; color: rgb(54, 46, 43); font-family: &#39;microsoft yahei&#39;; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">测试下效果</p><pre class=\"brush:cpp;toolbar:false\">package main\r\nimport (\r\n    \"log\"\r\n    \"runtime\"\r\n    \"timer_server/timer\"\r\n)\r\nfunc callback1(args interface{}) {\r\n    //只执行一次的事件\r\n    if values, ok := args.([]string); ok {\r\n        var str1 string = values[0]\r\n        var str2 string = values[1]\r\n        log.Println(\"callback1(\" + str1 + \",\" + str2 + \")\")\r\n    } else {\r\n        log.Println(\"callback1()\")\r\n    }\r\n}\r\nfunc callback2(args interface{}) {\r\n    //每次在当前时间点之后5s插入一个定时器，这样就能形成每隔5秒调用一次callback2回调函数，可以用于周期性事件\r\n    timer.SetTimer(\"callback2\", 5, callback2, args)\r\n    log.Println(\"callback2\")\r\n}\r\nfunc main() {\r\n    // cpu多核\r\n    runtime.GOMAXPROCS(runtime.NumCPU())\r\n    // 定时器1，传入两个参数\r\n    timer.SetTimer(\"callback1\", 3, callback1, []string{\"hello\", \"world\"})\r\n    // 定时器2，不传参数\r\n    timer.SetTimer(\"callback2\", 6, callback2, nil)\r\n    // 移除定时器\r\n    //timer.Delete(timer.TimerMap[\"callback2\"])\r\n    //运行计时器\r\n    timer.Run()\r\n}\r\n```\r\n完整的代码在，https://github.com/socho1/timer_server，这里只列出主要的部分。 \r\n将代码下载到您本地GOPATH路径下，进入timer_server目录下，执行 \r\ngo build\r\n用以编译生成timer_server，没问题的话，运行\r\n./timer_server\r\n看到结果\r\n2015/04/13 13:06:43 第1s\r\n2015/04/13 13:06:44 第2s\r\n2015/04/13 13:06:45 第3s\r\n2015/04/13 13:06:45 callback1(hello,world)\r\n2015/04/13 13:06:46 第4s\r\n2015/04/13 13:06:47 第5s\r\n2015/04/13 13:06:48 第6s\r\n2015/04/13 13:06:48 callback2\r\n2015/04/13 13:06:49 第7s\r\n2015/04/13 13:06:50 第8s\r\n2015/04/13 13:06:51 第9s\r\n2015/04/13 13:06:52 第10s\r\n2015/04/13 13:06:53 第11s\r\n2015/04/13 13:06:53 callback2\r\n……\r\n结果显示第3秒的时候，调用了callback1回调函数，并且只调用了一次，以后不再调用了。 \r\n在第6s的时候，调用callback2，并且以后每隔5秒都会调用该函数，成了周期。 \r\n然后我们将\r\n//timer.Delete(timer.TimerMap[\"callback2\"])\r\n这行的注释去掉，看看运行结果 \r\n2015/04/13 13:09:31 第1s \r\n2015/04/13 13:09:32 第2s \r\n2015/04/13 13:09:33 第3s \r\n2015/04/13 13:09:34 callback1(hello,world) \r\n2015/04/13 13:09:35 第4s \r\n2015/04/13 13:09:36 第5s \r\n2015/04/13 13:09:37 第6s \r\n2015/04/13 13:09:38 第7s \r\n2015/04/13 13:09:39 第8s \r\n2015/04/13 13:09:40 第9s \r\n2015/04/13 13:09:41 第10s \r\n2015/04/13 13:09:42 第11s \r\n…… \r\n可以看到，callback2不再被调用了，因为把这个定时器跟删除了，根据它的名称callback2找到其位置删除的。\r\n****\r\n>始于2015-04-10，北京；更新至2016-06-13，杭州。\r\n',',技术,',87,0,'2016-06-13 13:22:24','2016-08-06 20:50:17',0,NULL,0,NULL),(40,1,'二分查找、折半查找','二分查找也叫折半查找，原理不用写了，百度下，这里给出C语言版本','','',0,'二分查找也叫折半查找，原理不用写了，百度下，这里给出C语言版本\r\n```\r\n/*\r\n * @file search_binary.c\r\n * 详情请看 http://blog.csdn.net/socho/article/details/51684422\r\n */\r\n#include <stdio.h>\r\n#define N 10\r\n\r\nvoid printA(int A[], char n){\r\n    int i = 0;\r\n    for (i = 0; i < n; i++)\r\n    {\r\n        printf(\"%d \", A[i]);\r\n    }\r\n    printf(\"\\n\");\r\n}\r\n\r\nvoid printSearch(int A[], char n, int count, int low, int high){\r\n    int i = 0;\r\n    printf(\"第%d次折半,low %d,high %d :\", count, low, high);\r\n    for (i = 0; i < n; i++)\r\n    {\r\n        if (low == i)\r\n            printf(\"[\");\r\n        printf(\" %d \", A[i]);\r\n        if (high == i)\r\n            printf(\"]\");\r\n    }\r\n    printf(\"\\n\");\r\n}\r\n\r\nint search_binary(int A[], int n, int Key)\r\n{\r\n    //在有序表R[0..n-1]中进行二分查找，成功时返回结点的位置，失败时返回-1\r\n    int low = 0, high = n-1, mid = 0, count = 0;//置当前查找区间上、下界的初值\r\n        while(low <= high)\r\n        {\r\n            //printf(\"第%d次查找 low:%d mid:%d high:%d\\n\", ++count, low, mid, high);\r\n            if(Key == A[low])\r\n                return low;\r\n            if(Key == A[high])\r\n                return high;\r\n            //当前查找区间A[low..high]非空\r\n            mid = low + ((high-low)/2); //使用(low+high)/2会有整数溢出的问题\r\n            //（问题会出现在当low+high的结果大于表达式结果类型所能表示的最大值时，\r\n            //这样，产生溢出后再/2是不会产生正确结果的，而low+((high-low)/2)不存在这个问题\r\n            if(Key == A[mid])\r\n                return mid;//查找成功返回\r\n            if(A[mid] < Key)\r\n            {\r\n                low = mid + 1;//继续在A[mid+1..high]中查找\r\n            }\r\n            else\r\n            {\r\n                high = mid - 1;//继续在A[low..mid-1]中查找\r\n            }\r\n            printSearch(A, n, ++count, low, high);\r\n        }\r\n        if(low>high)\r\n            return -1;//当low>high时表示所查找区间内没有结果，查找失败\r\n}\r\nint main(){\r\n    int A[N] = { -10, 0, 1, 5, 7, 24, 31, 58, 59, 99};  //已排序好\r\n    int pos = 0;\r\n    printf(\"初始化:\");\r\n    printA(A, N);\r\n    printf(\"查找1所在位置\\n\");\r\n    pos = search_binary(A, N, 1);\r\n    printf(\"1所在位置是 %d:\\n\", pos);\r\n    printf(\"查找12所在位置\\n\");\r\n    pos = search_binary(A, N, 12);\r\n    printf(\"12所在位置是 %d:\\n\", pos);\r\n    return 0;\r\n}\r\n```\r\n运行结果\r\n初始化:-10 0 1 5 7 24 31 58 59 99\r\n查找1所在位置\r\n第1次折半,low 0,high 3 :[ -10 0 1 5 ] 7 24 31 58 59 99\r\n第2次折半,low 2,high 3 : -10 0 [ 1 5 ] 7 24 31 58 59 99\r\n1所在位置是 2:\r\n查找12所在位置\r\n第1次折半,low 5,high 9 : -10 0 1 5 7 [ 24 31 58 59 99 ]\r\n第2次折半,low 5,high 6 : -10 0 1 5 7 [ 24 31 ] 58 59 99\r\n第3次折半,low 5,high 4 : -10 0 1 5 7 ][ 24 31 58 59 99\r\n12所在位置是 -1:\r\n\r\n可以看到，第一次查找1的时候，折半了两次，一次是调整到A[0]=-10和A[3]=5区间，第二次调整到A[2]=1和A[3]=5区间，然后再对比一次就找到了1的位置是2.\r\n同理找12的时候，进行了3次折半，最后没找到，返回位置-1的报错。\r\n\r\nCSDN同步文章：http://blog.csdn.net/socho/article/details/51684422\r\n\r\n>始于2009-03-30，西理工；更新至2016-06-15，杭州。',',技术,',135,0,'2016-06-16 02:31:01','2017-06-14 10:14:43',0,'',0,NULL),(41,1,'修改FILE缓冲区大小，改进写日志性能','由于线上服务端程序，需要大量写入日志，将来入数据库库，以便做数据分析或者对账之用，可是发现日志打开后服务器变慢了，对外并发响应数量也减少了。','','',0,'由于线上服务端程序，需要大量写入日志，将来入数据库库，以便做数据分析或者对账之用，可是发现日志打开后服务器变慢了，对外并发响应数量也减少了。于是分析了下日志写入函数fprintf。其写日志文件的顺序是：程序写入用户地址空间内核从用户地址空间缓冲区复制到内核文件缓冲区内核文件缓冲区满的情况下再放入内核io队列，等待写入到硬盘上。写文件其实不是直接写到硬盘，那样的话一堆程序都同时并发往硬盘上写，硬盘能累吐血。所以文件其实是先写到内存，满员后再写到硬盘，当然这是内核完成的，我们用户程序只要使用系统调用就行了。这样可以减少写硬盘的次数，一次批量多写些内容进去。 \r\n\r\n一个程序使用系统调用的次数会很大程度上影响系统的性能,因为在执行系统时，会从用户代码切换执行内核代码，然后返回用户代码。优化手段就是尽量减少系统调用次数。 \r\n\r\n以上这种缓存的思想是很OK的，那么我们的问题在哪里呢？我们的问题其实就是一次性写入的日志很大，通常会超过系统默认的用户地址空间文件缓冲区大小4096字节，刚好就是一个页的大小，应该是为了方便拷贝到内核而设的单位，我们往往一行日志就写了5000多字节，有的甚至1M字节。所以每次写一行日志都会触发系统调用。而我们的服务器程序写日志很频繁，每秒都有几次写这种大型日志的操作，写小日志的操作就更多了。当然可以分不同的文件写到多个日志文件中，缓解单个文件缓冲区的压力，不过这好像么有治本。 \r\n\r\n在服务器设计上的思想，我是尽可能的用空间换时间，因为用户很挑剔啊，时间上人家可不愿意多等几秒。当然不要无限制的滥用空间，内存和硬盘也很宝贵的。 \r\n\r\n我们的办法就是在写日志文件的时候，使用setvbuf函数设置自己的缓冲区，尽量在内存够用的情况下，设置大些。我设置了104096个字节，这样fprintf函数内部使用系统调用的频率就少了，减少了不少次从用户态拷贝小数据到内核态转换的时间开销，转为积累大数据，一次性拷贝，只一次系统调用就搞定。接下来看示例\r\n\r\n1.调大缓冲区\r\n```\r\n/**\r\n  test1.c\r\n  gcc test1.c -o test1\r\n /\r\n#include\r\n#include\r\n#include\r\n#define BUF_SIZE 4096\r\n#define LOOP_CNT 1000000\r\nint main () \r\n{\r\n    int i = 0;\r\n    struct timeval start, end; // 计时用的结构\r\n    float timeuse; // 耗时，s为单位\r\n    char test_fmt[4108];\r\n    for(i = 0; i < 4108; i++){\r\n        test_fmt[i] = \'A\';\r\n    } // 总共4108字节。\r\n    printf(\"循环%d条，数据总量%ld：\\n\", LOOP_CNT, (long)LOOP_CNT 4108);\r\n    \r\n    FILE pFile;\r\n    struct stat sysbuf;\r\n    stat(\"1.txt\", &sysbuf);\r\n    printf(\"系统默认文件缓冲区大小 = %d byte,总共%d块\\n\", (int)sysbuf.st_blksize, (int)sysbuf.st_blocks);\r\n    pFile=fopen (\"1.txt\",\"w\");\r\n    gettimeofday(&start,NULL); // 开始计时\r\n    for (i = 0; i < LOOP_CNT; i++){\r\n        fprintf(pFile, test_fmt, i); // 每行128个A，总共4096个A，再加上末尾不到10个字节的i和换行。\r\n    }\r\n    fclose (pFile);\r\n    gettimeofday(&end,NULL); // 结束计时\r\n    // 计算耗时\r\n    timeuse = 1000000(end.tv_sec - start.tv_sec) + end.tv_usec - start.tv_usec; \r\n    timeuse /= 1000000; \r\n    printf(\"默认缓冲区写文件，用时:%f\\n\", timeuse);\r\n    \r\n    return 0;\r\n}\r\n/**\r\n  test2.c\r\n  gcc test2.c -o test2\r\n /\r\n#include\r\n#include\r\n#include\r\n#define BUF_SIZE 4096\r\n#define LOOP_CNT 1000000\r\nint main () \r\n{\r\n    int i = 0;\r\n    struct timeval start, end; // 计时用的结构\r\n    float timeuse; // 耗时，s为单位\r\n    char test_fmt[4108];\r\n    for(i = 0; i < 4108; i++){\r\n        test_fmt[i] = \'A\';\r\n    } // 总共4108字节。\r\n    printf(\"循环%d条，数据总量%ld：\\n\", LOOP_CNT, (long)LOOP_CNT 4108);\r\n    \r\n    FILE pFile1;\r\n    pFile1=fopen (\"2.txt\",\"w\"); \r\n    char buf[BUF_SIZE];\r\n    setvbuf ( pFile1 , buf, _IOFBF , BUF_SIZE );\r\n    printf(\"自定义缓冲区 = %d byte\\n\", BUF_SIZE);\r\n    gettimeofday(&start,NULL); // 开始计时\r\n    for (i = 0; i < LOOP_CNT; i++){\r\n        fprintf(pFile1, test_fmt, i);\r\n    }\r\n    fclose (pFile1);\r\n    gettimeofday(&end,NULL); // 结束计时\r\n    // 计算耗时\r\n    timeuse = 1000000*(end.tv_sec - start.tv_sec) + end.tv_usec - start.tv_usec; \r\n    timeuse /= 1000000; \r\n    printf(\"自定义缓冲区写文件，用时:%f\\n\", timeuse);\r\n    \r\n    return 0;\r\n}\r\n```\r\n在一个5400转硬盘的虚拟机上，分别编译运行，查看结果，其中st_blocks代表该文件使用了多少个块。 \r\n\r\n一开始测试我犯了个严重的错误，就是将两段代码编译好的程序一起运行，或者两次运行间隔时间不长。后来通过在windows的资源管理器中查看实时磁盘IO，发现写入1.txt的程序虽然已经退出了，但是磁盘还在写入，说明这会是内核在往磁盘中写入呢。而我此时启动另一个测试程序对2.txt做写入操作，会响测试1.txt效果，应该等1.txt完全写入完成，磁盘io不再进行时候再启动对2.txt的操作。\r\n\r\n循环10000条，数据总量41080000：\r\n系统默认文件缓冲区大小 = 4096 byte,总共802344块\r\n默认缓冲区写文件，用时:0.468300\r\n循环10000条，数据总量41080000：\r\n自定义缓冲区 = 40960 byte\r\n自定义缓冲区写文件，用时:0.155844\r\n \r\n循环100000条，数据总量410800000：\r\n系统默认文件缓冲区大小 = 4096 byte,总共8023438块\r\n默认缓冲区写文件，用时:4.686463\r\n循环100000条，数据总量410800000：\r\n自定义缓冲区 = 40960 byte\r\n自定义缓冲区写文件，用时:1.543402\r\n \r\n循环1000000条，数据总量4108000000：\r\n系统默认文件缓冲区大小 = 4096 byte,总共2642816块\r\n默认缓冲区写文件，用时:47.181843\r\n循环1000000条，数据总量4108000000：\r\n自定义缓冲区 = 40960 byte\r\n自定义缓冲区写文件，用时:28.394735\r\n\r\n在写入100000条之前，还有着2倍多的速率差异。 \r\n\r\n等到写入次数达到1000000条的时候，两者的时间差缩小到了1倍以内，此时的日志文件4.16G。再加大测试的话，内核的IO队列该不够用。 \r\n\r\n在windows下查看了下虚拟机的写入速率，依然自定义缓存方式要快一些，以下是速率峰值时候的截图 \r\n\r\n（1）用系统默认缓存 \r\n\r\n这里写图片描述\r\n![默认缓存](http://img.blog.csdn.net/20160707145428607)\r\n最高到74M/s \r\n\r\n（2）自定义缓存峰值 \r\n\r\n这里写图片描述\r\n![自定义缓存](http://img.blog.csdn.net/20160707145439888)\r\n最高到115M/s \r\n\r\n从每次测试的结果看，自定义缓冲区后，写入相同字节的内容，自定义缓冲区明显要比系统默认少一倍以上的时间。当然这是测试，实际项目可根据情况自行调节缓冲区大小。 \r\n\r\n不过这样做的坏处显而易见，断电就抓瞎了，大量的的缓存还没写到磁盘呢！\r\n\r\n2.调等缓冲区\r\n\r\n当然，我们还要测试下设置成和系统默认4096，也就是一个页大小的单位\r\n\r\n循环1000000条，数据总量4108000000：\r\n系统默认文件缓冲区大小 = 4096 byte,总共79633800块\r\n默认缓冲区写文件，用时:48.648003\r\n循环1000000条，数据总量4108000000：\r\n自定义缓冲区 = 4096 byte\r\n自定义缓冲区写文件，用时:49.252640\r\n\r\n用时几乎相当\r\n\r\n3.调小缓冲区\r\n\r\n再看看，缩小缓冲区的结果，设为1024字节\r\n\r\n循环1000000条，数据总量4108000000：\r\n系统默认文件缓冲区大小 = 4096 byte,总共8023438块\r\n默认缓冲区写文件，用时:49.945450\r\n循环1000000条，数据总量4108000000：\r\n自定义缓冲区 = 1024 byte\r\n自定义缓冲区写文件，用时:102.239960\r\n       这次看到缓冲区缩小后，明显用时更多了，竟然超过1倍多的时间。\r\n\r\n4.思考\r\n\r\nFILE结构里本身带有一个缓冲。而内核在操作IO的时候会还有一个缓冲区，内核将缓冲区写到磁盘也不是直接写，而是放到其IO队列中等待写入。加大文件缓冲区，也只是加大了用户态的缓冲区，而内核态缓冲区是没有变的，所以当用户态缓冲区超过4096一个页大小的时候，它从用户地址空间拷贝到内核地址空间时候，应该是切分了好几页，分别加入内核IO的队列中，准备写入到磁盘上。\r\n\r\n****\r\n\r\nCSDN同步文章http://blog.csdn.net/socho/article/details/51842943\r\n\r\n创建于2014-03-04深圳腾讯，更新于2016-07-06杭州。\r\n\r\n',',技术,',86,0,'2016-07-07 08:18:05','2017-05-15 01:43:09',0,'http://img.blog.csdn.net/20160707145428607',0,NULL),(42,1,'KeepAlived+MySQL互为主从','解决Master单点问题，两台mysql互为主备，双向replication。当一master挂了，则将slave切换为master，继续工作。','','',0,'解决Master单点问题，两台mysql互为主备，双向replication。当一master挂了，则将slave切换为master，继续工作。好，给定两台机器\r\n\r\n主机A：192.168.1.201\r\n\r\n主机B：192.168.1.202\r\n\r\n## 一、互为主从\r\n### 1.配置\r\n主机A上，vim /etc/my.cnf，添加：\r\n```\r\n[mysqld]\r\nlog-bin=mysql-bin\r\nserver-id=1 #服务id要和B不同\r\nbinlog_do_db=db1\r\nmaster-host = 192.168.1.202 #目标机器是B的地址\r\nmaster-user = user1\r\nmaster-password = pass1\r\nmaster-port = 3306\r\nmaster-connect-retry = 5\r\n```\r\n主机B上，vim /etc/my.cnf，添加：\r\n```\r\n[mysqld]\r\nlog-bin=mysql-bin\r\nserver-id=2 #服务id要和A不同\r\nbinlog_do_db=db1\r\nmaster-host = 192.168.1.201 #目标机器是A的地址\r\nmaster-user = user1\r\nmaster-password = pass1\r\nmaster-port = 3306\r\nmaster-connect-retry = 5\r\n```\r\n在A上开启binlog,创建复制帐号GRANT REPLICATION SLAVE,REPLICATION CLIENT ON . TO user1@\'%\' IDENTIFIED BY \'pass1\';\r\n\r\n在B上开启binlog,创建复制帐号GRANT REPLICATION SLAVE,REPLICATION CLIENT ON . TO user1@\'%\' IDENTIFIED BY \'pass1\';\r\n\r\n为了方便，我们将用户名和密码两台机器都设成一致的。\r\n\r\n##### 在A上\r\n我们先在A上创建数据库db1，里面的表内容随便写点啥就行了：\r\n```\r\nCREATE DATABASE db1;\r\nUSE db1;\r\nCREATE TABLE tb_2 (\r\n  id int(11) NOT NULL AUTO_INCREMENT,\r\n  name varchar(64) DEFAULT NULL,\r\n  PRIMARY KEY (id)\r\n) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;\r\nINSERT INTO tb_2 VALUES (\'1\', \'Michael\');\r\n```\r\n查看下信息\r\n```\r\nmysql> show variables like \'ser%\';\r\n+——————————————-+———————+\r\n| Variable_name | Value |\r\n+——————————————-+——————-+\r\n| server_id     | 1     |\r\n+——————————————-+——————-+\r\nmysql> show master status;\r\n+—————————+—————+———————+—————————+\r\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |\r\n+—————————+—————+———————+—————————+\r\n| mysql-bin.000001 |      447 | db1          |                  |\r\n+—————————+—————+———————+—————————+\r\n```\r\n可以看到A要同步的是db1数据库，当前bin-log编号是000001，位置是447。 \r\n\r\n查看A的数据\r\n```\r\nmysql> select from tb_2;\r\n+——+————-+\r\n| id | name    |\r\n+——+————-+\r\n|  1 | Michael |\r\n+——+————-+\r\n```\r\nA有一条数据。 \r\n\r\n##### 在B上\r\n```\r\nmysql> show variables like \'ser%\';\r\n+———————-+———-+\r\n| Variable_name | Value |\r\n+———————-+———-+\r\n| server_id     | 2     |\r\n+———————-+———-+\r\n\r\nmysql> show master status;\r\n+—————————+—————+———————+—————————+\r\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |\r\n+—————————+—————+———————+—————————+\r\n| mysql-bin.000001 |      106 | db1          |                  |\r\n+—————————+—————+———————+—————————+\r\n```\r\n查看B的数据\r\n```\r\nmysql> select from tb_2;Empty set (0.00 sec)12\r\n```\r\nB还没有数据，目前未同步。位置是000001:106，一会从A上同步过来。\r\n\r\n### 2.开始同步\r\n\r\n配置中已有replication的配置了，只要两个机器重启就行了，自动相互复制。 \r\n\r\n在A上\r\n```\r\nservice mysqld restart1\r\n```\r\n在B上\r\n```\r\nservice mysqld restart1\r\n```\r\n再在A上执行\r\n```\r\nmysql> show slave status\\G\r\n\r\n* 1. row *\r\n\r\n               Slave_IO_State: Waiting for master to send event\r\n\r\n                  Master_Host: 192.168.1.202\r\n\r\n                  Master_User: user1\r\n\r\n                  Master_Port: 3306\r\n\r\n                Connect_Retry: 5\r\n\r\n              Master_Log_File: mysql-bin.000008\r\n\r\n          Read_Master_Log_Pos: 106\r\n\r\n               Relay_Log_File: mysqld-relay-bin.000001\r\n\r\n                Relay_Log_Pos: 251\r\n\r\n        Relay_Master_Log_File: mysql-bin.000008\r\n\r\n             Slave_IO_Running: Yes\r\n\r\n            Slave_SQL_Running: Yes\r\n\r\n              Replicate_Do_DB: \r\n\r\n          Replicate_Ignore_DB: \r\n\r\n           Replicate_Do_Table: \r\n\r\n       Replicate_Ignore_Table: \r\n\r\n      Replicate_Wild_Do_Table: \r\n\r\n  Replicate_Wild_Ignore_Table: \r\n\r\n                   Last_Errno: 0\r\n\r\n                   Last_Error: \r\n\r\n                 Skip_Counter: 0\r\n\r\n          Exec_Master_Log_Pos: 106\r\n\r\n              Relay_Log_Space: 552\r\n\r\n              Until_Condition: None\r\n\r\n               Until_Log_File: \r\n\r\n                Until_Log_Pos: 0\r\n\r\n           Master_SSL_Allowed: No\r\n\r\n           Master_SSL_CA_File: \r\n\r\n           Master_SSL_CA_Path: \r\n\r\n              Master_SSL_Cert: \r\n\r\n            Master_SSL_Cipher: \r\n\r\n               Master_SSL_Key: \r\n\r\n        Seconds_Behind_Master: 0\r\n\r\nMaster_SSL_Verify_Server_Cert: No\r\n\r\n                Last_IO_Errno: 0\r\n\r\n                Last_IO_Error: \r\n\r\n               Last_SQL_Errno: 0\r\n\r\n               Last_SQL_Error:\r\n```\r\nA中的Slave_IO_Running 和 Slave_SQL_Running两个值都是YES，说明配置成功了。 \r\n\r\nB的配置就不贴了，也是配置成功的。 \r\n\r\n如果同步不成功： \r\n\r\n用命令行的方式手动复制，比如在B上输入命令\r\n```\r\nchange master tomaster_host=\'192.168.1.201\',master_port=3306,\r\n\r\nmaster_user=\'user1\',master_password=\'pass1\';12345\r\n```\r\n然后使用start slave;开启从A向B的复制。 \r\n\r\n还有指定从某个地址开始复制的话，加两个参数\r\n```\r\nmaster_log_file=\'mysql-bin.000001\',master_log_pos=106;12\r\n```\r\n反过来，要从B同步到A，就要在A上执行\r\n```\r\nchange master tomaster_host=\'192.168.1.202\',master_port=3306,\r\n\r\nmaster_user=\'user1\',master_password=\'pass1\';12345\r\n```\r\n同步好了之后，查看B的数据\r\n```\r\nmysql> select from tb_2;\r\n\r\n+——+————-+\r\n\r\n| id | name    |\r\n\r\n+——+————-+\r\n\r\n|  1 | Michael |\r\n\r\n+——+————-+\r\n```\r\n好的，现在A和B数据一致了。\r\n\r\n\r\n\r\n再看看A和B的状态 \r\n\r\nA机器\r\n```\r\nmysql> show master status;\r\n\r\n+—————————+—————+———————+—————————+\r\n\r\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |\r\n\r\n+—————————+—————+———————+—————————+\r\n\r\n| mysql-bin.000001 |      447 |    db1       |                  |\r\n\r\n+—————————+—————+———————+—————————+\r\n```\r\nB机器\r\n```\r\nmysql> show master status;\r\n\r\n+—————————+—————+———————+—————————+\r\n\r\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |\r\n\r\n+—————————+—————+———————+—————————+\r\n\r\n| mysql-bin.000001 |      106 |    db1       |                  |\r\n\r\n+—————————+—————+———————+—————————+\r\n\r\nB的bin-log位置没有变，还是000001:106，但是数据确实已经到了。\r\n```\r\n3.在A和B上操作\r\n\r\n\r\n\r\n1.先把A当作Master，在A上操作数据 \r\n\r\n从A上删除数据\r\n```\r\nmysql> delete from tb_2 where name=\'Michael\';\r\n\r\nQuery OK, 1 row affected (0.00 sec)12\r\n```\r\n此时A的bin-log位置是000001:546，而到B查看数据\r\n```\r\nmysql> select from tb_2;Empty set (0.00 sec)12\r\n```\r\n确实已经同步删除了，不过B的bin-log位置依然是000001:106 \r\n\r\n2.再把B当作Master，在B上操作数据\r\n```\r\nINSERT INTO tb_2(name) VALUES (\'Michael\');\r\n\r\nQuery OK, 1 row affected (0.00 sec)12\r\n```\r\n成功后，到A上去查\r\n```\r\nmysql> select from tb_2;\r\n+————+————————-+\r\n| id | name    |\r\n+————+————————-+\r\n|  2 | Michael |\r\n+————+————————-+\r\n```\r\nA也同步到了数据，至此说明A和B互为主从，在一个上面修改数据，就会同步到另外一个机器上是可行的。 \r\n\r\n查看下两机器状态 \r\n\r\n这次A的bin-log地址没有变化，还是000001:546，而变的是B，成了000001:239了，说明从机只有变成主机数据被修改的时候，才会改变自己的bin-log地址，同步是不会改变bin-log地址的。 \r\n\r\n接下来配置keepalived。\r\n\r\n## 二、KeepAlived\r\n上一步确保了互为主从设置成功后，接下来安装 \r\n```\r\nyum install keepalived \r\n```\r\n看下版本\r\n```\r\n[root@localhost ~]# keepalived -v\r\nKeepalived v1.2.13 (03/19,2015)\r\n```\r\n1.配置\r\n\r\n然后在A服务器编辑KeepAlived的配置文件 \r\n\r\nvim /etc/keepalived/keepalived.conf\r\n```\r\n! Configuration File for keepalived\r\n\r\nglobal_defs {\r\n\r\n    router_id HA_MySQL #标识，双主相同\r\n\r\n}\r\n\r\nvrrp_instance VI_1 {\r\n\r\n     state BACKUP #注意，主从两端都配置成了backup，因为使用了nopreempt，即非抢占模式\r\n\r\n     interface eth0\r\n\r\n     virtual_router_id 51 #分组，主备相同 \r\n\r\n     priority 100 #优先级，这个高一点则先把它作为master\r\n\r\n     advert_int 1\r\n\r\n     nopreempt #不主动抢占资源，设置非抢占模式\r\n\r\n     authentication {\r\n\r\n         auth_type PASS\r\n\r\n         auth_pass 1111\r\n\r\n     }\r\n\r\n     virtual_ipaddress {\r\n\r\n         192.168.1.199\r\n\r\n     }\r\n\r\n}\r\n\r\nvirtual_server 192.168.1.199 3306 {\r\n\r\n     delay_loop 2\r\n\r\n     lb_algo wrr #带有权重的轮询\r\n\r\n     lb_kind DR\r\n\r\n     persistence_timeout 60 #同一IP的连接60秒内被分配到同一台真实服务器 \r\n\r\n     protocol TCP\r\n\r\n     real_server 192.168.1.201 3306 {\r\n\r\n         weight 3 #权重为3\r\n\r\n         notify_down /data/keepalived_shutdown.sh #当mysq服down时，执行此脚本，杀死keepalived实现切换, 自杀脚本.\r\n\r\n         TCP_CHECK {\r\n\r\n             connect_timeout 10\r\n\r\n             nb_get_retry 3\r\n\r\n             delay_before_retry 3\r\n\r\n             connect_port 3306\r\n\r\n         }\r\n\r\n     }\r\n\r\n}\r\n```\r\n然后编辑B的配置文件\r\n\r\nvim /etc/keepalived/keepalived.conf\r\n```\r\n! Configuration File for keepalived\r\n\r\nglobal_defs {\r\n\r\n     router_id HA_MySQL\r\n\r\n}\r\n\r\nvrrp_instance VI_1 {\r\n\r\n     state BACKUP\r\n\r\n     interface eth0\r\n\r\n     virtual_router_id 51\r\n\r\n     priority 90 #优先级，这个低一点\r\n\r\n     advert_int 1\r\n\r\n     nopreempt\r\n\r\n     authentication {\r\n\r\n         auth_type PASS\r\n\r\n         auth_pass 1111\r\n\r\n     }\r\n\r\n     virtual_ipaddress { #虚拟IP (VIP)\r\n\r\n         192.168.1.199\r\n\r\n     }\r\n\r\n}\r\n\r\nvirtual_server 192.168.1.199 3306 {\r\n\r\n     delay_loop 2 #每2秒检查一次real_server存活\r\n\r\n     lb_algo wrr\r\n\r\n     lb_kind DR\r\n\r\n     persistence_timeout 60\r\n\r\n     protocol TCP\r\n\r\n     real_server 192.168.1.202 3306 {\r\n\r\n         weight 3\r\n\r\n         notify_down /data/keepalived_shutdown.sh\r\n\r\n         TCP_CHECK {\r\n\r\n             connect_timeout 10 #连接超时时间\r\n\r\n             nb_get_retry 3 #重连次数\r\n\r\n             delay_before_retry 3 #重连间隔时间\r\n\r\n             connect_port 3306 #健康检查端口，配置自己mysql服务端口\r\n\r\n         }\r\n\r\n     }\r\n\r\n}\r\n```\r\n有一点要注意的是，主从两端的state，都配置成了backup，因为使用了nopreempt，即非抢占模式。 \r\n\r\n举个例子，当主端先启动mysql实例和keepalived后，如果此时从端也启动了mysql实例和keepalived，那么vip不会跳到从端上去，即使它的优先级为100，要大于主端的90 \r\n\r\n而如果不设置nopreempt，那么这个时候，又分2种情况： \r\n\r\n1.state相同，即都是master或都是backup \r\n\r\n优先级高的，会占有vip，和角色无关 \r\n\r\n2.state不同，即master->backup或backup->master \r\n\r\n优先级高的，会占有vip，和角色无关 \r\n\r\n前提不同，结果都是一样的，即优先级是主导，谁的优先级高，vip就漂到谁那里\r\n\r\n可以看到A和B配置的共同点，就是virtual_ipaddress都是，这样当我们使用mysql的时候，就连接到这个虚拟ip上，由它进行转发到实体机。priority值高的先被访问，作为Master。这样实体机mysql的down机重启和转换主从角色则由keepalived来完成，对应用层透明，让应用无法感知。两台机器要通局域网，虚拟IP会被设置在他们共有的局域网内，不通的话两台机器各设置各的虚拟IP。\r\n\r\n杀死keepalived的脚本\r\n\r\nvim /data/keepalived_shutdown.sh\r\n```\r\n#!/bin/bash\r\n#kill掉keepalived进程，以防止脑裂问题。\r\npkill keepalived123\r\n```\r\n\r\n\r\n2测试\r\n\r\n![](http://img.blog.csdn.net/20160701232040313)\r\n\r\n先给个图说下目前的状况，应用程序连接VIP，VIP连接到A机器，从A向B执行Replication同步。 \r\n\r\n这里写图片描述 \r\n\r\n1.连接虚拟ip \r\n\r\n先查看下虚拟ip有没有，在设置的priority值高，也就是主机的那台机器上，这里是A机器，调用如下命令\r\n```\r\n[root@localhost data]# ip addr\r\n\r\n1: lo:  mtu 16436 qdisc noqueue state UNKNOWN \r\n\r\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r\n\r\n    inet 127.0.0.1/8 scope host lo\r\n\r\n    inet6 ::1/128 scope host \r\n\r\n       valid_lft forever preferred_lft forever\r\n\r\n2: eth0:  mtu 1500 qdisc pfifo_fast state UP qlen 1000\r\n\r\n    link/ether 08:00:27:eb:92:52 brd ff:ff:ff:ff:ff:ff\r\n\r\n    inet 192.168.1.201/24 brd 192.168.1.255 scope global eth0\r\n\r\n    inet 192.168.1.199/32 scope global eth0\r\n\r\n    inet6 fe80::a00:27ff:feeb:9252/64 scope link \r\n\r\n       valid_lft forever preferred_lft forever\r\n```\r\n可以看到已经有虚拟ip了，被绑定到了eth0上了。同时在B上面执行，则发现没有虚拟ip，说明现在A机器被选择了承担虚拟ip。接下来ping下它 \r\n```\r\n[root@localhost data]# ping 192.168.1.199 \r\n\r\nPING 192.168.1.199 (192.168.1.199) 56(84) bytes of data. \r\n\r\n64 bytes from 192.168.1.199: icmp_seq=1 ttl=64 time=0.104 ms\r\n```\r\n可以ping通哦，可以连接了！\r\n\r\n用客户端连接共同的入口，虚拟ip \r\n```\r\nmyslq -uroot -h192.168.1.119 -p \r\n```\r\nOK，连接上了，查下当前后端接入的是哪个实体机\r\n```\r\nmysql> show variables like \'server_id\';\r\n\r\n+———————-+———-+\r\n\r\n| Variable_name | Value |\r\n\r\n+———————-+———-+\r\n\r\n| server_id     | 1     |\r\n\r\n+———————-+———-+\r\n```\r\nserver_id=1是A机器。此时两台机器上的数据都是\r\n```\r\nmysql> select from tb_2;\r\n\r\n+——+————-+\r\n\r\n| id | name    |\r\n\r\n+——+————-+\r\n\r\n|  2 | Michael |\r\n\r\n+——+————-+\r\n```\r\n2.修改数据 \r\n\r\n好，我们修改下数据看看\r\n```\r\nupdate tb_2 set name=\'andy\' where name=\'Michael\';\r\n\r\nQuery OK, 1 row affected (0.00 sec)\r\n\r\nRows matched: 1  Changed: 1  Warnings: 0\r\n```\r\n然后查看\r\n```\r\nmysql> select from tb_2;\r\n\r\n+——+———+\r\n\r\n| id | name |\r\n\r\n+——+———+\r\n\r\n|  2 | andy |\r\n\r\n+——+———+\r\n```\r\n单独开个客户端去查看A和B的机器，得到同样的效果，数据得到了同步\r\n```\r\nmysql> select from tb_2;\r\n\r\n+——+———+\r\n\r\n| id | name |\r\n\r\n+——+———+\r\n\r\n|  2 | andy |\r\n\r\n+——+———+\r\n```\r\n3.制造down机 \r\n\r\n把mysql进程直接杀掉，类似于机器down的情况。 \r\n```\r\nps -ef|grep mysql\r\n```\r\n分析结果，得到两个mysql的进程id，都给它杀掉 \r\n```\r\nkill -9 7282\r\nkill -9 7408\r\n```\r\n或者直接执行killall mysqld\r\n\r\n然后再次查看server_id,短暂的失去连接，即使毫秒就恢复了\r\n```\r\nmysql> show variables like \'server_id\';\r\n\r\nNo connection. Trying to reconnect…\r\n\r\nConnection id:    751\r\n\r\nCurrent database: NONE\r\n\r\n+———————-+———-+\r\n\r\n| Variable_name | Value |\r\n\r\n+———————-+———-+\r\n\r\n| server_id     | 2     |\r\n```\r\n看样子是虚拟ip迁移了，在B上ip addr下\r\n```\r\n1: lo:  mtu 16436 qdisc noqueue state UNKNOWN\r\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r\n    inet 127.0.0.1/8 scope host lo\r\n    inet6 ::1/128 scope host\r\n       valid_lft forever preferred_lft forever\r\n2: eth0:  mtu 1500 qdisc mq state UP qlen 1000\r\n    link/ether dc:85:de:9f:f3:27 brd ff:ff:ff:ff:ff:ff\r\n    inet 192.168.1.202/24 brd 192.168.1.255 scope global wlan0\r\n    inet 192.168.1.199/32 scope global wlan0\r\n    inet6 fe80::de85:deff:fe9f:f327/64 scope link\r\n       valid_lft forever preferred_lft forever\r\n```\r\nserver_id=2，并且B机器加载上了虚拟ip，同时我们在A机器上使用ip addr看到虚拟ip已经不存在了，A机器的keepalived进程也死了。充分证明了现在虚拟ip迁移到了B机器上。当然要让A机器复活，自己另外写脚本重启吧。现在的情况变成了应用程序连接VIP，VIP连接到B机器，从B向A执行Replication同步。 \r\n\r\n这里写图片描述\r\n\r\n3.复活机器\r\n\r\n重启A机器上的mysql和keepalived\r\n```\r\nservice mysqld start\r\nservice keepalived start\r\n```\r\n再次查看server_id，发现还是2，说明虚拟ip没有迁移回到A机器，这样就避免了脑裂问题\r\n```\r\nmysql> show variables like \'server_id\';\r\n+———————-+———-+\r\n| Variable_name | Value |\r\n+———————-+———-+\r\n| server_id     | 2     |\r\n+———————-+———-+\r\n```\r\n****\r\nCSDN同步文章http://blog.csdn.net/socho/article/details/51804720\r\n\r\n创建于2012-12-23深圳腾讯，更新于2016-07-01杭州',',技术,',118,0,'2016-07-08 08:35:08','2017-05-16 00:09:05',0,'http://img.blog.csdn.net/20160701232040313',0,NULL),(43,1,'环形队列','环形队列，也可以叫环形缓冲区。我们用数组来举例，通常对于一个放到数组中的队列，生产者将数据写入队尾，消费者从队头取走，两个指针朝着同一个方向运动，消费者追生产者。而“环”在这里的体现，就是不管生产者还是消费者，当指针跑到队尾的时候，掉头到该数组头去，形成一个没有终点的环。','','',0,'环形队列，也可以叫环形缓冲区。我们用数组来举例，通常对于一个放到数组中的队列，生产者将数据写入队尾，消费者从队头取走，两个指针朝着同一个方向运动，消费者追生产者。而“环”在这里的体现，就是不管生产者还是消费者，当指针跑到队尾的时候，掉头到该数组头去，形成一个没有终点的环。\r\n\r\n这要做的好处是，当生产者和消费者都是单线程，也就是只有一个生产者和一个消费者的时候，不用加锁。如果生产者或者消费者都是多个，就要加锁了，那还不如用普通队列吧。\r\n- 队空：生产者和消费者的指针在同一位置。\r\n- 队满：生产者的指针比消费者的指针小一个单位的时候，下一步就将指向消费者。\r\n![环形缓冲区](http://img.blog.csdn.net/20160708121549365)\r\n以下是我的示例，采用数组的线性队列，当然你也可以使用链表，这里只说明原理，就不展出了。两个线程分别模拟生产者和消费者\r\n\r\n```c\r\n// gcc test.c -lpthread\r\n#include <stdio.h>\r\n#include <pthread.h>\r\n#include <string.h>\r\n\r\n#define MAX 10\r\n#define LENGTH 32\r\n\r\nstruct circular_queue{\r\n    char status; /**< 0 队列可写 1队列满*/\r\n    int write; /**< 写指针，只能生产者修改 */\r\n    int read; /**< 读指针，只能消费者修改 */\r\n    char queue[MAX][LENGTH];  /**< 环形队列，每个元素32字节最大长度 */\r\n};\r\n\r\nvoid print_queue(struct circular_queue *cq){\r\n    int i = 0;\r\n    printf(\"print all:write=%d,read=%d:\", cq->write, cq->read);\r\n    for(i = cq->read; i != cq->write; ){\r\n        printf(\"queue[%d]=%s \", i, cq->queue[i]);\r\n        i = ++i % MAX;\r\n    }\r\n    printf(\"\\n\");\r\n}\r\n\r\nvoid init_circular_queue(struct circular_queue *cq){\r\n    memset(cq, 0, sizeof(struct circular_queue));\r\n}\r\n\r\nint put(struct circular_queue *cq, char* str, size_t strlen){\r\n    if(cq->status == 1){ // 队列满，无法插入\r\n        //perror(\"full\");\r\n        print_queue(cq);\r\n        return -1;\r\n    } else {\r\n        memcpy(&cq->queue[cq->write], str, strlen);\r\n        cq->queue[cq->write][strlen] = \'\\0\'; // 不要忘了终结符\r\n        printf(\"put queue[%d]=%s\\n\", cq->write, cq->queue[cq->write]);\r\n        cq->write = (cq->write + 1) % MAX;\r\n        if((cq->read - 1) == cq->write)\r\n            cq->status = 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nchar* get(struct circular_queue *cq){\r\n    //printf(\"test_get:write=%d,read=%d:\", cq->write, cq->read);\r\n    if(cq->read == cq->write){ // 队列空\r\n        return NULL;\r\n    } else {\r\n        int tmp = cq->read;\r\n        cq->read = (cq->read + 1) % MAX;\r\n        cq->status = 0;\r\n        return cq->queue[tmp];\r\n    }\r\n}\r\n\r\nvoid* producer(void *para){\r\n    struct circular_queue *cq = (struct circular_queue*)para;\r\n    while(1){\r\n        put(cq, \"abc\", 3);\r\n        sleep(1);\r\n        put(cq, \"1\", 1);\r\n        sleep(1);\r\n        put(cq, \"123456\", 6);\r\n        sleep(1);\r\n        put(cq, \"hello world!\", 12);\r\n        \r\n    }\r\n    \r\n}\r\nvoid* consumer(void *para){\r\n    struct circular_queue *cq = (struct circular_queue*)para;\r\n    while(1){\r\n        printf(\"get %s\\n\", get(cq));\r\n        sleep(2);\r\n    }\r\n}\r\n\r\nint main(){\r\n    pthread_t t1, t2;\r\n    struct circular_queue cq;\r\n    init_circular_queue(&cq);\r\n    // 启动生产者线程\r\n    if(pthread_create(&t1, NULL, producer, &cq)){\r\n        perror(\"producer\");\r\n    }\r\n    // 启动消费者线程\r\n    if(pthread_create(&t2, NULL, consumer, &cq)){\r\n        perror(\"consumer\");\r\n    }\r\n    while(1){}\r\n    return 0;\r\n}\r\n```\r\n运行结果\r\n```shell\r\nget (null)\r\nput queue[0]=abc\r\nput queue[1]=1\r\nget abc\r\nput queue[2]=123456\r\nput queue[3]=hello world!\r\nput queue[4]=abc\r\nget 1\r\nput queue[5]=1\r\nput queue[6]=123456\r\nget 123456\r\nput queue[7]=hello world!\r\nput queue[8]=abc\r\nput queue[9]=1\r\nget hello world!\r\nput queue[0]=123456\r\nput queue[1]=hello world!\r\nput queue[2]=abc\r\nget abc\r\nput queue[3]=1\r\nqueue full: Success\r\nprint all:write=4,read=5:queue[5]=1 queue[6]=123456 queue[7]=hello world! queue[8]=abc queue[9]=1 queue[0]=123456 queue[1]=hello world! queue[2]=abc queue[3]=1 \r\nget 1\r\nput queue[4]=hello world!\r\nqueue full: Success\r\nprint all:write=5,read=6:queue[6]=123456 queue[7]=hello world! queue[8]=abc queue[9]=1 queue[0]=123456 queue[1]=hello world! queue[2]=abc queue[3]=1 queue[4]=hello world! \r\nqueue full: Success\r\nprint all:write=5,read=6:queue[6]=123456 queue[7]=hello world! queue[8]=abc queue[9]=1 queue[0]=123456 queue[1]=hello world! queue[2]=abc queue[3]=1 queue[4]=hello world! \r\nget 123456\r\nput queue[5]=123456\r\nqueue full: Success\r\nprint all:write=6,read=7:queue[7]=hello world! queue[8]=abc queue[9]=1 queue[0]=123456 queue[1]=hello world! queue[2]=abc queue[3]=1 queue[4]=hello world! queue[5]=123456 \r\nqueue full: Success\r\nprint all:write=6,read=7:queue[7]=hello world! queue[8]=abc queue[9]=1 queue[0]=123456 queue[1]=hello world! queue[2]=abc queue[3]=1 queue[4]=hello world! queue[5]=123456 \r\nget hello world!\r\nput queue[6]=1\r\nqueue full: Success\r\nprint all:write=7,read=8:queue[8]=abc queue[9]=1 queue[0]=123456 queue[1]=hello world! queue[2]=abc queue[3]=1 queue[4]=hello world! queue[5]=123456 queue[6]=1 \r\nget abc\r\nput queue[7]=hello world!\r\nqueue full: Success\r\nprint all:write=8,read=9:queue[9]=1 queue[0]=123456 queue[1]=hello world! queue[2]=abc queue[3]=1 queue[4]=hello world! queue[5]=123456 queue[6]=1 queue[7]=hello world! \r\nqueue full: Success\r\nprint all:write=8,read=9:queue[9]=1 queue[0]=123456 queue[1]=hello world! queue[2]=abc queue[3]=1 queue[4]=hello world! queue[5]=123456 queue[6]=1 queue[7]=hello world! \r\nget 1\r\nput queue[8]=123456\r\nput queue[9]=hello world!\r\nput queue[0]=abc\r\nget abc\r\nput queue[1]=1\r\nput queue[2]=123456\r\nget 1\r\nput queue[3]=hello world!\r\nput queue[4]=abc\r\n```\r\n可以看到队列从queue[0]到queue[9]一直在被循环使用，达到了环的目的，而且，不冲突，不用加锁！\r\n\r\n****\r\n>创建于2011-09-30 深圳腾讯，更新于 2016-07-08 杭州\r\n>CSDN同步文章：http://blog.csdn.net/socho/article/details/51859879',',技术,',105,0,'2016-07-08 23:15:10','2017-06-14 10:49:58',0,'http://img.blog.csdn.net/20160708121549365',0,NULL),(44,1,'基于mysql的分布式数据库中间件-Mycat',NULL,'','',0,'####一、Mycat\r\n根据官网的定义：Mycat是一个可以用于MySQL读写分离和高可用的中间件，一个模拟为MySQL Server的超级数据库，一个能平滑扩展支持1000亿大表的分布式数据库系统，一个可管控多种关系数据库的数据库路由器，一个平滑从关系数据升级到大数据的应用中间件。其前身是阿里的Cobar项目。\r\n\r\n介绍就不多说了，可以看官网http://www.mycat.org.cn/ ，接下来我们实践吧。\r\n####二、mysql配置\r\nmysql节点A机器\r\n操作系统 : centos6.5 x64\r\n数据库 : mysql-5.1.73\r\nmycat版本 ：1.5.1 release\r\n数据库名 : db1\r\nhostname: localhost.localdomain\r\nip:192.168.1.201\r\n\r\nmysql节点B机器\r\n操作系统 : centos6.5 x64\r\n数据库 : mysql-5.1.73\r\nmycat版本 ：1.5.1 release\r\n数据库名 : db2\r\nhostname: 202.localdomain\r\nip:192.168.1.202\r\n\r\n开始前，要先建立实体库，逻辑库要在实体库上做分表。分别在两台机器上执行创建对应的库\r\nA上：CREATE database db1;\r\nB上：CREATE database db2;\r\n另外注意linux下数据库的名称是大小写敏感的，设置my.cnf内追加一行，使得都转为小写，这样在分库的时候就统一起来了\r\nvim /etc/my.cnf\r\nlower_case_table_names = 1\r\n\r\n三、安装mycat\r\n1.安装\r\n我们将mycat安装在A机器上\r\n由于官方的地址下载后无法解压，可能是他们编译出错了吧，所以我另外找了一个http://download.csdn.net/detail/socho/9571201，下载1.5.1版本，得到Mycat-server-1.5.1-RELEASE-20160509173344-linux.tar.gz\r\n然后一系列操作，你们都懂\r\ntar -xzvf Mycat-server-1.5.1-RELEASE-20160509173344-linux.tar.gz\r\nmkdri /home/mycat/app\r\nmv mycat /usr/local/\r\n设置环境变量\r\nvim /etc/profile\r\nexport MYCAT_HOME=/usr/local/mycat\r\nPATH=$PATH:$MYCAT_HOME/bin\r\n令修改生效\r\n[mycat@c1 ~]$ source /etc/profile\r\n测试是否配置成功\r\n[mycat@c1 ~]$ echo $MYCAT_HOME\r\n/usr/local/mycat</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">配置逻辑库(schema)和逻辑表（table）,打开conf/schema.xml 每个属性的含义请参考权威指南,这里给出基本的</span></p><p><span style=\"font-size: 13px; font-family: &quot;Source Code Pro&quot;, serif; color: red; background: yellow;\">&lt;?</span><span style=\"font-size: 13px; font-family: &quot;Source Code Pro&quot;, serif; color: blue;\">xml</span><span style=\"background-color: white;\"> </span><span style=\"font-size: 13px; font-family: &quot;Source Code Pro&quot;, serif; color: red;\">version</span><span style=\"font-size: 13px; font-family: &quot;Source Code Pro&quot;, serif;\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;1.0&quot;</span></strong><span style=\"font-size: 13px; font-family: &quot;Source Code Pro&quot;, serif; color: red; background: yellow;\">?&gt;</span></p><p style=\"text-indent: 0;background: white\"><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif;background: rgb(166, 202, 240)\">&lt;!</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">DOCTYPE mycat:schema SYSTEM &quot;schema.dtd&quot;<span style=\"background:#A6CAF0\">&gt;</span></span></p><p style=\"text-indent: 0;background: white\"><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;mycat:schema</span> <span style=\"font-size: 13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">xmlns:mycat</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;<span style=\"text-decoration:underline;\">http://org.opencloudb/</span>&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;schema</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;TESTDB&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">checkSQLschema</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;false&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">sqlMaxLimit</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;100&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\">&lt;!-- </span><span style=\"font-size:13px;font-family:宋体;color:green\">需要分片的表，在节点</span><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\">dn1,dn2</span><span style=\"font-size:13px;font-family: 宋体;color:green\">上分片，分片规则是</span><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\">auto-sharding-long --&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;table</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;travelrecord&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dataNode</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;dn1,dn2&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">rule</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;auto-sharding-long&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">/&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;table</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;company&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">primaryKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;ID&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dataNode</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;dn2,dn1&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">rule</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;mod-long&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">/&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;table</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;goods&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">primaryKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;ID&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">type</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;global&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dataNode</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;dn1,dn2&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">/&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;table</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;hotnews&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">primaryKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;ID&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dataNode</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;dn1,dn2&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">rule</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;mod-long&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">/&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;table</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;employee&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">primaryKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;ID&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dataNode</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;dn1,dn2&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">rule</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;sharding-by-intfile&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">/&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;table</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;customer&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">primaryKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;ID&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dataNode</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;dn1,dn2&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">rule</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;sharding-by-intfile&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;childTable</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;orders&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">primaryKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;ID&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">joinKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;customer_id&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">parentKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;id&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;childTable</span> <span style=\"font-size: 13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size: 13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;order_items&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">joinKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;order_id&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">parentKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;id&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">/&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/childTable&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;childTable</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;customer_addr&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">primaryKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;ID&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">joinKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;customer_id&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">parentKey</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;id&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">/&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/table&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/schema&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;dataNode</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;dn1&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dataHost</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;201.liberalman.cn&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">database</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;db1&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">/&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;dataNode</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;dn2&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dataHost</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;202.liberalman.cn&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">database</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;db2&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">/&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;dataHost</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;201.liberalman.cn&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">maxCon</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;1000&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">minCon</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;10&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">balance</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;0&quot;</span></strong></p><p style=\"text-indent: 0;background: white\"><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">writeType</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;0&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dbType</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;mysql&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dbDriver</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;native&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">switchType</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;1&quot;</span></strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp; </span><span style=\"font-size: 13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">slaveThreshold</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;100&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\">&lt;!-- </span><span style=\"font-size:13px;font-family:宋体;color:green\">心跳包</span><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\"> --&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;heartbeat&gt;</span><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">select user()</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/heartbeat&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\">&lt;!-- </span><span style=\"font-size:13px;font-family:宋体;color:green\">后端</span><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\">mysql</span><span style=\"font-size:13px;font-family: 宋体;color:green\">配置</span><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\"> --&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;writeHost</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">host</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;hostM1&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">url</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;localhost:3306&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">user</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;socho&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">password</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;Looks137&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;&lt;/writeHost&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/dataHost&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;dataHost</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;202.liberalman.cn&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">maxCon</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;1000&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">minCon</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;10&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">balance</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;0&quot;</span></strong></p><p style=\"text-indent: 0;background: white\"><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">writeType</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;0&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dbType</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;mysql&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">dbDriver</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;native&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">switchType</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;1&quot;</span></strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp; </span><span style=\"font-size: 13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">slaveThreshold</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;100&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\">&lt;!-- </span><span style=\"font-size:13px;font-family:宋体;color:green\">心跳包</span><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:green\"> --&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;heartbeat&gt;</span><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">select user()</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/heartbeat&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;writeHost</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">host</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;hostM1&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">url</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;localhost:3306&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">user</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;socho&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">password</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;Looks137&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;&lt;/writeHost&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/dataHost&gt;</span></p><p style=\"text-indent: 0;background: white\"><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/mycat:schema&gt;</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">上面配置的是连接后端mysql的配置，然后我们还要配置访问MyCAT的用户账号和授权信息，打开conf/server.xml</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\"></span></p><p style=\"text-indent: 0;background: white\"><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red;background:yellow\">&lt;?</span><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">xml</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">version</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;1.0&quot;</span></strong> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">encoding</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;UTF-8&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red;background:yellow\">?&gt;</span></p><p style=\"text-indent: 0;background: white\"><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif;background: rgb(166, 202, 240)\">&lt;!</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">DOCTYPE mycat:server SYSTEM &quot;server.dtd&quot;<span style=\"background:#A6CAF0\">&gt;</span></span></p><p style=\"text-indent: 0;background: white\"><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;mycat:server</span> <span style=\"font-size: 13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">xmlns:mycat</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;<span style=\"text-decoration:underline;\">http://org.opencloudb/</span>&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;system&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;property</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;defaultSqlParser&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">druidparser</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/property&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/system&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;user</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;test&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;property</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;password&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">test</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/property&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;property</span> <span style=\"font-size: 13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size: 13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;schemas&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">TESTDB</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/property&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/user&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;user</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;user&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;property</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;password&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">user</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/property&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;property</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;schemas&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">TESTDB</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/property&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;property</span> <span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:red\">name</span><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">=</span><strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:#8000FF\">&quot;readOnly&quot;</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&gt;</span><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">true</span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/property&gt;</span></p><p style=\"text-indent: 0;background: white\"><strong><span style=\"font-size: 13px;font-family: &#39;Source Code Pro&#39;, serif\">&nbsp;&nbsp;&nbsp; </span></strong><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/user&gt;</span></p><p style=\"text-indent: 0;background: white\"><span style=\"font-size:13px;font-family:&#39;Source Code Pro&#39;,&#39;serif&#39;;color:blue\">&lt;/mycat:server&gt;</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">启动</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">[mycat@c1 ~]$ mycat start</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">Starting Mycat-server...</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">如果启动遇到问题，请查阅日志logs目录下的文件。</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">默认数据端口为8066，管理端口为9066。好，我们用一个客户端连接下</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">mysql -h192.168.1.201 -P8066 -utest -DTESTDB -ptest</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">2.测试</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">连上后就可以当初一个mysql数据库来操作了，后端逻辑对用户透明，建表：&nbsp;</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">mysql&gt; create table employee (id int not null primary key,name varchar(100),sharding_id int not null);</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">Query OK, 0 rows affected (0.05 sec)&nbsp;</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">成功后，插入数据：</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">mysql&gt; insert into employee(id,name,sharding_id) values(1,&#39;leader us&#39;,10000); insert into employee(id,name,sharding_id) values(2, &#39;me&#39;,10010); insert into employee(id,name,sharding_id) values(3, &#39;mycat&#39;,10000); insert into employee(id,name,sharding_id) values(4, &#39;mydog&#39;,10010);</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">Query OK, 1 row affected (0.04 sec)</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">Query OK, 1 row affected (0.01 sec)</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">Query OK, 1 row affected (0.00 sec)</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">Query OK, 1 row affected (0.00 sec)</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">查看下结果</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">mysql&gt; select * from employee;</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">+----+-----------+-------------+</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| id | name &nbsp; &nbsp; &nbsp;| sharding_id |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">+----+-----------+-------------+</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| &nbsp;1 | leader us | &nbsp; &nbsp; &nbsp; 10000 |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| &nbsp;3 | mycat &nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 10000 |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| &nbsp;2 | me &nbsp; &nbsp; &nbsp; &nbsp;| &nbsp; &nbsp; &nbsp; 10010 |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| &nbsp;4 | mydog &nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 10010 |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">+----+-----------+-------------+</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">4 rows in set (0.01 sec)</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">这时候分别到数据DB1,DB2查看，DB1数据</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">mysql&gt; use db1;</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">mysql&gt; select * from employee;</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">+----+-----------+-------------+</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| id | name &nbsp; &nbsp; &nbsp;| sharding_id |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">+----+-----------+-------------+</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| &nbsp;1 | leader us | &nbsp; &nbsp; &nbsp; 10000 |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| &nbsp;3 | mycat &nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 10000 |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">+----+-----------+-------------+</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">2 rows in set (0.00 sec)</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">DB2数据</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">mysql&gt; use db2;</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">mysql&gt; select * from employee;&nbsp;</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">+----+-------+-------------+</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| id | name &nbsp;| sharding_id |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">+----+-------+-------------+</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| &nbsp;2 | me &nbsp; &nbsp;| &nbsp; &nbsp; &nbsp; 10010 |</span></p><p><span style=\"font-family: 隶书, SimLi; font-size: 18px;\">| &nbsp;4 | mydog | &nbsp; &nbsp; &nbsp; 10010 |\r\n+----+-------+-------------+\r\n2 rows in set (0.00 sec)\r\n我们终于看大，明分片成功了，哈哈，两个数据库各一半数据。\r\n从schema.xml配置中看到，employee表是根据规则sharding-by-intfile（分片字段为sharding_id）进行分片，所以A中都是sharding_id=10000的数据，B中是sharding_id=10010。\r\n运行explain指令，可以看到SQL在哪些分片节点执行的情况：\r\n\r\nmysql&gt; explain create table employee (id int not null primary key,name varchar(100),sharding_id int not null);\r\n+-----------+------------------------------------------------------------------------------------------------+\r\n| DATA_NODE | SQL &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|\r\n+-----------+------------------------------------------------------------------------------------------------+\r\n| dn1 &nbsp; &nbsp; &nbsp; | create table employee (id int not null primary key,name varchar(100),sharding_id int not null) |\r\n| dn2 &nbsp; &nbsp; &nbsp; | create table employee (id int not null primary key,name varchar(100),sharding_id int not null) |\r\n\r\n+-----------+------------------------------------------------------------------------------------------------+\r\n2 rows in set (0.00 sec)\r\nexplain不会真的执行的，放心试试吧！\r\nhttp://blog.csdn.net/socho/article/details/51869199\r\n创建于 2016-05-25 北京，更新于 2016-07-09 杭州</span></p><p><br/></p>',',技术,',492,0,'2016-07-09 23:13:05','2016-08-10 19:33:30',0,NULL,0,NULL),(54,1,'docker容器扫盲',NULL,'','',0,'# Centos 6.5 安装和使用docker\r\n\r\n基于本人一贯的习惯，关于“某某某是什么”这样的问题，请百度吧，会有更专业的人士，会比我说的更详细更深，这里我只给出本人亲历的安装和使用过程。\r\n\r\n#### 1.安装\r\n\r\n先检查服务器环境，docker要求操作系统CentOS6以上，kernel 版本必须2.6.32-431或更高，即>=CentOS 6.5，运行docker时实际提示3.8.0及以上，必须64bit，32bit不支持docker。\r\n```\r\n[root@201 ~]# uname -r\r\n2.6.32-642.1.1.el6.x86_64\r\n```\r\ndocker的存储驱动是Device Mapper，看下你的驱动是否符合\r\n```\r\n[root@201 ~]# grep device-mapper /proc/devices\r\n253 device-mapper\r\n```\r\n看来我们符合以上要求，然后开始安装。\r\n\r\n对于centos 6.5 需要先安装源\r\n```\r\n[root@201 ~]# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\r\n```\r\n注意centos 6要安装的是docker-io来源于Fedora epel库，是第三方库，所以先要确保安装了epel\r\n```\r\n[root@201 ~]# rpm -q epel-release\r\nepel-release-6-8.noarch\r\n```\r\nok，我们已经安装过epel，然后yum一下，稍等片刻就安装成功\r\n```\r\n[root@201 ~]# yum install docker-io -y\r\n```\r\n如果系统是centos 7则不用以上步骤，并且安装包是docker而不是docker-io\r\n```\r\n[root@201 ~]# yum install docker -y\r\n```\r\n#### 2.启动\r\n启动守护进程\r\n```\r\n[root@201 ~]# service docker start\r\n```\r\n查看启动信息\r\n```\r\n[root@201 data]# docker info\r\nContainers: 0\r\nImages: 0\r\nStorage Driver: devicemapper\r\n Pool Name: docker-253:0-286421-pool\r\n Pool Blocksize: 65.54 kB\r\n Backing Filesystem: extfs\r\n Data file: /dev/loop0\r\n Metadata file: /dev/loop1\r\n Data Space Used: 305.7 MB\r\n Data Space Total: 107.4 GB\r\n Data Space Available: 3.536 GB\r\n Metadata Space Used: 729.1 kB\r\n Metadata Space Total: 2.147 GB\r\n Metadata Space Available: 2.147 GB\r\n Udev Sync Supported: true\r\n Deferred Removal Enabled: false\r\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\r\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\r\n Library Version: 1.02.117-RHEL6 (2016-04-01)\r\nExecution Driver: native-0.2\r\nLogging Driver: json-file\r\nKernel Version: 2.6.32-642.1.1.el6.x86_64\r\nOperating System: <unknown>\r\nCPUs: 1\r\nTotal Memory: 996.2 MiB\r\nName: 201.liberalman.cn\r\nID: BHFO:EYCF:XVAZ:J637:2LUV:RR6Y:UR7Z:MZ43:PR4N:CGUD:7EAJ:5SBI\r\n```\r\n设置开机启动\r\n```\r\n[root@201 ~]# chkconfig docker on\r\n```\r\ndocker日志路径\r\n```\r\n/var/log/docker\r\n```\r\n\r\n#### 3.实例测试\r\n##### 测试1\r\n我们下载一个centos image\r\n```\r\n[root@201 data]# docker pull centos\r\nlatest: Pulling from centos\r\n3690474eb5b4: Pull complete\r\n342c399b9d0e: Pull complete\r\n915b9d3c92fc: Downloading 23.78 MB/70.58 MB\r\n915b9d3c92fc: Downloading 70.58 MB/70.58 MB\r\nd5c89a2047c8: Download complete \r\nDigest: sha256:14bc8ca808518a2703b6eff1a5f3b7065d4b5d4b388b575ae6a27db8791ab19b\r\nStatus: Downloaded newer image for centos:latest\r\n```\r\n列出镜像，指定centos关键词看看我们下载的镜像\r\n```\r\n[root@201 data]# docker images centos\r\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\r\ncentos              latest              d5c89a2047c8        33 hours ago        196.7 MB\r\n```\r\n我们下载了一个近200M的镜像，好，运行container\r\n```\r\n[root@201 data]# docker run -i -t centos /bin/bash\r\n[root@f41d95a52943 /]# \r\n```\r\n-t表示传递给容器tty终端，-i是interactive，表示可以交互。可以看到我的终端也由root@201 data变成了root@f41d95a52943，说明进入了容器的终端，要退出输入exit就可以。如果要新开一个终端进入我们之前启动的容器，先查询container id\r\n```\r\n[root@201 data]# docker ps -a\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\nf41d95a52943        centos              \"/bin/bash\"         12 minutes ago      Up 12 minutes                           backstabbing_poincare \r\n```\r\nid是f41d95a52943然后在新终端中登录\r\n```\r\ndocker exec -it f41d95a52943 /bin/bash\r\n```\r\n这样就可以登录了。\r\n\r\n我们在docker中起了一个centos的最小系统，登录到此系统[root@f41d95a52943 /]后，查看下其ip地址，发现没有ifconfig命令，使用 yum install net-tools 安装后\r\n```\r\n[root@f41d95a52943 /]# ifconfig\r\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\n        inet 172.17.0.1  netmask 255.255.0.0  broadcast 0.0.0.0\r\n        inet6 fe80::42:acff:fe11:1  prefixlen 64  scopeid 0x20<link>\r\n        ether 02:42:ac:11:00:01  txqueuelen 0  (Ethernet)\r\n        RX packets 10375  bytes 12736213 (12.1 MiB)\r\n        RX errors 0  dropped 0  overruns 0  frame 0\r\n        TX packets 5643  bytes 309098 (301.8 KiB)\r\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\r\n\r\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\r\n        inet 127.0.0.1  netmask 255.0.0.0\r\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\r\n        loop  txqueuelen 0  (Local Loopback)\r\n        RX packets 0  bytes 0 (0.0 B)\r\n        RX errors 0  dropped 0  overruns 0  frame 0\r\n        TX packets 0  bytes 0 (0.0 B)\r\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\r\n```\r\n可以看到我们docker中的centos系统，分配了一个ip 172.17.0.1，对外ping百度等网站可以ping通！是不是到此就结束了呢，当重启container的时候，你就会发现，ifconfig命令又没有了，默认是不会为我们保存修改的，所以需要我们提交对image的修改。在宿主机中查询容器id，然后提交修改\r\n```\r\n查看刚运行过的容器\r\n[root@201 ~]# docker ps -l\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES\r\n4e108c90fa11        centos              \"/bin/bash\"         2 minutes ago       Up 2 minutes                                  ecstatic_franklin \r\n[root@201 ~]# docker start 4e108c90fa11\r\n4e108c90fa11\r\n然后连上去\r\n[root@201 ~]# docker exec -it 4e108c90fa11 /bin/bash\r\n安装net-tools包\r\n[root@4e108c90fa11 /]# yum install net-tools -y\r\n退出，在宿主机上提交评论\r\n[root@201 ~]# docker commit -m=\"add net-tools packages,nclude ifconfig command\" 4e108c90fa11\r\n129d59168480299c786d0585e9eb74fdbde3dcd00ee2cd2815d11b7749e53ac7\r\n```\r\n好，现在重新启动刚才的container，连上去试试ifconfig，就会发现ifconfig已经保存在image中了。\r\n\r\n##### 测试2\r\n宿主机上，我们在container上运行一个web服务器\r\n```\r\n[root@201 data]# docker run -d -P training/webapp python app.py\r\nUnable to find image \'training/webapp:latest\' locally\r\nlatest: Pulling from training/webapp\r\ne9e06b06e14c: Pull complete \r\n02a8815912ca: Download complete \r\nStatus: Downloaded newer image for training/webapp:latest\r\nf0b7172ab3a14e6f078e7b01310a3b027e28234baf44f4f6f1aa68465e854f60\r\n```\r\n这个web应用为docker官方提供，本地没有，所以自动去仓库下载，很方便的实现image，code 共享，并且到处运行。\r\nimage都是分层的，所以更改后构建比较快速。\r\n```\r\n[root@201 ~]# docker ps\r\nCONTAINER ID        IMAGE               COMMAND             CREATED              STATUS              PORTS                     NAMES\r\n272a09b3f713        training/webapp     \"python app.py\"     About a minute ago   Up About a minute   0.0.0.0:32768->5000/tcp   serene_jang \r\n```\r\n看到web服务器将docker内部的5000端口映射到我们宿主机的的32768端口，同时我们在宿主机上查看ip信息\r\n```\r\n[root@201 ~]# ps -ef|grep docker-proxy|grep -v \"grep\"\r\nroot      3163  3041  0 10:56 pts/0    00:00:00 docker-proxy -proto tcp -host-ip 0.0.0.0 -host-port 32768 -container-ip 172.17.0.1 -container-port 5000\r\n[root@201 ~]# netstat -npl|grep 32768\r\ntcp        0      0 :::32768                    :::*                        LISTEN      3163/docker-proxy \r\n[root@201 ~]# ifconfig\r\ndocker0   Link encap:Ethernet  HWaddr 82:EA:95:80:A9:F3  \r\n          inet addr:172.17.42.1  Bcast:0.0.0.0  Mask:255.255.0.0\r\n          inet6 addr: fe80::c057:bbff:fe36:55cf/64 Scope:Link\r\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\r\n          RX packets:9 errors:0 dropped:0 overruns:0 frame:0\r\n          TX packets:6 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:0 \r\n          RX bytes:612 (612.0 b)  TX bytes:468 (468.0 b)\r\n\r\neth0      Link encap:Ethernet  HWaddr 08:00:27:DD:0D:82  \r\n          inet addr:192.168.1.201  Bcast:192.168.1.255  Mask:255.255.255.0\r\n          inet6 addr: fe80::a00:27ff:fedd:d82/64 Scope:Link\r\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\r\n          RX packets:469 errors:0 dropped:0 overruns:0 frame:0\r\n          TX packets:304 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:1000 \r\n          RX bytes:46223 (45.1 KiB)  TX bytes:67929 (66.3 KiB)\r\n```\r\n宿主机的ip是192.168.1.201，我们访问这个web服务器，通过宿主机上的浏览器访问http://192.168.1.201:32768/，看到输出\r\n```\r\nHello world!\r\n```\r\n#### 4.制作属于自己的镜像\r\n\r\n突发奇想，制作一个mysql镜像，然后在自己服务器上开一堆mysql的服务，提供不同端口来访问，搞个集群什么的，呵呵\r\n\r\n首先创建一个目录/data/mysql，并创建一个Dockerfile文件，文件内容如下\r\nvim Dockerfile\r\n```\r\nFROM centos6:centos6\r\nMAINTAINER liberalman \"361509573@qq.com\"\r\n\r\nRUN yum install -y mysql-server\r\n\r\nRUN service mysqld start &&\\\r\n        mysql -e \"grant all privileges on *.* to \'socho\'@\'%\' identified by \'Looks137\';\"&&\\\r\n        mysql -u root -e \"show databases;\"\r\n\r\nVOLUME [\"/data/volume1\"]\r\nEXPOSE 3306\r\n```\r\n在Dockerfile所在目录下运行build命令来生成image文件，指定文件名mysql_test\r\n```\r\n[root@201 mysql]# docker build -t mysql_test ./\r\n...\r\nStarting mysqld:  [  OK  ]\r\nDatabase\r\ninformation_schema\r\nmysql\r\ntest\r\n...\r\nSuccessfully built ac45bc85be5e\r\n创建成功，查看镜像\r\n[root@201 ~]# docker images mysql_test\r\nREPOSITORY          TAG                 IMAGE ID            CREATED              VIRTUAL SIZE\r\nmysql_test          latest              ac45bc85be5e        About a minute ago   374.3 MB\r\n```\r\n这会创建一个在centos6系统上安装的mysql服务器，镜像名称是mysql_test，同时也会将centos6系统下载到本地来。好嘞，启动下\r\n```\r\n[root@201 ~]# docker run --name=mysqlserver -d -P mysql_test\r\na903be8b69fe540395e61a6cff3db16cf944ca1177cb581f7e591247a12b0737\r\n[root@201 ~]# docker ps\r\nCONTAINER ID        IMAGE               COMMAND                CREATED              STATUS              PORTS                     NAMES\r\na903be8b69fe        mysql_test         \"/usr/bin/mysqld_saf   About a minute ago   Up About a minute   0.0.0.0:32769->3306/tcp   mysqlserver \r\n```\r\n容器内的数据库已经启动了，而且映射到宿主机32769端口，连接下\r\n```\r\n[root@201 mysql]# mysql -hlocalhost -uroot -P 32769            \r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\nYour MySQL connection id is 4\r\nServer version: 5.1.73 Source distribution\r\n\r\nCopyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.\r\n\r\nOracle is a registered trademark of Oracle Corporation and/or its\r\naffiliates. Other names may be trademarks of their respective\r\nowners.\r\n\r\nType \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the current input statement.\r\n\r\nmysql>\r\n```\r\n连接正常，mysql可以用了。既然是用docker，我们就要体现它的牛逼之处，所以我要启动2个以上的mysql容器，以后用来做数据库集群也可以啊，哈哈\r\n```\r\n[root@201 ~]# docker run -p 3307:3306 --name=mysqlserver1 -d -P mysql_test1 \r\n8126d375d2f832a0381704424b45669178bc718598c1c8fa8868587455df6fed\r\n[root@201 ~]# docker run -p 3308:3306 --name=mysqlserver2 -d -P mysql_test  \r\nad920abde38b249e35600bf75f64bc44e7a007b399995e4e0fa17e7c9e5ed1a2\r\n[root@201 ~]# docker ps\r\nCONTAINER ID        IMAGE               COMMAND                CREATED              STATUS              PORTS                     NAMES\r\nad920abde38b        mysql_test         \"/usr/bin/mysqld_saf   21 seconds ago      Up 20 seconds       0.0.0.0:3308->3306/tcp    mysqlserver2\r\n8126d375d2f8        mysql_test         \"/usr/bin/mysqld_saf   About a minute ago   Up About a minute   0.0.0.0:3307->3306/tcp    mysqlserver1        \r\na903be8b69fe        mysql_test         \"/usr/bin/mysqld_saf   34 minutes ago       Up 34 minutes       0.0.0.0:32769->3306/tcp   mysqlserver \r\n```\r\n看吧，启动三个容器，分别按32769、3307、3308三个不同的端口连接都OK，数据库相互独立不影响。\r\n\r\n做了以上的活还不够，如果真的要在生产环境中使用多个mysql，最好在Dockerfile文件中设置容器中mysql的datadir目录挂载宿主机目录下，以便将真实产生的数据写入到宿主机中，否则容器一关闭所有的数据就丢失了，当然不同容器挂载到宿主机中的目录一定要不同，千万不要数据混淆了\r\n```\r\nVOLUME [\"/var/lib/mysql\"]\r\n```\r\n好了，到此写了很多，先写到这里，接下来研究怎么做弹性伸缩和扩容！\r\n#### 5.docker命令\r\n关闭容器\r\n- docker stop 容器名\r\n- docker kill    容器名\r\n\r\n杀死所有正在运行的容器\r\n- docker kill $(docker ps -a -q)\r\n\r\n删除所有已经停止的容器\r\n- docker rm $(docker ps -a\r\n\r\n删除所有未打 dangling 标签的镜像\r\n- docker rmi $(docker images -q -f dangling=true)\r\n\r\n通过image id删除镜像\r\n- docker rmi -f <image id>\r\n\r\n删除所有镜像\r\n- docker rmi $(docker images -q)\r\n\r\n搜索和centos相关的镜像\r\n```shell\r\n[root@201 data]# docker search centos\r\nNAME                          DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED\r\ncentos                        The official build of CentOS.                   2453      [OK]       \r\njdeathe/centos-ssh            CentOS-6 6.8 x86_64 / CentOS-7 7.2.1511 x8...   26                   [OK]\r\nnimmis/java-centos            This is docker images of CentOS 7 with dif...   13                   [OK]\r\nmillion12/centos-supervisor   Base CentOS-7 with supervisord launcher, h...   12                   [OK]\r\nconsol/centos-xfce-vnc        Centos container with \"headless\" VNC sessi...   10                   [OK]\r\ntorusware/speedus-centos      Always updated official CentOS docker imag...   8                    [OK]\r\nnickistre/centos-lamp         LAMP on centos setup                            4                    [OK]\r\n...\r\n```\r\n\r\n查看运行中某个容器的进程，容器id是f41d95a52943\r\n```shell\r\n[root@201 data]# docker top f41d95a52943\r\nUID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD\r\nroot                5845                5388                0                   14:23               pts/2               00:00:00            /bin/bash\r\n```\r\n\r\n查询日志\r\n- docker logs <容器id>\r\n\r\n#### 6.遇到问题\r\n1.启动失败，查看日志文件后，发现\r\nsymbol dm_task_get_info_with_deferred_remove, version Base not defined in file libdevmapper.so.1.02 with link time reference\r\n\r\n解决办法：执行：yum upgrade device-mapper-libs\r\n\r\n\r\n2.Error response from daemon: Cannot start container d9bf569e3f0db33bc3d800cca4e6be1ccf7ac89e91951ba6486e3239f92516a5: [8] System error: mountpoint for cgroup not found\r\n\r\n解决办法：因为cgroup在宿主机上没有挂载。\r\n\r\nvim /etc/fstab\r\n\r\nnone        /sys/fs/cgroup        cgroup        defaults    0    0\r\n\r\n重启机器，docker也重启下即可\r\n\r\n3.Conflict. The name \"mysqlserver\" is already in use by container 19a5ab1401f6\r\n\r\n命名冲突问题，删掉\r\n\r\ndocker rm mysqlserver\r\n\r\n****\r\n>创建于 2016-07-21 杭州，更新于 2016-07-22 杭州。\r\n\r\n>该文章在以下平台同步\r\n- >LIBERALMAN:\r\n- >CSDN:http://blog.csdn.net/socho/article/details/51999744\r\n- >简书:http://www.jianshu.com/p/3ffa4e5cbb86test-editormd',',技术,',60,0,'2016-07-22 22:54:08','2016-07-22 22:54:22',0,NULL,0,NULL),(57,1,'没有几个人真正希望你过得好','“面子有什么用，逞一时口舌之快，往后将是无尽的烦恼。一旦你在圈子里拔尖，别人要么想着绊倒你，要么想着分享你的果实。这个世界，压根就没有多少人希望你过得比他们好。”\r\n\r\n当然，如果你远远超过常人，像马云一样，旁人嫉妒就会换成崇拜，而且也完全不怕别人的掣肘，就没有这么多烦恼。\r\n\r\n可是，又有几个人做得了马云呢。所以，我们还是嘴巴老实点好。','','',0,'[![没有几个人真正希望你过的好](http://img2.manshijian.com/upload/member/image/56628/85905dcd2a8e324fb53f49e4730d6316.jpg \"没有几个人真正希望你过的好\")\r\n01\r\n\r\n我作为家族里学历最高的孩子，毕业后却一直混得不怎么好，收入一直在贫困线水准。邻里聚会每当谈到收入问题的时候，总是我最难受的时刻。\r\n\r\n去年换了一个不错的工作，待遇水平有了大幅的飞升，爸妈知道后都挺高兴。过年回家后，终于有人问起这个一年一度的问题，我的话刚说到嘴边，爸爸就接了一句：“还和往常一样，也就刚够糊口。只是稳定，书读多了也没什么用。众亲戚说，稳定就不错了。”\r\n\r\n我当时十分不理解，平时那么好面子的爸爸，终于到了可以扬眉吐气的时候，为什么突然变得那么低调。\r\n\r\n过了很久我懂得了爸爸的深意，才发现他不愧是老江湖，很多问题上看得比我要透彻。\r\n\r\n这个世界上，除了少数几个最亲近的人，比如家人，比如最好的朋友，大多数的人来了解你的近况，他们也只是问问而已，并不是真正希望你过得好，过得幸福。甚至来说，他们只是想要确认一下，确认你是不是还过得不如意，如果是，确认你没有威胁，那么他们就放心了。特别是你曾经考过好的学校，抢过风头的这种，你现在跌得越惨，别人就会觉得越有快感。\r\n\r\n如果你告诉他们你过得还不错，你要么走向了他的对立面，要么就成为了他的借钱对象。无论是哪个结果，对你都没有好处。\r\n\r\n爸爸很高明，选择了隐藏自己，别人听了开心，自己也不会活成一个靶子。\r\n\r\n02\r\n\r\n有一次，和一个朋友在一起玩，她掏出手机把她朋友圈的一个女生和男友发的自拍照指给我看，说：“前天我还听说她被男友打了，据说她给这男的戴了绿帽子，明明这么骚，还装出一副傻白甜的样子，真是恶心。”说完她点开了评论窗口。\r\n\r\n我以为他要戳穿真相，马上就要看到一场撕逼大戏了。没想到她回复的是：亲爱的，一定要幸福哦，么么哒。\r\n\r\n除了亲近的人，很多人表面上在祝福你，其实他可能比谁都希望看到你跌倒的样子。他们的心理就像我们看喜剧片一样，主角捅的篓子越大、出的糗越丢人，我们就觉得越开心。\r\n\r\n进化了这么多年，很多人骨子里还保留着一套丛林法则。他们总会留一个心眼和身边的人比较，同水平出发，一旦别人超过自己，就会觉得不舒服，有危机感，难受。\r\n\r\n看到你跑在他前面，有的可能会奋起直追；有的则会提起腿，对着你的屁股就是一脚，或者悄悄地伸长腿，放在你前面，给你使个绊子，心里想谁叫你这么得瑟。\r\n\r\n03\r\n\r\n我的朋友冬冬毕业后一直混得不错，进了一家好公司，老板很赏识他。工作一年多，顶头上司泄露公司机密，被辞退，他就顺利上位了。去年房地产市场大热，他更是赚得盆满钵满，简直是同学中少有的人生赢家。\r\n\r\n可是在同学朋友面前，他却总是一副苦大仇深的样子。\r\n\r\n朋友圈里经常发一些加班到深夜的照片，还配上“方便面买了但是还来不及吃”的文字，一副苦逼加班狗的形象；\r\n\r\n月初信用卡帐单一到，就PO出去，哀叹说，又要砸锅卖铁还债了。\r\n\r\n虽然只是偶尔发一下状态，但苦逼的印象已经建立。周围的朋友都喜欢找他聊天，生活中遇到什么烦心事跟他聊一聊，总能发现他比自己还惨，于是心情就好多了。所以虽然他哭惨，但是人缘奇好。\r\n\r\n而我是少有知道他真实现状的人，每次看到他，我都笑他太假了，至于演得这么凄苦吗。然后他就反问我，那你知道小林吗？\r\n\r\n我说知道啊，挺好的一个孩子，不知为啥，怎么说做微商就做微商了。\r\n\r\n冬冬笑着说，我和她曾经是同桌，可是她没卖过我一张面膜，你和她都没同过班吧，据我所知，你已经从她那买了好几百张啦。平时我给她一个过得不好的印象，她也没好意思过来找我推销。所以说，有时候还是低调点好，起码无关紧要的事情不会找上你。\r\n\r\n冬冬继续说，当然我也不是说硬要当个守财奴，朋友有难该帮的还是要帮。比如前不久大学的老班长买房，需要凑首付，我就支援了一些。他知道我过得并不好，开始硬是不好意思要。后来拿了后感动得不得了，觉得我才是真哥们。据说班里的大头也一样借了他十万，大家都知道大头收入不错。他支援一点大家觉得理所应当，并不觉得有多情深意重。相反，要是他没有任何动作，估计背后都有人说他了。\r\n\r\n看到了吧，你装逼，虽然不会遭雷劈，但你说出多大的话，就要承担多大的义务，你可以说，我混的好，关别人鸟事。但别人不这么认为，他们只为觉得你小气，觉得你是土豪，就得分田地。\r\n\r\n冬冬是个聪明人，充分领悟了“闷声发大财”的精髓，决不去图一时的面子。用他的话说：\r\n\r\n“面子有什么用，逞一时口舌之快，往后将是无尽的烦恼。一旦你在圈子里拔尖，别人要么想着绊倒你，要么想着分享你的果实。这个世界，压根就没有多少人希望你过得比他们好。”\r\n\r\n当然，如果你远远超过常人，像马云一样，旁人嫉妒就会换成崇拜，而且也完全不怕别人的掣肘，就没有这么多烦恼。\r\n\r\n可是，又有几个人做得了马云呢。所以，我们还是嘴巴老实点好。\r\n\r\n- THE END -\r\n\r\n作者：韩大茄',',思想,',77,0,'2016-08-03 19:25:18','2017-05-14 20:05:19',0,'http://img2.manshijian.com/upload/member/image/56628/85905dcd2a8e324fb53f49e4730d6316.jpg',1,'http://www.manshijian.com/articles/article_detail/193449.html'),(58,1,'epoll边沿触发漏报消息包问题',NULL,'','',0,'开发一个即时通讯后台，底层的网络收发使用 epoll + main loop实现网络事件(conn、read、send)的异步触发读写，以达到能最大限度减少线程的IO等待，提高cup利用率的目的。\r\n\r\n实际使用中，会发现有少量并没有 因为访问后端阻塞 但是依然反馈慢到超时的情况，我们定义从客户端发消息到收到反馈，3s超时，而我们发现延迟可能好几分钟，这让我觉得肯定不是后端一些复杂逻辑导致的，逻辑层再复杂，也不至于这么慢，而且也没有服务器down的情况出现，而且跟踪发现这种情况是在过了午夜到凌晨这一段时间发生。虽然这种情况很少，而且难以复现，经过不遗余力的跟踪，还是让我找到了问题的结症。\r\n\r\n问题定位：\r\n服务器基本的架构分为接入层+逻辑层+存储层。\r\n\r\n\r\n```sequence\r\nparticipant 客户端1\r\nparticipant 客户端2\r\n客户端1->网关: (1)msgA\r\n网关->逻辑层: (2)msgA\r\n逻辑层-->网关: (3)msgA\r\n逻辑层->存储层: (3\')msgA\'copy\r\n网关-->客户端2: (4)msgA\r\n```\r\n\r\n消息流动从客户端1-->网关-->逻辑层-->网关-->客户端2依次排查。其中逻辑层往存储层拷贝消息是在和逻辑层将消息转发回网关同时进行的，采用异步入库的方式存储消息日志。\r\n \r\n 我在上图中的每一个节点都打印日志，时间精确到毫秒。通过tcpdump抓下的16进制包和机器、客户端上的日志时间戳对比分析，不断的在测试环境尝试复现，最终确定，在(3)这个环节出现了延迟问题。\r\n \r\n原来会有这种情况出现，在逻辑层服务器收到一个包后，其在tcp缓冲区中待着不动，没有取出来，等到我再发一个消息过来的时候，才会将其冲出来。加入我一直不发消息，等个几分钟它就几分钟不出来。\r\n\r\n此时我猛然想到曾经看到过的资料，对于epoll的边沿触发模式，据说会发生tcp包漏报的情况，我想我这里应该就是漏报了，等下回新包来的时候，再一起给报出来。\r\n\r\n从网上找了别人的两张图\r\n\r\n![从socket读数据](http://img.blog.csdn.net/20160805111824193)\r\n\r\n![往socket写数据](http://img.blog.csdn.net/20160805111851945)\r\n\r\n水平触发(LT)下只要某个 socket 处于 readable/writable 状态，无论什么时候进行 epoll_wait 都会返回该 socket；而 边沿触发(ET) 模式下只有某个 socket 从 unreadable 变为 readable，或从unwritable 变为writable时，epoll_wait 才会返回该 socket。\r\n\r\n从这两张图中可以得知，在水平触发，或者使用select的时候，只要缓冲区中有数据，哪怕一次没有读完，main loop下次循环依然会报有数据，继续读就ok了。但是边沿触发的时候，假如上次读取了一部分数据，导致剩余数据低于边沿触发的水位线，其不会触发读回调函数，那么这个时候，消息就会一直待在tcp的缓冲区中，直到下一次有新的消息过来，触发了水位线才会再读出。\r\n\r\n于是将tcpdump抓到的包进行分析，我的协议包头两个字节代表协议版本、控制参数什么的，第3、4两个字节代表包长。我一次性发两个逻辑包，我发现tcpdump抓到了两个我的逻辑包，但是测试服务器终端只打印了第一个逻辑包，第二个不见了，于是印证了我的猜测，第二个果然躺在tcp缓冲区中挺尸啊！然后再发一次消息，果然把上一个给挤出来了，在结合tcp抓包，对上了。这是很典型的ET工作模式！说明有多个包黏在一起同时到达的时候，每次读回调只处理一个包。当然，这里多个包同时到达的问题，我觉得不是问题，tcp本来就允许这样啊。造成这个问题是因为我只关心了一个逻辑包的处理，没想到会黏包，而且还非要用高大上的ET边沿触发。下来看看我写的改进代码\r\n\r\n```c\r\nint n = 0;\r\nwhile(1)  \r\n{  \r\n    nread = read(fd, buf + n, BUFSIZ-1);//非阻塞的读，返回每次读的数据大小\r\n    if(nread < 0)  \r\n    {  \r\n        if(errno == EAGAIN || errno == EWOULDBLOCK)  //对于EAGAIN和EWOULDBLOCK要循环回去继续读，这种异常不要管它\r\n        {  \r\n            continue;  \r\n        }  \r\n        else  \r\n        {  \r\n            break;//or return;  \r\n        }  \r\n    }  \r\n    else if(nread == 0)  \r\n    {  \r\n        break;//0代表数据读完了 \r\n    }  \r\n    else  \r\n    {  \r\n        n += nread;  \r\n    }  \r\n}  \r\n\r\n```\r\n\r\n问题解决：\r\n找到问题后，就很容易解决了：每次读回调被触发的时候，读完一个逻辑包后，紧接着试探是否还有数据未读，有未读继续读，直到读完再退出，修改epoll_ctl到反向的模式。\r\n\r\n****\r\n> 创建于 2015-04-25 北京，更新于 2016-08-05 杭州\r\n\r\n>该文章在以下平台同步\r\n- >LIBERALMAN:http://api.liberalman.cn:40000/article/58\r\n- >CSDN:http://blog.csdn.net/socho/article/details/52127663\r\n- >简书:\r\n\r\n- [ ]  引用\r\n',',技术,',200,0,'2016-08-05 11:50:02','2016-08-10 16:01:02',0,NULL,0,''),(59,1,'epoll 边沿触发和水平触发区别实战讲解',NULL,'','',0,'```c\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <errno.h>\r\n#include <unistd.h>\r\n#include <fcntl.h>\r\n#include <arpa/inet.h>\r\n#include <netinet/in.h>\r\n#include <sys/socket.h>\r\n#include <sys/epoll.h>\r\n\r\n/* 最大缓存区大小 */\r\n#define MAX_BUFFER_SIZE 5\r\n/* epoll最大监听数 */\r\n#define MAX_EPOLL_EVENTS 20\r\n#define EPOLLLT 0\r\n\r\n/* 设置文件为非阻塞 */\r\nint set_nonblock(int fd)\r\n{\r\n    int old_flags = fcntl(fd, F_GETFL);\r\n    fcntl(fd, F_SETFL, old_flags | O_NONBLOCK);\r\n    return old_flags;\r\n}\r\n\r\n/* 出错处理 */\r\nvoid err_exit(char *msg)\r\n{\r\n    perror(msg);\r\n    exit(1);\r\n}\r\n\r\n/* main函数 */\r\nint main(int argc, const char *argv[])\r\n{\r\n    int listenfd, epollfd, nfds, reuse = 1;\r\n    struct sockaddr_in server_addr;\r\n    struct epoll_event events[MAX_EPOLL_EVENTS];\r\n\r\n    if (argc < 3)\r\n    {\r\n        fprintf(stderr, \"usage:%s ip_address port_number\\n\", argv[0]);\r\n        exit(1);\r\n    }\r\n\r\n    memset(&server_addr, 0, sizeof(server_addr));\r\n    server_addr.sin_family = AF_INET;\r\n    server_addr.sin_port = htons(atoi(argv[2]));\r\n\r\n    if (inet_pton(PF_INET, argv[1], &server_addr.sin_addr) == -1)\r\n        err_exit(\"inet_pton() error\");\r\n\r\n    if ((listenfd = socket(PF_INET, SOCK_STREAM, 0)) == -1)\r\n        err_exit(\"socket() error\");\r\n\r\n    /* 设置复用socket地址 */\r\n    if (setsockopt(listenfd, SOL_SOCKET, SO_REUSEADDR, &reuse, sizeof(reuse)) == -1)\r\n        err_exit(\"setsockopt() error\");\r\n\r\n    if (bind(listenfd, (struct sockaddr *)&server_addr, sizeof(server_addr)) == -1)\r\n        err_exit(\"bind() error\");\r\n\r\n    if (listen(listenfd, 5) == -1)\r\n        err_exit(\"listen() error\");\r\n\r\n    if ((epollfd = epoll_create(256)) == -1)\r\n        err_exit(\"epoll_create1() error\");\r\n\r\n    /////////////////////////////////////////////////////////////\r\n    /* 设置监听socket：LT，noblock */\r\n    /* 设置监听socket：ET，noblock */\r\n    struct epoll_event ep_event;\r\n    ep_event.data.fd = listenfd;\r\n    ep_event.events = EPOLLIN | EPOLLLT; // EPOLLET\r\n    set_nonblock(listenfd); // 设置是否非阻塞\r\n    epoll_ctl(epollfd, EPOLL_CTL_ADD, listenfd, &ep_event);\r\n    /////////////////////////////////////////////////////////////\r\n\r\n    printf(\"监听socket=%d\\n\", listenfd);\r\n\r\n    while (1)\r\n    {\r\n        printf(\"\\n================================= epoll_wait() =================================\\n\\n\");\r\n        nfds = epoll_wait(epollfd, events, MAX_EPOLL_EVENTS, -1);\r\n        if (nfds == -1)\r\n            err_exit(\"epoll_wait() error\");\r\n        else\r\n        {\r\n            struct sockaddr_in client_addr;\r\n            socklen_t client_addrlen;\r\n            int newfd, connfd;\r\n            int i, ret, sec;\r\n\r\n            for (i = 0; i < nfds; i++)\r\n            {\r\n                newfd = events[i].data.fd; //取出事件的fd\r\n                if (newfd == listenfd) //当新事件的fd和我们的主监听fd相同时，说明这是建立新连接的请求\r\n                {\r\n                    printf(\"--------------------------------- events[%d],新连接 -----------------------------\\n\", i);\r\n                    /* 休眠3秒，模拟一个繁忙的服务器，不能立即处理accept连接 */\r\n                    //sec = 3;\r\n                    //sleep(sec);\r\n                    //printf(\"服务器繁忙，等待了%d秒，现在开始accept..\\n\", sec);\r\n\r\n                    client_addrlen = sizeof(client_addr);\r\n                    connfd = accept(listenfd, (struct sockaddr *)&client_addr, &client_addrlen);\r\n                    /* 注册connfd到epoll，并设置是LT,默认阻塞 */\r\n                    struct epoll_event ep_event;\r\n                    ep_event.data.fd = connfd;\r\n                    ep_event.events = EPOLLIN | EPOLLLT;\r\n\r\n                    set_nonblock(connfd);\r\n\r\n                    epoll_ctl(epollfd, EPOLL_CTL_ADD, connfd, &ep_event);\r\n                    printf(\"accept(connfd = %d) 已加入accept列表\\n\", connfd);\r\n                } else if (events[i].events & EPOLLIN) { // EPOLLIN 有数据进来\r\n                    /* 可读事件处理流程 */\r\n                    printf(\"--------------------------------- events[%d],EPOLLIN ---------------------------\\n\", i);\r\n                    char buffer[MAX_BUFFER_SIZE];\r\n                    int ret;\r\n\r\n                    memset(buffer, 0, MAX_BUFFER_SIZE);\r\n                    ret = recv(newfd, buffer, MAX_BUFFER_SIZE, 0); //阻塞模式下的recv调用\r\n                    printf(\"recv() %d 字节数据\\n\", ret);\r\n                    if (ret > 0)\r\n                        printf(\"recv>%s\\n\", buffer);\r\n                    else\r\n                    {\r\n                        if (ret == 0)\r\n                            printf(\"客户端主动关闭！！！\\n\");\r\n                        close(newfd);\r\n                    }\r\n                } else\r\n                    printf(\"other msg ...\\n\");\r\n            } \r\n        }\r\n    }\r\n\r\n    close(listenfd);\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\n#### 1.将监听socket设置为==LT，noblock==\r\n\r\n监听socket，也就是main函数一开始定义的 listenfd，现在测试它的连通性。我们使用nc命令来进行测试，如果没有，则执行 yum install nc -y 安装。首先开启我们的服务\r\n```\r\n[root@201 test]# ./a.out 0.0.0.0 5000\r\n```\r\n然后新开一个终端，连续执行5次测试命令\r\n```\r\n[root@201 test]# nc localhost 5000&\r\n[1] 7560\r\n[root@201 test]# nc localhost 5000&\r\n[2] 7561\r\n[root@201 test]# nc localhost 5000&\r\n[3] 7562\r\n\r\n[1]+  Stopped                 nc localhost 5000\r\n[root@201 test]# nc localhost 5000&\r\n[4] 7563\r\n\r\n[2]+  Stopped                 nc localhost 5000\r\n[root@201 test]# nc localhost 5000&\r\n[5] 7564\r\n\r\n[3]+  Stopped                 nc localhost 5000\r\n[root@201 test]# jobs\r\n[1]   Stopped                 nc localhost 5000\r\n[2]   Stopped                 nc localhost 5000\r\n[3]-  Stopped                 nc localhost 5000\r\n[4]   Stopped                 nc localhost 5000\r\n[5]+  Stopped                 nc localhost 5000\r\n\r\n```\r\n在我们服务端看到打印出如下日志\r\n```\r\n[root@201 test]# ./a.out 0.0.0.0 5000\r\n监听socket=3\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\n服务器繁忙，等待了3秒，现在开始accept..\r\naccept(connfd = 5) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\n服务器繁忙，等待了3秒，现在开始accept..\r\naccept(connfd = 6) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\n服务器繁忙，等待了3秒，现在开始accept..\r\naccept(connfd = 7) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\n服务器繁忙，等待了3秒，现在开始accept..\r\naccept(connfd = 8) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\n服务器繁忙，等待了3秒，现在开始accept..\r\naccept(connfd = 9) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n\r\n```\r\n说明即便服务器很繁忙，也依然每次在等待了3s后将新的连接接入，connfd依次是5、6、7、8、9，链接没有漏报，5次全接入了。\r\n\r\n#### 2.将监听socket设置为==ET，noblock==\r\n\r\n先杀掉之前的测试程序，执行\r\n```\r\nfor i in {1..5};do kill %$i;done\r\n```\r\n然后用相同的方式测试，发起5次接入\r\n```\r\n[root@201 test]# ./a.out 0.0.0.0 5000\r\n监听socket=3\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\n服务器繁忙，等待了3秒，现在开始accept..\r\naccept(connfd = 5) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\n服务器繁忙，等待了3秒，现在开始accept..\r\naccept(connfd = 6) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n\r\n```\r\n看结果发现只接入了两条，还有3条没接入。说明高并发时，会出现客户端连接不上的问题。\r\n\r\n#### 3.将读写socket设置为==LT，block==\r\n读写socket，也就是那个connfd。此时的listenfd，我们就不用管了，当epoll_wait返回时，必定有事件发生，我们设置为非阻塞IO。重点是测试connfd。建立新连接的的时候，将如下代码设置成EPOLLLT，注释掉设置非阻塞的函数\r\n```c\r\n/* 注册connfd到epoll，并设置是LT还是ET,是否阻塞 */\r\nstruct epoll_event ep_event;\r\nep_event.data.fd = connfd;\r\nep_event.events = EPOLLIN | EPOLLLT;\r\n//set_nonblock(connfd);\r\n```\r\n这样就设置成功LT，block了。还有上面两例在测试时候设置的接入休眠部分的代码也可以注释掉了，这里不用模拟服务器忙了。这次我们更改下测试方式，只连接一个客户端，然后依次输入1~9个数字，发送\r\n```\r\n[root@201 test]# nc localhost 5000\r\n123456789 \r\n```\r\n看下服务端的反馈\r\n```\r\n[root@201 test]# ./a.out 0.0.0.0 5000\r\n监听socket=3\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\naccept(connfd = 5) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],EPOLLIN ---------------------------\r\nrecv() 5 字节数据\r\nrecv>12345\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],EPOLLIN ---------------------------\r\nrecv() 5 字节数据\r\nrecv>6789\r\n\r\n\r\n================================= epoll_wait() =================================\r\n\r\n```\r\n1~9在客户端是一条消息，但是到了服务端被拆分成了两次事件，打印了两条消息。水平触发触发了2次，我们代码里面设置的缓冲区是5字节，处理代码一次接收不完，水平触发一直触发，直到数据全部读取完毕。\r\n#### 4.将读写socket设置为==LT，noblock==\r\n测试结果同3相同，因为读、写的socket其实设置阻塞或者非阻塞，区别在于缓冲区是否可读写。当不能读写的时候，阻塞型的会一直等待直到可以读写；而非阻塞会立即返回，由我们再写代码决定下一步怎么做。\r\n#### 5.将读写socket设置为==ET，block==\r\n建立新连接的的时候，将如下代码设置成EPOLLET，注释掉设置非阻塞的函数\r\n```c\r\n/* 注册connfd到epoll，并设置是LT还是ET,是否阻塞 */\r\nstruct epoll_event ep_event;\r\nep_event.data.fd = connfd;\r\nep_event.events = EPOLLIN | EPOLLET;\r\n//set_nonblock(connfd);\r\n```\r\n相同方式再测试下\r\n```\r\n[root@201 test]# ./a.out 0.0.0.0 5000\r\n监听socket=3\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\naccept(connfd = 5) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],EPOLLIN ---------------------------\r\nrecv() 5 字节数据\r\nrecv>12345\r\n\r\n================================= epoll_wait() =================================\r\n\r\n```\r\n边缘触发只触发了一次，只读取了5个字节。这就是传说中的ET的方式会漏报吗！继续在客户端发一个消息\'s\'\r\n```\r\n[root@201 test]# nc localhost 5000\r\n123456789\r\ns\r\n```\r\n这下终于把上次没报完的消息给逼出来了\r\n```\r\n[root@201 test]# ./a.out 0.0.0.0 5000\r\n监听socket=3\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\naccept(connfd = 5) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],EPOLLIN ---------------------------\r\nrecv() 5 字节数据\r\nrecv>12345\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],EPOLLIN ---------------------------\r\nrecv() 5 字节数据\r\nrecv>6789\r\n\r\n\r\n================================= epoll_wait() =================================\r\n\r\n```\r\n看到6789打印出来了，不过s字母还没打印。好我再输入一个字母\'b\'\r\n```\r\n[root@201 test]# ./a.out 0.0.0.0 5000\r\n监听socket=3\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],新连接 -----------------------------\r\naccept(connfd = 5) 已加入accept列表\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],EPOLLIN ---------------------------\r\nrecv() 5 字节数据\r\nrecv>12345\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],EPOLLIN ---------------------------\r\nrecv() 5 字节数据\r\nrecv>6789\r\n\r\n\r\n================================= epoll_wait() =================================\r\n\r\n--------------------------------- events[0],EPOLLIN ---------------------------\r\nrecv() 4 字节数据\r\nrecv>s\r\nb\r\n\r\n\r\n================================= epoll_wait() =================================\r\n\r\n```\r\n终于把之前的s和现在的b都打印出来了，原来上次的 s + 回车 两个字节，再算上本次的 b + 回车 总共4个字节，没超出缓冲区5字节的大小，所以都打印出来了。我们可以看到，阻塞的边缘触发，如果不一次性读完一个事件上的数据，会干扰下一个事件！！！\r\n\r\n\r\n',',技术,',162,0,'2016-08-05 22:03:23','2016-08-06 00:07:48',0,NULL,0,''),(60,1,'我爱这土地',NULL,'','',0,'假如我是一只鸟，\r\n\r\n我也应该用嘶哑的喉咙歌唱：\r\n\r\n这被暴风雨所打击着的土地，\r\n\r\n这永远汹涌着我们的悲愤的河流，\r\n\r\n这无止息地吹刮着的激怒的风，\r\n\r\n和那来自林间的无比温柔的黎明 ……\r\n\r\n——然后我死了，\r\n\r\n连羽毛也腐烂在土地里面。\r\n\r\n为什么我的眼里常含泪水？\r\n\r\n因为我对这土地爱得深沉 ……\r\n****\r\n  by 艾青 1938',',思想,',344,0,'2016-08-06 21:23:32','2016-08-06 21:35:03',0,NULL,1,'《我爱这土地》——艾青'),(61,1,'历史选择儒家而不选墨家的原因',NULL,'','',0,'#历史选择儒家而不选墨家的原因\r\n######——浅析墨家与儒家之不同命运\r\n儒家，孔孟文化为源，走中庸礼乐之道；墨家，兼爱非攻，尚贤尚同，走实用主义路线。同是“百花齐放，百家争鸣”中的一朵奇葩，历史，为什么选择了儒家而非墨家？思想网络同样都涵盖了政治、经济、文化、教育、军事等诸方面，为什么不是墨家受到统治者的青睐？\r\n首先须明确一点，这里所讲的“历史”是有时间局限的：自汉武帝实行“罢黜百家，独尊儒术”的文化专制主义政策后，墨家学派便渐趋消亡，直到清代才有人开始重新校注《墨子》，所以之于对儒家和墨家的取舍，主要在春秋战国至西汉这段时期罢了。\r\n\r\n  在我看来，两家的不同命运是有多重原因的，不仅有思想本身的原因，也有思想家的影响因素，同时历史机遇也是不容忽视的原因之一。\r\n  \r\n  首先，儒墨两家的不同思想主张，构成了两家不同命运之根本。\r\n  \r\n  墨家思想的本身缺点首先影响了墨家思想的可采纳性：\r\n  \r\n  在我看来，墨家思想上的缺点主要有四点。第一点，过于极端。比如说对于礼乐的极端的排斥态度。墨子认为王公大人对于礼乐的追求，只会造成“亏夺民衣食之财”（《非乐上》），并通过男子敲乐耽误农桑、用赋税制造琴瑟不符合圣王的原则等论据，得出“为乐非也”的结论。这虽是墨子在当时社会物质生产极端匮乏情况下的一种无奈之举，但是墨家未能认识到声乐丰富文化、愉悦放松身心等的积极意义。一味的否定和排斥礼乐，是不利于社会全面发展和历史进步的。另外，如主张节省消费的“节用”观等观点认为只要食能果腹，衣可御寒即可，再往前一步，便是一种无益的消费，也带有“极端”的倾向，是不适宜生活提高，社会发展的。第二点，不合情理。墨家主张“丈夫年二十，毋敢不处家，女子年十五，毋敢不侍人”早婚早生子，以增加人口，增加劳动力，这也是一种幼稚的想法。十五是女子的最大限度，这实在说不过去。人事未通，自身的发育都还没有完全的女子便让她去做母亲，根本不合情理。同时，墨家《贵义》篇中提出“必去喜、去怒、去乐、去悲、去爱，而用仁义”试问爱欲去尽，“仁义”又从哪里来？主张“兼爱”却又扬言“去爱”岂不自相矛盾，不合情理？第三点，本身自相矛盾。墨子通过史书上记载的杜伯报仇周宣王、庄子仪报仇燕简公、死羊显灵断真假等事例，论证得出“则鬼神之有，岂可疑哉？”的结论，并借此说明“虽有深溪博林，幽涧毋人之所，施行不可以不董”的主张。但与此同时，墨子还主张“非命”，认为人的命运要靠自己把握，一方面鼓吹鬼神的干涉作用，一方面又强调人的主观能动性，两者岂不矛盾？第四点，畸形的“宗教主义”。墨家弟子效仿墨子“以裘褐为衣，以跂硚为服，日夜不息，以自苦为极”和“摩顶放踵，利天下为之”的行为，过着清苦的生活，这颇似宗教的禁欲主义。墨者为理想不惜牺牲生命的表现更似宗教的“殉教”行径。这几点在我看来是不值得提倡的，因为墨家不是真正的宗教，原因有二：第一，墨家虽然承认天和鬼神的存在，但它更重视对现实世界的改造，它的理想在于改造此岸世界，而不在于追求彼岸世界的天国的幸福。天、鬼神在墨子的宗教观中都是作为其政治理想的代言人出现的，并非作为崇拜偶像出现的。第二，墨家的“节用”、“节葬”、“非乐”等主张，都是针对统治者的奢侈腐化的生活而提出的，其旨在维护劳动人民的利益。墨者的生活简朴、勤于劳作应视为劳动者的本色，而不是什么清教徒和殉教。\r\n  \r\n  墨家思想与当时社会状况的冲突，对当时历史环境的不适应，也是墨家思想不被青睐的决定性原因。这主要表现在以下三个方面：\r\n  \r\n  第一个方面，墨家思想不符合封建统治阶级的“口味”。墨子说：“君，以若(顺)民者也”，可见，墨家的法制不是顺君而是顺民；国家的宪令也不是利君而是利民，故他说：“功，利民也”，利民者赏，“赏，上报下之功也”。墨子义正言辞的指出：建国立君，并不是为王公们的富贵淫佚，“将以为万民兴利，除害，富贫，众寡”。所谓“富贫”，则人民贫困，就需要“强本节用”，使人民富裕。所谓“众寡”，则人口少，劳动力不足，就必须“内（宫）无拘女，外无寡夫”，使人口增长。如是，则人民富庶，国家兴旺。这一观点在《十论》及《七患》《辞过》皆有所阐明和发挥，说明了墨家主张建立的国家是人民的，墨家是站在人民的立场上的呐喊者，这与自春秋战国就开始的封建社会的统治阶级的利益是极相排斥的。历代封建统治阶级无不想加强统治，维护自己的利益，达到专制目的，岂会搬起墨家的石头砸自己的脚？而与此相反，儒家的“三纲五常”“天人合一”等封建思想正是对等级制度的划分与规范，正对了统治阶级的“口味”。\r\n第二点，破坏了封建等级观念和制度。这一点在《尚贤》《兼爱》篇中表现尤为突出，墨子的尚贤是彻底的，他要求“举义不避贫贱”“举义不避亲疏”“举义不避远近”，“兼相爱，交相利”，贵族、贫民不分贵贱，一视同仁，相等机会，这实际上打破了封建社会的等级观念，仅此而言，其思想之高远与宏达即已非其他周秦诸子所可同日而语者。当然，也正因如此，墨子在中国漫漫数千年的封建文化中几乎没有自己的立足之地。相反，儒家虽然也主张“爱”，但是儒家主张的是“仁者爱人”，是以“亲亲”为基础的，是有等级差别的爱，这正与森严的封建社会等级体系相适应。故而，又构成一个选儒不选墨的因素。第三点，对于君主的约束极多。墨子认为君主应该 “当为宫室，不可不节” “当为衣服，不可不节”“当为食饮，不可不节”“当为舟车，不可不节”“当蓄私，不可不节”，墨子把国君的吃、穿、住、行、甚至娶老婆的个数都管了个遍，认为国君只要满足基本需要就可以了，然而作为封建金字塔体制的致高点，国君恰恰需要宏伟的宫阁台榭来铸造威严，华裳龙袍体现他的与众不同，华盖出行表现他的天下独尊，食饮天下以示大全独揽，后宫充溢以彰显特权，墨家却一一给他削掉，国君又用何来展示他的龙威？所以说，国君不选择墨家思想作为统治思想也是情理之中的事。只是，在我看来，墨家之所以不受重视的致命原因还是源于它的“选天子”思想。《尚同》篇中，墨子说：“天下之所以乱者，生于无政长。是故选天下之贤可者，立以为天子。天子立，以其力为未足，又选择天下之贤可者，置立之以为三公。”“选天子”思想彻底的打破了封建帝王家族世袭的体制，与当时的封建政治产生了最为尖锐和深刻的矛盾。相反，儒家的“君君臣臣，父父子子”“君权神授”的拥君思想，则“聪明”的多，也受用的多。\r\n\r\n  其次，从思想代表及其后代弟子发展来说：\r\n  \r\n  墨家是一个有领袖，有学说，有组织的学派，但他们有强烈的实践精神。墨者们吃苦耐劳，严于律己，把维护公理与道义看作是义不容辞的责任。墨者大多是有知识的劳动者，战国后期分化为两支：一支注重认识论、逻辑学、几何光学、静力学等学科的研究，是谓“墨家后学”；另一支转化为秦汉社会的游侠，墨家思想的修缮几乎后继无人。韩非子说过：“儒以文乱法，而侠以武犯禁”，儒学一旦与政治同流，成为立法的根据，儒学便实现合法化；而以狭义自任的墨学，既然已做好同弱者共进退的准备，最后必然是走向强权政治的对立面，成为强权专制政权的眼中钉，肉中刺。墨家大致是在秦统一后迅速衰落，而凋谢于西汉中叶，及国家专制集权一成熟，墨家便无法生存下去。相反，儒家的发展却是持续旺盛的势头。由孔子及其弟子至孟子及其弟子至荀子及其弟子再到汉代的董仲舒……儒学一直在被随朝随代的修缮改造着，适应着历史的发展，故而在两千年封建社会中一直“长青不老”。\r\n  \r\n  再次，机遇也是影响儒墨不同命运的重要因素：\r\n  \r\n  汉初因诸侯割据势力膨胀，汉武帝决定采用董仲舒的“大一统”“君权神授”的儒家思想来加强思想统治，从而“罢黜百家，独尊儒术”，这一思想的提出更加快了墨家思想的灭亡和儒家思想的兴盛。虽然历史未有记载，但可以推测，在罢黜的百家思想中，墨家肯定是最受重创的一家，因为数百年的自由学术年代里墨家是唯一可以同儒学学派相抗衡的。清代学者汪中在《述学.墨子序》中写道：“与九流之中，唯儒足与之相抗，其余诸子，皆非其比”，而《韩非子.显学》也载：“世之显学，儒墨也”。从韩非子到汉武帝相去不过百年，而墨学从举世显学一举坠入深渊，以至于往后漫长的时间里，墨子的名字竟然极少为学者们提起，甚至于司马迁《史记》中也仅仅用了二十四个字来记述它。不能不说，历史机遇在两家的发展中也扮演了极为重要的角色。也许有人会说，那么，秦始皇“焚书坑儒”这一“机遇”不还是打压了儒家吗？这里需明确一点，秦朝是对法家以外的思想都排斥摧毁的，而庆幸的是儒家接着便被汉朝统治着扶持了，而墨家没有，所以说，“罢黜百家，独尊儒术”对于儒家来说仍是一个重要发展机遇。\r\n  \r\n   墨家沉睡了两千年，墨家的道义，注定其精神本质是无法苟合于集权的专制政体的。晚清墨学的复兴全然不是历史的巧合，当封建制度面临解体时，思想上的专制罗网也被撕开一角，而墨学作为中国古代具有先验性的思想理论，其复兴与重新受到重视，是顺理成章的事。\r\n   ',',思想,',110,0,'2016-08-10 13:12:28','2016-08-10 14:02:04',0,NULL,1,'http://blog.sina.com.cn/s/blog_6f84559f0100nwlm.html'),(62,2,'无题',NULL,'','',0,'\r\n6、神不贪，为何容不得一点对其不敬；神不恶，为何要将千万生灵命运握于手中？',',思想,',42,0,'2016-08-13 22:06:32','2016-08-13 22:07:34',0,NULL,0,''),(63,1,'柯南君：教你如何对待大型电商平台的性能优化？之 一 （方法、指标、工具、定位）',NULL,'','',0,' 柯南君：教你如何对待大型电商平台的性能优化？之 一 （方法、指标、工具、定位）\r\n柯南君的朋友“闲哥”最近遇到了点困扰---”大型网站平台如何对待性能优化，以及如何针对性调优？“，柯南君今天，想谈一下性能优化的战略，主要是一些企业架构级别的技术和方法。柯南君将自己的个人经验和各家公司大咖的经验一起汇总给大家，如有瑕疵，请大家及时指正。\r\n\r\n柯南君有句自律的口头语“如果你不能成为一个追求性能的疯子，那么性能将会把你变成疯子”\r\n\r\n## 序曲：\r\n如何评估平台系统需求与性能指标？在这里，柯南君在这里小谈一下（因为每一家公司都不一样，所以，仅仅是举个例子）我先和大家探讨一下“性能测试方法”\r\n\r\n##### 1.V模型的标准测试策略\r\n\r\n![V模型的标准测试策](http://img.blog.csdn.net/20141120180244749?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc3VuMzA1MzU1MDI0c3Vu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\r\n\r\n备注：\r\n       性能测试是V模型中验证整体系统的重要步骤',',技术,',57,0,'2016-08-16 11:40:50','2016-09-07 21:40:44',0,'http://img.blog.csdn.net/20141120180244749?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc3VuMzA1MzU1MDI0c3Vu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center',1,'http://blog.csdn.net/sun305355024sun/article/details/41311617'),(68,1,'知道哪些法律上的小常识可以保护自己？',NULL,'','',0,'哈哈 这个我擅长\r\n民事法官倾情推荐 全部来自实际案例 日常生活中常用实用小技巧 手机码字 大量干货居然干不到5个赞 实在打击我积极性 伯乐在哪里！！！\r\n一、合同借款类\r\n1、写合同或让他人打欠条，务必在对方落款名字后面让写上身份证号码，否则，后果你懂的；\r\n2、给人借钱：如果给现金，务必当日从银行取现而后保留取现的银行票据，ATM机取现则打印票据并保留、银行柜台取现则保留底单；如果转帐，同上，亦务必保留转帐凭证，同时不要注销掉该帐号。否则日后发生纠纷诉至法院，对方不认可，你亦没有提供资金来源，很可能败诉哦；\r\n3、借人高息的，在给人借款同时，不要马上就拿回当月或当年的利息，不然被拿回来的这部分不视为借款本金，你可以一起喝茶，喝完茶出来再拿嘛 何必急于一时呢；\r\n4、借人高息的，借条上千万不要不好意思写上利息哦，君知道，月息2分及以下都是可以支持的，写多了，大不了超过部分法院不支持。可系，如果你不写，对方法庭上不认可有利息，你就亏大发了哦，法院很有可能无证据不支持利息呢；\r\n5、关于诉讼时效，我看了下其他人答案，明显没有实践经验哦。如果你是借款方，可以和对方口头约定还款时间，但不要写在借条上哦，这样，你的借条有效期20年不会超诉讼时效。什么？那你担心对方无限期不还款？没关系，按你们约好的还款日子催一下，不还？不还直接法院见，没关系，法院会认可滴，而且再也不用担心对方突然找不到人过了两年诉讼时效哦。\r\n二、交通事故类\r\n1、事故发生后，务必记得拍一张对方交强险以及商业险的保单，一点都不费神，不然万一双方协商不好，你得到处查询或复印，比较麻烦；\r\n2、如果撞伤了对方，自己需要承担责任，但购买了交强险和商业险，记住，交警让你预付医药费什么的，推说自己最近买股票亏钱了，没有钱，不要垫付，让找保险公司。作为法官，机动车交通事故案子一般会调解，但调解便有利益让步，调解方案出来往往损害的是之前垫付了医药费方车主利益，便宜了保险公司，我很痛心却无能为力。记住，如果购买了保险，对方损失不大，你是除了鉴定费与诉讼法无需多出一分钱的；\r\n3、作为事故受损方，事故发生后走到诉讼阶段，如果伤残严重，不着急用钱，在法院组织调解时，可以不接受保险公司的调解方案，因为，因为，保险公司至少会在有可能判决赔偿的数目上打折10%以上。但如果本来标的不大，还是建议接受调解吧，早点拿钱，少走程序；\r\n4、在事故发生后，保留好一切票据，包括交通费发票、医药费发票、自己在小药店买药等等一切；\r\n5、众所周知，残疾赔偿金农村与城市相差巨大，所以，如果你是农村户口，只要你租住在城镇，或者在城镇务工，均可以按照城镇标准计算，如果务工地在发达地区，只是回老家发生交通事故，还可以按照务工地城镇标准起诉残疾赔偿金，那又是一大比银子。\r\n三、劳动合同类\r\n1、未签劳动合同：实名反对前面有人所说未签劳动合同可以一直要求双倍工资至劳动者离职。我在评论区给他留言指出错误，居然把我留言都删了，太过分！哦 扯远了，绕回来。没有签劳动合同，请保留好工作证，餐票，评先评优等一切证明你工作的证据，双倍工资从你入职第二个月开始计算，直至满一年，即一共赔你11个月双倍工资，超出一年只是视为与你签订无限期劳动合同，其实这个没什么实际效益；\r\n2、每周未休息2天或上班超过40小时，加班工资：周六、日 双倍，法定节假日比如五一十一等，三倍工资，货真价实；\r\n3、单位无故辞退，经济补偿金，工作几年算几月，计算标准为月平均工资，超6个月算1年，未满6个月算半年；\r\n4、未购买社保：你只能在职期间与公司协商要求其缴纳，否则你去劳动部门告发，劳动部门可以对其罚款。真闹到法院，法院对这一块是不予处理的。\r\n四、婚姻法\r\n手机码字好累 我要不要告诉高富帅或白富美在婚姻关系中如何保护自己的财产和荷包，或者告诉高穷帅或白穷美如何获得更多的夫妻共同财产呢 \r\n关于婚姻法的问题 我很纠结要不要更 也许有敏感的知友从前面的陈述中已经发现，我所写部分都是相对而言倾向于教弱势方保护自己的，所以，虽然我只是一介弱女子，但却也怀有侠客情怀，写答案是想教大家如何保护自己的合法权益。但婚姻法方面，每个案子都不一样，没有办法区分到底谁是过错方。我担心被心术不正的人看到以后利用，转而对付在婚姻关系中的善良一方。\r\n容我再仔细想想吧\r\n作者：大姐姐\r\n来源：知乎',',思想,',41,0,'2016-08-19 12:52:28','2016-08-19 12:52:43',0,NULL,1,'https://www.zhihu.com/question/27486818?utm_campaign=official_account&utm_source=weibo&utm_medium=zhihu&utm_content=question'),(69,1,'抛弃mysql模糊查询，使用sphinx做专业索引',NULL,'','',0,'Sphinx是一个基于SQL的全文检索引擎，可以结合MySQL,PostgreSQL做全文搜索，提供比数据库本身更专业的搜索功能特别为MySQL也设计了一个存储引擎插件，从此抛弃模糊查询吧。\r\n\r\nSphinx 单一索引最大可包含1亿条记录，在1千万条记录情况下的查询速度为0.x秒（毫秒级）。Sphinx创建100万条记录的索引只要 3、4分钟，创建1000万条记录的索引可以在50分钟内完成，而重建一次只包含最新10万条记录的增量索引只需几十秒。\r\n#### 一、安装\r\n环境：centos6.5\r\n```\r\nyum install sphinx -y\r\n```\r\n默认配置路径 /etc/sphinx/ ，在该路径下，有配置文件sphinx.conf，看看我的配置\r\n```\r\n# 数据源，这里配置的是mysql\r\nsource src1\r\n{\r\n	type			= mysql\r\n\r\n	sql_host		= localhost\r\n	sql_user		= root\r\n	sql_pass		=\r\n	sql_db			= beego_blog\r\n	sql_port		= 3306	# optional, default is 3306\r\n\r\n    # 创建索引时候，从数据库查询数据的SQL\r\n	sql_query		= \\\r\n		SELECT id, userid, UNIX_TIMESTAMP(posttime) AS posttime, title, content, tags \\\r\n		FROM tb_post\r\n\r\n	sql_attr_uint		= userid\r\n	sql_attr_timestamp	= posttime\r\n\r\n	sql_query_info		= SELECT * FROM tb_post WHERE id=$id\r\n}\r\n\r\n# 索引1\r\nindex test1\r\n{\r\n    # 指定数据源\r\n	source			= src1\r\n    # 索引文件路径\r\n	path			= /var/lib/sphinx/test1\r\n    # 储文档信息的方式 extern\r\n	docinfo			= extern\r\n	charset_type	= sbcs\r\n}\r\n\r\n# 索引2\r\nindex testrt\r\n{\r\n	type			= rt\r\n	rt_mem_limit	= 32M\r\n\r\n	path			= /var/lib/sphinx/testrt\r\n	charset_type	= utf-8\r\n\r\n	rt_field		= title\r\n	rt_field		= content\r\n	rt_attr_uint	= userid\r\n}\r\n\r\n\r\nindexer\r\n{\r\n	mem_limit		= 32M\r\n}\r\n\r\n\r\nsearchd\r\n{\r\n    listen          = 0.0.0.0:9312 # 索引对外提供服务的地址\r\n	listen			= 9306:mysql41\r\n	log			    = /var/log/sphinx/searchd.log\r\n	query_log		= /var/log/sphinx/query.log\r\n	read_timeout	= 5\r\n	max_children	= 30\r\n	pid_file		= /var/run/sphinx/searchd.pid\r\n	max_matches		= 1000\r\n	seamless_rotate	= 1\r\n	preopen_indexes	= 1\r\n	unlink_old		= 1\r\n	workers			= threads # for RT to work\r\n	binlog_path		= /var/lib/sphinx\r\n}\r\n\r\n\r\n```\r\n生成索引，这里我们用上文配置的索引名称test1来从mysql获取数据。因此，我们先在myslq中，创建表和数据\r\n```\r\nCREATE TABLE `tb_post` (\r\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\r\n  `userid` mediumint(8) unsigned NOT NULL DEFAULT \'0\' COMMENT \'用户id\',\r\n  `title` varchar(100) NOT NULL DEFAULT \'\' COMMENT \'标题\',\r\n  `content` mediumtext NOT NULL COMMENT \'内容\',\r\n  `tags` varchar(100) NOT NULL DEFAULT \'\' COMMENT \'标签\',\r\n  `posttime` datetime NOT NULL DEFAULT \'0000-00-00 00:00:00\' COMMENT \'发布时间\',\r\n  PRIMARY KEY (`id`)\r\n);\r\nINSERT INTO `tb_post` VALUES (\'1\', \'1\', \'epoll边沿触发漏报消息包问题\', \'开发一个即时通讯后台，底层的网络收发使用 epoll + main loop实现网络事件\', \',技术,\', \'2016-08-05 11:50:02\');\r\nINSERT INTO `tb_post` VALUES (\'2\', \'1\', \'epoll 边沿触发和水平触发区别实战讲解\', \'epoll，看结果发现只接入了两条，还有3条没接入。说明高并发时，会出现客户端连接不上的问题。\', \',技术,\', \'2016-08-05 22:03:23\');\r\nINSERT INTO `tb_post` VALUES (\'3\', \'1\', \'快速排序算法\', \'快速排序算法是一个挺经典的算法，值得我们学习\', \',技术,\', \'2016-08-05 23:08:00\');\r\n```\r\n创建索引\r\n```\r\n[root@centos6 data]# indexer test1\r\nSphinx 2.0.8-id64-release (r3831)\r\nCopyright (c) 2001-2012, Andrew Aksyonoff\r\nCopyright (c) 2008-2012, Sphinx Technologies Inc (http://sphinxsearch.com)\r\n\r\nusing config file \'/etc/sphinx/sphinx.conf\'...\r\nindexing index \'test1\'...\r\ncollected 37 docs, 0.8 MB\r\nsorted 0.1 Mhits, 100.0% done\r\ntotal 37 docs, 833156 bytes\r\ntotal 0.082 sec, 10061176 bytes/sec, 446.81 docs/sec\r\ntotal 3 reads, 0.000 sec, 57.7 kb/call avg, 0.0 msec/call avg\r\ntotal 9 writes, 0.000 sec, 40.2 kb/call avg, 0.0 msec/call avg\r\n```\r\n可以看索引了37条文档，我们可以在命令行测试下效果\r\n```\r\n\r\n[root@centos6 libertyblog]# search epoll|more\r\nSphinx 2.0.8-id64-release (r3831)\r\nCopyright (c) 2001-2012, Andrew Aksyonoff\r\nCopyright (c) 2008-2012, Sphinx Technologies Inc (http://sphinxsearch.com)\r\n\r\nusing config file \'/etc/sphinx/sphinx.conf\'...\r\nindex \'test1\': query \'epoll \': returned 2 matches of 2 total in 0.000 sec\r\n\r\ndisplaying matches:\r\n1. document=59, weight=2831, userid=1, posttime=Fri Aug  5 22:03:23 2016\r\n        id=59\r\n        userid=1\r\n        title=epoll ???????????????\r\n        content=开发一个即时通讯后台，底层的网络收发使用 epoll + main loop实现网络事件\r\n......\r\n```\r\n结果匹配到了两条数据，篇幅有限，就不全列出来了。数据 1. document=59, weight=2831 表示该索引文档编号59，权重2831。以上是命令行操作，如果我们要对外提供服务，还需要启动searchd服务进程\r\n```\r\n[root@centos6 data]# service searchd start\r\n正在启动 searchd：Sphinx 2.0.8-id64-release (r3831)\r\nCopyright (c) 2001-2012, Andrew Aksyonoff\r\nCopyright (c) 2008-2012, Sphinx Technologies Inc (http://sphinxsearch.com)\r\n\r\nusing config file \'/etc/sphinx/sphinx.conf\'...\r\nWARNING: compat_sphinxql_magics=1 is deprecated; please update your application and config\r\nlistening on 127.0.0.1:9312\r\nlistening on all interfaces, port=9306\r\nprecaching index \'test1\'\r\nprecaching index \'testrt\'                                   \r\nprecached 2 indexes in 0.002 sec\r\n                                                           [确定]\r\n```\r\n启动成功，绑定了端口9312，我们查看下状态\r\n```\r\n[root@centos6 data]# searchd --status\r\nSphinx 2.0.8-id64-release (r3831)\r\nCopyright (c) 2001-2012, Andrew Aksyonoff\r\nCopyright (c) 2008-2012, Sphinx Technologies Inc (http://sphinxsearch.com)\r\n\r\nusing config file \'/etc/sphinx/sphinx.conf\'...\r\n\r\nsearchd status\r\n--------------\r\nuptime: 252 \r\nconnections: 1 \r\nmaxed_out: 0 \r\ncommand_search: 0 \r\ncommand_excerpt: 0 \r\ncommand_update: 0 \r\ncommand_keywords: 0 \r\ncommand_persist: 0 \r\ncommand_status: 1 \r\ncommand_flushattrs: 0 \r\nagent_connect: 0 \r\nagent_retry: 0 \r\nqueries: 0 \r\ndist_queries: 0 \r\nquery_wall: 0.000 \r\nquery_cpu: OFF \r\ndist_wall: 0.000 \r\ndist_local: 0.000 \r\ndist_wait: 0.000 \r\nquery_reads: OFF \r\nquery_readkb: OFF \r\nquery_readtime: OFF \r\navg_query_wall: 0.000 \r\navg_query_cpu: OFF \r\navg_dist_wall: 0.000 \r\navg_dist_local: 0.000 \r\navg_dist_wait: 0.000 \r\navg_query_reads: OFF \r\navg_query_readkb: OFF \r\navg_query_readtime: OFF \r\n```\r\n现在我们用一个第三方客户端访问该服务(golang语言开发)\r\n```\r\npackage main\r\n\r\nimport (\r\n    \"github.com/yunge/sphinx\"\r\n    \"log\"\r\n)\r\n\r\nfunc main() {\r\n	SphinxClient := sphinx.NewClient().SetServer(\"localhost\", 0).SetConnectTimeout(5000)\r\n	if err := SphinxClient.Error(); err != nil {\r\n		log.Fatal(err)\r\n		return\r\n	}\r\n\r\n	// 查询，第一个参数是我们要查询的关键字，第二个是索引名称test1，第三个是备注\r\n	res, err := SphinxClient.Query(\"epoll\", \"test1\", \"search article!\")\r\n	if err != nil {\r\n		log.Fatal(err)\r\n		return\r\n	}\r\n	var article_ids string\r\n	for _, match := range res.Matches {\r\n		article_ids += fmt.Sprintf(\"%d,\", match.DocId)\r\n	}\r\n\r\n	log.Println(article_ids)\r\n	SphinxClient.Close()\r\n}\r\n```\r\n打印结果，是 { 1 2 } ，这两个id，没有id为3的，说明索引查找是准确的，因为3里面没有epoll这个单词，而1和2里面都有epoll。至此，我们的测试完成，可以把此功能和自己网站的搜索框对接，以前都是用模糊查询的方式，在数据库中 like \'%\' 某某，这样效率其实很低，数据多的时候要等半天，现在用第三方索引来实现，速度快好几个量级。\r\n\r\n如果有新的数据插入，或者更新数据，是需要做 增量索引 的，很简单\r\n```\r\n[root@centos6 data]# indexer --rotate test1\r\nSphinx 2.0.8-id64-release (r3831)\r\nCopyright (c) 2001-2012, Andrew Aksyonoff\r\nCopyright (c) 2008-2012, Sphinx Technologies Inc (http://sphinxsearch.com)\r\n\r\nusing config file \'/etc/sphinx/sphinx.conf\'...\r\nindexing index \'test1\'...\r\ncollected 37 docs, 0.8 MB\r\nsorted 0.1 Mhits, 100.0% done\r\ntotal 37 docs, 833156 bytes\r\ntotal 0.081 sec, 10184036 bytes/sec, 452.26 docs/sec\r\ntotal 3 reads, 0.000 sec, 57.7 kb/call avg, 0.0 msec/call avg\r\ntotal 9 writes, 0.000 sec, 40.2 kb/call avg, 0.1 msec/call avg\r\nrotating indices: successfully sent SIGHUP to searchd (pid=12074).\r\n```\r\n最好把增量索引的操作放到crontab中，定时做增量，以保持索引最新。以下是每天2点做一次增量索引\r\n```\r\n0 2 * * * indexer --rotate test1\r\n```\r\n\r\n****\r\n> 创建于 2015-08-10 杭州，更新于 2016-08-19 杭州\r\n\r\n>该文章在以下平台同步\r\n- >LIBERALMAN:http://api.liberalman.cn:40000/article/\r\n- >CSDN:http://blog.csdn.net/socho/article/details/52251177\r\n- >简书:\r\n\r\n- [ ]  引用',',技术,',56,0,'2016-08-19 16:04:28','2016-08-19 16:42:49',0,NULL,0,''),(70,1,'摘录 2016-08 期',NULL,'','',0,'- 人出生在这个世上绝对不会是孤身一人的。\r\n这个世界上没有什么海贼船的设计图，乘上船的船员们挂上骷髅旗就是海贼船，挂上海鸥旗就是海军船。----《海贼王》\r\n\r\n- 中国一向就少有失败的英雄（项羽），少有韧性的反抗（伍子胥），少有单身鏖战的武人（李陵），少有敢抚哭叛徒的吊客（司马迁）；见胜兆则纷纷聚集，见败兆则纷纷逃亡。战具比我们精利的欧美人，战具未必比我们精利的匈奴蒙古满洲人，都如入无人之境。‘土崩瓦解’这四个字，真是形容得有自知之明。---- 鲁迅\r\n\r\n- 专制政府的出现能给国家带来短暂繁荣，于是人民便在这繁荣当中昏昏睡去，一朝醒来，却发现身陷囹圄。与此相反，自由通常于暴风骤雨中诞生，在社会内部各种力量的碰撞和较量当中艰难成长，只有到了自由成熟之时，我们才能认识到它的好处。---- 托克维尔，《论美国的民主》\r\n\r\n- 为什么成人要让孩子尽快地变得和自己一样？我们对自己的世界真的感到那么幸福和满意吗？儿童并不仅仅是一个初级的、不成熟的、准备前往成人世界的平台。……我们在把孩子从他们对自然的理解能力中引开。因为我们也就阻挡了自己理解自然的能力。---- 林达《像自由一样美丽》 （@喷嚏意图）\r\n\r\n- 不用太羡慕运动排行榜步数比你多的好友——他们可能没走多远，他们只是腿短！\r\n\r\n- 有位朋友说的很到位：“赵家否定文革的意思不是说欠你们贱民一个公道，而是说这个体制经不起再来一次胡闹。人家觉得是赵家人自己发晕差点葬送了江山，从来没有觉得害得你们贱民也很惨过。”\r\n\r\n- 人民日报的文章中心思想是：一个不犯错误的党固然伟大光荣正确，而一个犯了错误之后敢于承认错误纠正错误的党，显然更加伟大光荣正确。综上所述，无论犯不犯错误，党永远伟大光荣正确。这逻辑是相当严密的，从根本上排除了党不伟大不光荣不正确的可能性。\r\n\r\n- 有媒体表示：“性是网络第一生产力，无聊是第二生产力，免费是第三生产力。三力结合，基本上可以解释一切网络热点事件。”所以，美女直播，软色情等的出现，自然而然地抢占了“宅男们”的流量。\r\n\r\n- 田朴珺用的言论比王石的”野蛮人“严重多了。她用”流氓“与”坏蛋“来形容宝能，直接把投资者置为”侵略者“与”敌人“。不仅犯了没有文化的错误，还让人觉得幼稚。因为，但凡有点文化的人都知道，在资本市场上没有好人与坏人，只有成功与失败。\r\n\r\n- 医学院老师如此定义医生的作用：‘’我们所有人的归宿都是火葬场，全都在路上排队，医生的作用就是防止有人插队，时不时的把人从队伍里拎出来往后面排排，当然，有的实在拎不动的也只能随他了！有时候把他拎到后面还得挨顿揍！谩骂、侮辱、殴打医生者都是准备插队的！“      ——神一般的定义啊！\r\n\r\n- 20世纪80年代以后的中国，在经济体制改革与开放的拉动下，社会才一点点地从国家体制中解放出来，近三十年来中国所取得的成就，就在于逐步打破了原来的单位体制，使国民能在不同单位、不同地区之间自由流动，从单位人变成社会人。\r\n\r\n- 我们为了体面生活而挣扎，变成了自己曾经厌恶的某种人....可是不挣扎，又怕自己慢了，怕被别人比下去，就这样怅怅惘惘，蹉跎了岁月，也没觉得真正的畅快安然的活过一回。\r\n\r\n- 在美国，不同的州之间是竞争的。如弗里德曼所说，“政府仍不过是一个手段，一个工具。政府既不是一个给我们带来恩惠与礼物的人，也不是使我们盲目崇拜和为之服役的主人或神灵。”一个国家不仅要有市场经济，同样应该有“市场政治”，上述自由抉择的背后，是一套“市场政治”的法则。活跃于政治市场的竞争不仅体现在不同国家之间的移民，同样体现在一国之民可以按照自己的意愿自由迁移。由于没有户籍和单位的禁忌，西方居民可以通过居住地的自由抉择客观上使地方政府陷入关乎治理能力的竞争之中。\r\n\r\n- “对安逸的欲望扼杀了灵魂的激情,而它还在葬礼上咧嘴大笑。” ——纪伯伦《先知》\r\n\r\n- 如果每个人都理解你，你得普通成什么样子\r\n\r\n- 我给你一颗糖，你很高兴， 当你看到我给别人两颗，你就对我有看法了。 但你不知道他也曾给我两颗糖，而你什么都没给过我。\r\n\r\n- @邓相超：我们的国家，从幼儿园到小学、大学、再到研究生，一直都强调死记硬背为考试，强调看得见摸得着的硬技能，特别是科学和工程几乎为我们每个中国家长、每个老师认同，这些教育手段、教育内容使中国差不多也只能从事制造业。\r\n\r\n- 民粹主义和国家主义是最大的愚昧 ---- 资中筠\r\n走向文明，走向世界，有两个最大的阻力。一个是极端民族主义，我称它国家主义，国族主义。还有一个是民粹主义。现实中存在一种走向法西斯的力量，而且相当不弱。我不知道强到什么程度，可是相当普遍。最容易激发起来的就是民族主义，一说有敌对势力，马上有一大批人反应起来。比如一个卖菜的小贩，天天骂政府损害他的利益，可是一阅兵，一说小日本，架式马上就起来了。这就是民粹主义、民族主义的思想，是走向文明的一个绝大阻碍。出路在哪呢？就是启蒙，enlightment，这就是光，让智慧之光驱散愚昧。目前，愚昧最主要地是指民粹主义和国家主义，它们跟世界潮流格格不入。大概我的目光不够远大，以我所能预见到的，还是很难乐观起来。\r\n\r\n- 人生最悲凉的是明知道在空耗生命，但还是要自觉自愿地听之任之！\r\n\r\n- 凡是你抗拒的，都会持续。因为当你抗拒某事或某情绪时，你会聚焦在那事件或情绪上，这样就赋予了它更多的能量,它就变得更强大了。唯一可做的是，就是带进光来。光出现了，黑暗就消融了。\r\n\r\n- 常与同好争天下，不共傻瓜论短长！\r\n\r\n- 世界上并不是每个人和你一样成长在阳光下\r\n\r\n- 总有一些圣母，在我的评论里主张宽容无良之人，主张我该好好反思，主张错误在我，对我做有罪推定，对别人做责任推脱。以圣人的标准要求别人，以贱人的标准要求自己，在我看来，这样的人，其实就是王八蛋。\r\n\r\n- 在压抑之下，激烈的反抗是一种结果，还有一种结果就是默默的逆反。\r\n\r\n- 鲁迅早就说过：“中国人，轻家国而重乡土，勇于私斗，怯于公战”\r\n\r\n- 人的一切痛苦，本质上都是对自己的无能的愤怒。——王小波\r\n\r\n- 任何职业令人喜欢的程度取决于从业者驾驭局面的程度；任何职业令人不快的程度取决于从业者服从规则的程度。 ——阿兰《幸福散论》\r\n\r\n- 只要你谈论一下社会现象，尤其是负面的社会现象，就有人说：你说这个有什么用？你得拿出解决问题的办法。对此，我只想说，你每天看天气预报也会提出这样的要求吗？会要求气象台拿出解决天冷天热刮风下雨的办法吗？\r\n\r\n- 钱钟书任教清华大学时，因林徽因家的猫经常欺负自家的猫，钱钟书就用竹竿“帮架”。杨绛担心丈夫为猫而得罪人，便引用他自己的话劝他：“打狗要看主人面，那么，打猫要看主妇面了！” 那只猫可是林徽因的猫，不要伤了两家的和气。可钱钟书顾不了什么，照打不误，还说：“理论总是不实践的人制定的。”',',思想,',46,0,'2016-08-23 14:30:21','2016-09-10 14:49:04',0,'',0,''),(71,1,'通过UDF使mysql主动刷新redis缓存',NULL,'','',0,'UDF是mysql的一个拓展接口，UDF（Userdefined function）用户自定义函数。在什么地方使用这个功能呢，试想有如下场景：\r\n\r\n你的网站使用mysql作为最终数据落地的存储引擎，而redis作为缓存以减小查询请求穿透到mysql的数量，可以极大的降低数据库性能瓶颈带来的整个网站对外服务的卡顿、不可用等情况。这种方式的架构，当有查询请求的时候，我们可以在业务逻辑层控制，先从缓存中查询，无命中的情况下，再到数据库中查询，同时缓存到redis中；当有修改请求的时候，我们可以先修改数据库，然后删除或更新缓存。\r\n\r\n以上方式是我们业务量不大，开发简单的，少横向扩展的情况下做的。当开发复杂度随着业务量并发增大，呈现横向扩展和垂直方向上螺旋迭代上升趋势的时候，逻辑复杂度直线上升。还采用在业务逻辑层做缓存控制将变得很复杂，运维上也容易出错。\r\n\r\n这个时候，如果能将缓存逻辑和业务逻辑分离，缓存层对业务逻辑提供服务透明，业务逻辑不用关心缓存逻辑，缓存逻辑也不用随业务变化而改动，互相做自己的事情，这样高内聚低耦合可以极大的增加扩展性和健壮性，也是我们做架构应该努力发展的方向。\r\n\r\n那么具体来说，我的这里要做的事情，其实就是把缓存更新的逻辑，放到mysql中去做。写一个trigger触发器监控insert/update/delete这些修改数据的操作，当有修改操作的时候，调用对应的自定义UDF函数来远程回写redis缓存，而我们在业务逻辑层则只管更新数据就行了，缓存更新的操作都放给以上的缓存层逻辑来完成。\r\n\r\n当然，以上操作也可以反方向来，先写redis，然后由redis同步到mysql去。两种方式各有利弊，看你的具体场景如何选择了，这里不讨论。我们此处的目的是使用mysql的udf函数更新数据到redis中。\r\n\r\n##### 开发环境\r\n操作系统:centos 6.4 server，内核2.6.32-358.18.1.el6.x86_64\r\n\r\n编译器：gcc 4.4.7\r\n\r\n数据库：mysql server 5.1.73\r\n\r\nmysql服务器之前已经安装了，现在我们要安装mysql开发包\r\n\r\nyum install mysql-devel -y\r\n\r\n#### 一、UDF函数入门\r\n首先学习下UDF函数的使用方法。我们自定义一个函数文件，test_add.cpp如下\r\n\r\n```\r\n#include <mysql.h>\r\n\r\nextern \"C\" long long testadd(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error)\r\n{\r\n    int a = *((long long *)args->args[0]);\r\n    int b = *((long long *)args->args[1]);\r\n    return a + b;\r\n}\r\n\r\nextern \"C\" my_bool testadd_init(UDF_INIT *initid, UDF_ARGS *args, char *message)\r\n{\r\n    return 0;\r\n}\r\n```\r\n这是c++代码，编译\r\n```\r\n[root@centos6 ~]# g++ -shared -fPIC -I /usr/include/mysql -o test_add.so test_add.cpp\r\n```\r\n拷贝到mysql插件目录下，要以root身份\r\n```\r\n[root@centos6 ~]# cp test_add.so /usr/lib64/mysql/plugin/\r\n```\r\n如果你不知道插件的路径，执行\r\n```\r\nmysql> show variables like \'%plugin%\';\r\n+---------------+-------------------------+\r\n| Variable_name | Value                   |\r\n+---------------+-------------------------+\r\n| plugin_dir    | /usr/lib64/mysql/plugin |\r\n+---------------+-------------------------+\r\n1 row in set (0.00 sec)\r\n```\r\n登录mysql，创建函数关联\r\n```\r\nmysql> create function testadd returns integer soname \'test_add.so\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n```\r\n至此，UDF就搞定了，接下来测试\r\n```\r\nmysql> select testadd(1,2);\r\n+--------------+\r\n| testadd(1,2) |\r\n+--------------+\r\n|            3 |\r\n+--------------+\r\n1 row in set (0.00 sec)\r\n```\r\n可以看到testadd函数生效了，输出结果为 1 + 2 = 3.\r\n\r\n如果要删除UDF函数\r\n```\r\nmysql> drop function testadd;\r\nQuery OK, 0 rows affected (0.01 sec)\r\n```\r\n然后删除插件目录下的.so文件\r\n```\r\n[root@centos6 ~]# rm -f /usr/lib64/mysql/plugin/test_add.so\r\n```\r\n#### 二、结合redis做缓存更新\r\n##### 1.在DUF中访问redis\r\n更新redis的原理其实和上面示例一样的，只是要在UDF中调用redis的api函数。在此之前，请先下载api源码\r\ngit clone https://github.com/mrpi/redis-cplusplus-client\r\n这是redis官网给出的c++访问redis的客户端api代码，依赖于boost，先安装\r\n```\r\n[root@centos6 ~]# yum install boost boost-devel\r\n```\r\n然后\r\n```\r\n[root@centos6 ~]# cd redis-cplusplus-client\r\n```\r\n当要调用该库的时候，把如下几个文件拷贝过去一起编译就可以了\r\nredisclient.h、anet.h、fmacros.h、anet.c。接下来看我的源码test.cpp\r\n```\r\n#include <stdio.h>\r\n#include <mysql.h>\r\n#include \"redisclient.h\"\r\nusing namespace boost;\r\nusing namespace std;\r\n\r\nstatic redis::client *_client = NULL;\r\n\r\n// 初始化连接\r\nvoid check_connection()\r\n{\r\n    if(NULL == _client){\r\n        const char* c_host = getenv(\"REDIS_HOST\"); // 获取操作系统变量\r\n        string host = \"localhost\";\r\n        if(c_host)\r\n            host = c_host;\r\n        _client = new redis::client(host);\r\n    }\r\n}\r\n\r\n// 调用redis的hset命令\r\nextern \"C\" char *redis_hset(UDF_INIT *initid, UDF_ARGS *args, char *result, unsigned long *length, char *is_null, char *error)\r\n{\r\n    try{\r\n        check_connection();\r\n        if(!(args->args && args->args[0] && args->args[1] && args->args[2])){\r\n            *is_null = 1;\r\n            *length = 8;\r\n            snprintf(result, 8, \"is null\");\r\n            return result;\r\n        }\r\n        if(_client->hset(args->args[0], args->args[1], args->args[2])){\r\n            *length = 2;\r\n            snprintf(result, 2, \"0\");\r\n            return result;\r\n        } else {\r\n            *error = 1;\r\n            *length = 5;\r\n            snprintf(result, 6, \"error\");\r\n            return result;\r\n        }\r\n    } catch (const redis::redis_error & e){\r\n        *length = ((std::string)e).length() + 1;\r\n        snprintf(result, *length, \"%s\", (char*)e.what());\r\n        return result;\r\n    }\r\n}\r\n\r\n/*资源分配*/\r\nextern \"C\" my_bool redis_hset_init(UDF_INIT *initid, UDF_ARGS *args, char *message)\r\n{\r\n    if (3 != args->arg_count  || args->arg_type[0] != STRING_RESULT  || args->arg_type[1] != STRING_RESULT  || args->arg_type[2] != STRING_RESULT){ // hset(key, field, value) 需要三个参数\r\n        strncpy(message, \"please input 3 args and must be string, such as: hset(\'key\', \'feild\', \'value\');\", MYSQL_ERRMSG_SIZE);\r\n        return -1;\r\n    }\r\n    args->arg_type[0] = STRING_RESULT;\r\n    args->arg_type[1] = STRING_RESULT;\r\n    args->arg_type[2] = STRING_RESULT;\r\n\r\n    initid->ptr       = NULL;\r\n    return 0;\r\n}\r\n\r\n/*\r\n// 测试\r\nint main(){\r\n    char is_null;\r\n    char message[128] = {0};\r\n    char result[128] = {0};\r\n    unsigned long length = 0;\r\n    UDF_ARGS args;\r\n    UDF_INIT initid;\r\n    args.arg_count = 3;\r\n    args.args = new char*[3];\r\n    args.args[0] = new char[16];\r\n    args.args[1] = new char[16];\r\n    args.args[2] = new char[16];\r\n    args.arg_type = new Item_result[3];\r\n    strcpy(args.args[0], \"mykey\");\r\n    strcpy(args.args[1], \"myfeild\");\r\n    strcpy(args.args[2], \"myvalue\");\r\n    redis_hset_init(&initid, &args, message);\r\n    redis_hset(&initid, &args, result, &length, &is_null, message);\r\n    printf(\"%s\\n\", result);\r\n    if(args.arg_type)\r\n        delete args.arg_type;\r\n    if(args.args)\r\n        delete args.args;\r\n    return 0;\r\n}\r\n*/\r\n```\r\n请提前启动redis服务器，我是在本机启动的，所以地址就是localhost，端口不写默认就是6379。编译和拷贝\r\n```\r\n[root@centos6 ~]# g++ -shared -fPIC -I /usr/include/mysql -lboost_serialization -o myredis.so anet.c test.cpp\r\n[root@centos6 ~]# rm -f /usr/lib64/mysql/plugin/myredis.so && cp myredis.so /usr/lib64/mysql/plugin/ && chmod 777 /usr/lib64/mysql/plugin/myredis.so\r\n```\r\n登录mysql客户端，执行\r\n```\r\nmysql> DROP FUNCTION IF EXISTS `redis_hset`; create function redis_hset returns string soname \'myredis.so\';\r\nQuery OK, 0 rows affected (0.01 sec)\r\n\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nmysql> select * from mysql.func;\r\n+------------+-----+------------+----------+\r\n| name       | ret | dl         | type     |\r\n+------------+-----+------------+----------+\r\n| redis_hset |   0 | myredis.so | function |\r\n+------------+-----+------------+----------+\r\n```\r\n安装完成，现在测试。在mysql中执行\r\n```\r\nmysql> select redis_hset(\'Jack\', \'id\', \'101\');\r\n+---------------------------------+\r\n| redis_hset(\'User\', \'id\', \'101\') |\r\n+---------------------------------+\r\n| 0                               |\r\n+---------------------------------+\r\n```\r\n返回字符\"0\"，说明调用成功。到redis上看看结果\r\n```\r\n127.0.0.1:6379> hgetall User\r\n1) \"id\"\r\n2) \"101\"\r\n```\r\n数据正确，mysql的DUF和redis通信成功，并且正确的修改数据。\r\n##### 2.用触发器实现动态更新redis缓存\r\n这一步的思路，就是在mysql中创建一个触发器，监听表的insert/update/delete等操作，有数据更新的时候调用上一步的UDF函数刷新信息到redis缓存中去。\r\n\r\n先准备数据库表和触发器\r\n```\r\nCREATE TABLE `tb_user` (\r\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\r\n  `username` varchar(255) CHARACTER SET utf8mb4 DEFAULT NULL,\r\n  PRIMARY KEY (`id`)\r\n);\r\n```\r\n触发器\r\n```\r\ndelimiter $\r\ncreate trigger tg_user\r\nafter insert on tb_user\r\nfor each row \r\nbegin\r\n    set @id = (select redis_hset(CONCAT(\'user_\', new.id), \'id\', CAST(new.id AS CHAR)));\r\n    set @username = (select redis_hset(CONCAT(\'user_\', new.id), \'username\', new.username));\r\nend $\r\n```\r\n这里触发器监控的是insert，当插入新数据的时候，会把用户id和用户名刷新到redis缓存中去。也可以针对update和delete做触发，篇幅有限，就不列出来了。\r\n\r\n测试\r\n```\r\nmysql> insert into test.tb_user(`username`) values(\'Jack\');\r\nQuery OK, 1 row affected (0.01 sec)\r\n\r\nmysql> insert into test.tb_user(`username`) values(\'Lucy\');\r\nQuery OK, 1 row affected (0.01 sec)\r\n```\r\n插入了两条数据，查看redis的反应\r\n```\r\n127.0.0.1:6379> keys user_*\r\n1) \"user_1\"\r\n2) \"user_2\"\r\n\r\n127.0.0.1:6379> hgetall user_1\r\n1) \"id\"\r\n2) \"1\"\r\n3) \"username\"\r\n4) \"Jack\"\r\n\r\n127.0.0.1:6379> hgetall user_2\r\n1) \"id\"\r\n2) \"2\"\r\n3) \"username\"\r\n4) \"Lucy\"\r\n```\r\n可以看到user_1和user_2两条key都插入了，每条key的内容也和我们在mysql中插入的一致。至此，我们的目的，“数据库更新，自动刷新到缓存”就实现了，妥妥的！\r\n#### 总结\r\n以上的思路我已经讲的很清楚了，我只写了一个简单的示例，使用的是redis的hset命令。这里我们找一个现成的同步mysql到redis的工具，很全面。从 http://pan.baidu.com/s/1qW9DHYc 下载mysql_udf_redis.tar.bz2，基本满足常用的redis操作命令。\r\n\r\n****\r\n> 创建于 2016-08-23 杭州，更新于 2016-08-23 杭州\r\n\r\n>该文章在以下平台同步\r\n>- LIBERALMAN:http://api.liberalman.cn:40000/article/71\r\n>- CSDN:http://blog.csdn.net/socho/article/details/52292064\r\n>- 简书:http://www.jianshu.com/p/4381a38403a1\r\n\r\n- [1]  引用 http://blog.csdn.net/luoqiya/article/details/12888553',',技术,',84,0,'2016-08-23 16:15:58','2016-08-23 16:29:42',0,NULL,0,''),(72,1,'喜欢励志心灵鸡汤文？或是智力偏低表现',NULL,'','',0,'　　据国外媒体报道，我们都认识一些这样的人，他们经常在社交媒体上发一些看似深刻，实际上却毫无意义的心灵鸡汤或者名人名言。现在，对那些看不懂这些励志文字的人来说，终于有了为自己辩护的依据。\r\n\r\n　　据英国《每日邮报》报道，加拿大滑铁卢大学的一项新研究发现，那些经常在社交媒体上发布励志鸡汤文的人通常表现出较低的智力及认知能力。心理学者还发现，这些人更容易相信超自然现象和阴谋论，宗教信仰也更加坚定。\r\n\r\n　　在实验中，研究者以“灵性导师”狄巴克·乔布拉（Deepak Chopra）发表于推特上的语句为主要材料，询问参与者对这些语句的评价，包括内容是否深刻，以及是否同意其观点等。研究一共包括4个实验，有845位志愿者参加。\r\n\r\n　　在狄巴克·乔布拉的语句中，研究者还故意加入一些时髦的词语，组成毫无意义，但也可能被认为很深刻的通俗语句，如“大多数人都喜欢某种音乐”。接下来，研究者让参与者进行了一系列认知测试，其中一部分是关于是否认同某些宗教、超自然现象和阴谋论观点。\r\n\r\n　　在发表于《判断与决策》（Judgment and Decision Making）期刊的文章中，滑铁卢大学的认知心理学家戈登·彭尼库克指出，有些人更容易接受一些“伪深刻”的空虚言论，而有些人则能察觉到这些言论的问题所在，他们并不是不加区别地怀疑，而是对不明确和暧昧语句具有洞察能力。\r\n\r\n　　从测试结果可以看出，那些容易接受“伪深刻”言论的人，往往反应能力和认知能力较差，更容易出现本体论的混淆和阴谋论思维，更加坚信宗教和超自然现象，并且更加沉迷于补充和替代医学。\r\n\r\n　　研究者特别提及了狄巴克·乔布拉的言论，此人过往曾因为制造“呜呜响的废话”而遭受批评。他的话甚至还被好几个网站拿来恶搞，他们从他的推特发言中提取词汇，随机生成了许多类似风格的“名言”。（任天）\r\n  ',',思想,',62,0,'2016-08-23 22:09:24','2016-08-25 13:24:27',0,NULL,1,'http://tech.sina.com.cn/d/v/2015-12-08/doc-ifxmhqac0191828.shtml'),(73,1,'汶川地震后，范美忠的这七年',NULL,'','',0,'![裸奔者范美忠](http://photocdn.sohu.com/20150514/mp14909357_1431556724231_2.jpeg)\r\n\r\n###### 裸奔者范美忠\r\n###### 文|《智族GQ》记者何瑫 黄周颖\r\n　　2008年5月12日的汶川大地震，36岁的中学教师范美忠从距离震中15公里的教室中抛下学生夺命而出，却又亲手把自己送进了一场震动全国的舆论风暴。在震后10天的一篇文章中，他说自己不是先人后己勇于牺牲自我的人，哪怕母亲也不会管， \"因为成年人我抱不动，间不容发之际逃出一个是一个。\"\r\n　　铺天盖地的谩骂声接踵而至，集合了懦弱、无耻、缺乏责任心等评判的 \"范跑跑\"一词广为流传，成为他此生难以揭除的标签。\r\n　　然而，这一夹杂着愤怒情绪的刺耳代号，却远不足以呈现出这个千夫所指者的真实面目。在熟悉的人眼中，他是一个令旁人生羡却不敢效仿的精神裸奔者，逃离毫无归属感的故乡，考入最高学府，却又对之满心失望，在此后的漫长岁月里四处游荡。孤独、绝望、愤怒、狂傲、虚无、分裂成为他的人生基调，他的身上，交织着中国社会文化的种种冲突悖论。\r\n　　现实中存在一类世俗意义上的成功者，他们身段灵活柔软，在现实夹缝中游走自如，为实现胸中理想常做出适度妥协。范美忠对之心生佩服，却从不愿效仿。幼年时，他日复一日用拳头击打自家墙壁，这一场景恰是他个人，乃至以他为代表的一类人命运轨迹的映射——个人欲求与坚硬现实持续冲撞，纵然疼痛，也不停歇。\r\n　　震灾过后，那篇有意挑衅大众伦常认知的文章将他与外部世界的格格不入推向顶点。道德审判的狂欢之后，看客纷纷离场，他本人的精神余震却一直持续，至今已是7年。他将自己多年的精神困局形容为一个蛋壳，自己努力挣脱而不得， \"范跑跑\"事件却像是一把锤子，从外部将蛋壳狠狠击破。\r\n　　锤子力道凶猛，砸碎了蛋壳，也砸伤了他自己。汶川地震7年之后，《智族GQ》记者贴身采访范美忠，探寻其漫长艰险的精神重建历程。在此过程中，他抛弃了曾经的精神教父鲁迅，尝试皈依基督教却以失败告终，随后投向了曾经怀疑拒斥的中国传统文化，成为庄子的信徒。从鲁迅到庄子，这一精神源头的颠覆是否如其本人所言业已实现，目前做出判断还为时过早，但其变化过程却摆出一道横亘在旁观者面前的命题：置身于纷繁复杂遍布困扰的世事之中，每一个向往精神自由的个体，究竟该以何种方式面对自己的内心。\r\n#### 布道\r\n　　往返于成渝两地间的火车每天从四川省隆昌县金鹅镇瓜子岩村旁驶过，隆隆的汽笛声让村民们烦躁不安，却又是他们的精神寄托之一：对于这个偏居川南的破旧村落而言，铁路负载着数辈人对繁华富裕的想象，以及改变命运的可能。但村中第一个考入北京大学的孩子在成年之前，却从未获得机会借此打探外面的世界。1980年代中期，这个戴着1000度近视眼镜的瘦弱男孩，为自己制订的首要任务不是应对初中课业，而是日复一日用拳头疯狂击打自家泥土砌成的墙壁。三年过后，他的心愿达成，练出一身紧实肌肉，足以对抗父亲及四个兄长的殴打辱骂。\r\n　　\"青春期那种对父亲的彻底反叛，是我特别成功的一点。后来那么多人骂我，却完全击不垮我，为什么？因为这种经历让我十几岁就完成了人格的独立。\"如今，43岁的中学教师范美忠回忆起儿时与父亲的冲突，将其视为个人性格的源起。家庭气氛的暴戾贫苦令他心生绝望，北大历史系录取通知书的到来被村民们视作光宗耀祖，在他眼中，却获取了一种逃离压制的解脱感。\r\n　　自1992年离开隆昌，二十多年间几经辗转，范美忠如今的落脚地，离故乡不过二百公里。2015年2月的一个清晨，我在成都文殊坊的一家茶馆里见到他。他被围坐在来自全国各地的年轻人中间，与他们进行有关文学、历史、哲学的无主题自由讨论。这是为期一周的公益课程的其中一天，八个小时的讨论，他的回报是三四百元的象征性酬劳。\r\n　　村邻眼中，没有比考入北大这样的学校更加美妙的改变命运的机遇。然而，1997年毕业至今，范美忠从未像这所中国最高学府的大多数毕业生那样，获取超过平均水准的社会地位和物质财富。但他却毫不在意，甚至从未对此产生兴趣。\r\n　　牛仔裤松松垮垮，裤脚早已磨破。黑色羽绒服的下沿露出来了白衬衣的一角，另一角却藏在里面。十几个人中，范美忠是穿着最随意的一个。为了保证秩序，讨论引入了罗伯特议事法则：每人有两分钟时间提问，范美忠则有五分钟时间回答，一旦到时，必须停止，除非下一个人放弃提问。多次超时后，范美忠表达了反对。 \"这套规则是非常好的，但是用于开会，我们是讨论问题，并不完全适用。\"\r\n![裸奔者范美忠](http://photocdn.sohu.com/20150514/mp14909357_1431556724231_3.jpeg)\r\n　　主持人表示，既已如此规定，就要执行下去。他再无异议，却加快了语速，陌生的人名和术语越来越密集地出现。他飞快地转动手中的纸杯，杯口已被捏扁。一脸茫然的面孔越来越多，但不在他的视线范围之内——他的眼神始终投往一个固定的方向，前方并不是某个提问者，而是人群外的一块地板。\r\n　　他非常享受这种言说的快感，至于听众能否接受，不是他关心的问题。范美忠十多年的好友、北京十一学校特级历史教师魏勇这样描述他的讲课风格： \"用叶芝、昆德拉、海德格尔、李泽厚作为下河前的准备活动，安东尼奥尼、伯格曼、基耶斯洛夫斯基也不过是一点儿小风小浪，真正的风浪是突然一下到了诸子百家，一个豪华转身、一个古典巨浪。于是，许多没见过风浪的学生被他打晕。\"\r\n　　正如范美忠曾在不同场合反复表达的那样，他在我面前多次评价自己为 \"中国最好的文科老师\"。中午12点，讨论结束，我们走在去饭馆的路上，聊起了曾被他视为精神教父的鲁迅。 \"北大钱理群对鲁迅的研究根本比不上我。我花了五年做到了中国鲁迅研究第一人。\"\r\n　　然而，即使是他看来最理解他的朋友，也对他的这番自我判断持有保留意见。成都同辉国际学校校长李勇对我说，范美忠更像是一个不由分说的布道家，需要的只是一群听众： \"美忠不是通常意义上的好老师。他更多考虑的是把我想说的尽可能说出去。可是好的老师要照顾受众的心理，他想听什么，他能听懂什么，他需要听什么？美忠是不考虑的。\"\r\n　　类似的评价，范美忠心知肚明，却不为所动。每接一届学生，他首先要做的是 \"在学生目瞪口呆之时对他们进行知识轰炸\"。他也从不掩饰对大部分老师在智力和道德两方面的优越感。他曾在《中国青年报·冰点周刊》公开撰文： \"我对那些要我注意教学方法的劝告不屑一顾：你们这些老师懂什么？连《史记》都没看过也跟我谈历史！你们那点儿可怜的知识和僵化的头脑再有教学方法也没用！\"\r\n　　在他的眼中，大部分老师是充当应试教育的帮凶，向学生们传递无用甚至有害的伪知识。为与他们划清界限，这个自视 \"中国最好的文科老师\"的人，至今没有教师资格证。 \"参加这种考试是对我的一种侮辱。\"\r\n　　这自然令他付出代价。学生抗议、家长举报、校长停课、然后离开，如此周而复始， \"大半个中国倒腾了一圈\"。最短的一次在广州华美外国语学校，仅21天。但回忆起这段经历时，他并不认为自己是他所痛恨的应试教育制度的受害者： \"各种人的反应都在我的预料范围内。每一次离开，主动权都在我自己手上。\"\r\n　　然而，当这种行事风格在特殊的历史节点出现在课堂外的公共空间时，受众的反应却完全超出了他的想象。这令他遭遇了前所未有的猛烈攻击，也让这个自视极高却寂寂无名的中学老师在一夜之间世人皆知。\r\n　　2008年5月12日，四川汶川发生8级地震，范美忠在剧烈震荡中，第一个跑出都江堰市光亚中学教室。10天之后，他在天涯论坛贴出《那一刻地动山摇—— \"5·12\"汶川地震亲历记》： \"我是追求自由和公正的人，却不是先人后己勇于牺牲自我的人！在这种生死抉择的瞬间，只有为了女儿才可能考虑牺牲自我，其他人，哪怕是我母亲，在这种情况下我也不会管。因为成年人我抱不动，间不容发之际逃出一个是一个。\"\r\n　　这番言论迅即引起了无数批评与谩骂。次日，网络写手五岳散人撰文提出 \"范跑跑\"一词，这成为了范美忠此生难以揭除的标签。\r\n　　时任教育部发言人说：我们可以不崇高，但是不能允许无耻。北大历史系党委书记说：北大以有这样的学生为耻，如果开除他，我们很赞成。类似的批评，当时无法计数。 \"如果发生在十几年前，我可能会去自杀。但当时我一丝这种想法都没有。中国十三亿人，哪怕十二亿九千万人说我是错的，只要我认为自己是对的，我就是对的。\"回忆起旧事，他的神情有些不耐烦—— \"我绝不后悔\"、 \"如果事情重来一次，我还会那样做\"，过去7年间，这样的语句他已经重复了无数次。\r\n　　在他眼中，童年一次次用拳头击打墙壁，恰是他此后人生轨迹的映射——个人欲求与坚硬现实持续冲撞，纵然疼痛，也不停歇。正因如此，他人为名利打拼之时，他四处漂泊，寻觅理想的归宿；而当要求开除他甚至杀他全家的大字报贴上光亚学校的大门，他却选择留下，一待就是7年。\r\n　　在他研究鲁迅的一本著作《民间野草》中，他引用里尔克的诗句： \"离开村子的人将长久漂泊，也许，还有许多人会死在途中。\"而算上汶川地震之前的3年，他在光亚学校任教已近10年。他为数不多的朋友们一度觉得，他或许已经不再漂泊，找到了归宿。但他本人的答案是否定的——在我见到他的一周前，光亚学校正式批准了他的辞呈。\r\n　　离开成都后，我飞往三亚，采访在此休假的光亚学校校长卿光亚。谈及范美忠辞职一事，这个1949年后内地第一家私立学校的创始人说： \"地震的事对他刺激非常深，我觉得他现在还是一个病人。他辞职的时候情绪是失控的，根本没有计划。\"\r\n　　范美忠本人的说法与此大相径庭。他评价自己如今 \"达到了前所未有的平和\"、 \"生命走到了一个新的阶段，在极度的黑暗中找到了出路\"。他认为自己摆脱了曾经的精神教父设下的牢笼： \"鲁迅无法解决你的问题，基本让你走向绝望。\"\r\n　　那新的精神资源是什么？一天午饭过后，他提议去一个附近的茶馆喝茶。在一个十字路口等绿灯时，我向他提起了里尔克的那句诗。 \"那你觉得自己依然还在漂泊吗？还是说像他说的那样，已经死在途中？\"\r\n　　他毫不犹豫地回答： \"如果没有转向庄子，我早死了。庄子让我起死回生。\"绿灯亮起，我们快步穿了过去。\r\n#### 漂泊\r\n　　成德高速上车流稀疏，远方弥漫着四川盆地常见的雾气。范美忠的妻子吴文冰坐在后排，不时提醒丈夫开慢一点儿，注意安全。\r\n　　吴文冰之所以坐在后排，是因为她肚里怀着孩子，需要宽敞的空间。按照预产期，他们的第二个孩子还有不到半个月就将降生。因为担心成都的医院过于拥挤，他们驱车前往德阳做最后的产前检查。\r\n　　产检结束后，我们去医院附近的餐馆吃饭。刚一落座，范美忠问服务员： \"青菜有哪几种？\"对方一一列举，他摇了摇头，带着我们离开。他向我解释说： \"文冰爱吃的那种菜这里没有，我们换一家看看。\"妻子怀孕后，他包揽了买菜做饭的任务。 \"她做饭其实不好吃，所以我宁可多做一点儿。\"看到我有些惊讶，他特意补充道。\r\n　　这是范美忠难得一见的，让人嗅到烟火气的时刻。见到他之前，我和大多数人一样，对他的印象就是一个不食人间烟火的斗士，永远在与人争辩宏大命题，柴米油盐这种东西似乎与他无关。\r\n　　这并不符合范美忠对自己的判断。 \"婚姻拯救了我，让我变得柔软。我原来是一个缺乏爱、缺乏归属的人。一个人长期这样，心理是会变形的。买菜、做饭、带孩子，这些形而下的东西迫使我低下头来关注现实世界，这样的生命才可能是通透的。\"\r\n　　他的朋友李勇则张开双臂，用手势向我演示他眼中范美忠的变化： \"在他的生活里，一头是物性，一头是诗性，前者是世俗生活，后者是精神追求，结婚前他无限地靠近后者，但这是非常危险的。妻子的出现，把他往另外一头拽了一点儿。\"\r\n　　幼年时的穷困常令人成年后被追逐财富的欲望所绑架，范美忠却恰恰相反。作为家中六个孩子中最小的一个，儿时与四兄一姐抢食的经历令他对物质的欲求产生厌恶。初二时，有三个月家里没有油，盐巴在口腔留下的咸涩久久挥之不去，这让如今的他对街头的 \"苍蝇馆子\"赞不绝口。与贫苦相比，他眼中对自己未来性格影响更为深重的，乃是爱的缺失。\r\n　　曾经读过四年私塾的范父是村里少有的读书人，还会杀猪、编箩筐、在村里的红白喜事上担任大厨，这使他具备超出村邻的挣钱能力。但自范美忠形成记忆以来，范父对赌博的兴趣盖过了一切。他总习惯性地将杀猪刀磨得锃亮，却只磨不用。早上醒来，范美忠总会看到一把利刃挂在墙上，这令他心生恐惧。\r\n　　勤劳隐忍的范母挑起养家重任，农活最忙时，她夜里两点入睡，4点起床，以至于多年之后，七十多岁的她与九十多岁的母亲坐在一起时，比母亲显得更加苍老。 \"父母的爱是任何东西无法代替的，但我感受不到。母亲不是不爱你，但她必须出去劳动。父亲呢？他一早就去赌钱，天黑才回来，男人对家庭的责任感，你是完全看不到的。\"范美忠说。\r\n　　每年寒暑假，范美忠有两个多月时间可以回到隆昌。但最近几年，他在家乡的时间越来越短。还有一个星期就是春节，他只打算回去两天，初二就离开。 \"在成都其实也很无聊，但是回到那里更难受。那是母亲的家，是你哥的家，不是你的家。你会发现他们面孔很熟悉，但交谈起来非常陌生，无法交流。那种时候你感觉极其孤独，坐立不安。\"\r\n　　这使他在成年后的漫长时间里，成为一个找不到归宿的异乡人。 \"无论走到哪里，我都只是一个过客。\"《过客》是鲁迅《野草》中的一篇，主人公是一个不停向远方行走的老人，他不知道自己的名字， \"从我还能记得的时候，我就是一个人。\"范美忠在文中找到了自己的影子，在一篇对《过客》的解读文章里，他写道： \"行走本身即已成为目的，停止即意味着死亡。\"\r\n　　四处漂泊时，他曾有一年未和家人联系过。有一天，他突然接到家乡的电话，才知道父母曾经以为他已经自杀了。原因是搜到他很久之前发在网上的一篇文章：《自杀离我有多远》。\r\n　　他戏称自己有 \"处女书情结\"，同一本书会反复买好几次，原因是 \"不想让上一次做的批注框束新的思考\"。而这件事的另一面则是，每去一个新学校，他会把大多数书送给同事，只随身携带少量原典。到光亚学校前，他从未买过书柜，一大堆书就随意散落在房间里。 \"因为我每次搬家都清楚，这就是一个临时的落脚地，睡觉的地方，不是家。买书柜怎么处理？难道背着到处走？\"\r\n　　即使已经在光亚执教了10年，这种漂泊感依旧困扰着他。 \"我内心有非常痛苦的一对矛盾。一方面你渴望漂泊，因为你工作过的每一个地方，都让你失望，然后你就总会觉得有一个遥远的地方，神秘，未知，充满着可能性，就像当年的新教徒，漂洋过海，到美洲寻找新大陆的感觉。但另一方面，你又极其渴望有一个地方，让你觉得稳定、熟悉，心里踏实，有安全感。这是非常矛盾的感受。\"\r\n　　到光亚的前两年，为了抵御独居带来的孤独感，每天上完课后，他会来到学校附近的一个茶馆读书，点一杯10块钱的竹叶青，从下午两三点钟，一直坐到晚上打烊。为了找到 \"稳定、熟悉\"的感觉，他每次都坐在同一个座位上。第一次去时，老板养的狗刚生了一窝小狗。每次去喝茶，他都要逗小狗玩儿，日复一日，一窝小狗只剩下一只，他却依旧每天坐在那里。除了老板，小狗只听他的指挥。\r\n　　每到一所新的学校，他都会给学生们放映他最喜欢的电影，《死亡诗社》。那个孤独却饱含激情，鼓励学生自由思考的 \"船长\"在曾经的他眼中，正是自己的化身。但多年过后他说： \"船长给人的感觉，是温暖的，充满善意的。可我在黑暗阴冷的深渊里待了太久。\"\r\n　　促使他这样思考的是他的学生。汶川地震后，他对大多数批评意见予以猛烈的反击，但当光亚学校的几个学生表达对他的失望时，他开始反思：我是不是真的太过冷酷了？\r\n　　答案是肯定的。他用一连串的形容词来形容自己当时的状态： \"孤独、虚无、黑暗\"，但又无能为力。 \"我也想多给别人一些爱，但是做不到。我从小没有感受过被爱的感觉，你自己都没得到过的东西，怎么给得了别人呢？\"\r\n#### 裸奔\r\n　　名为 \"第一线批判性思维专题研修班\"的培训进行到第三天，一位听课的企业家请几位授课老师吃晚饭，范美忠也在其中。企业家来自新疆，饭桌上的话题便从新疆问题开始，自然地延伸到了更广的时局领域，时不时还会插进来几个荤段子——性和政治，男人们的饭局主题总是如此。\r\n　　范美忠却几乎从不发言。他后来对我解释说，他对当下的时事并不关心。直到服务员端上了一盘秋葵，面无表情的他却一下子兴奋起来： \"山中习静观朝槿，松下清斋折露葵。王维的这首诗就是秋葵名字的来历。\"原本热闹的包厢突然沉默了几秒，众人纷纷掩饰尴尬的表情，夸赞他有学问——在一个荤段子横飞的饭局上突然冒出两句唐诗，你可以想象那是怎样的情景。\r\n　　另一位老师则成为了饭局的主角。他牢牢主导着话题的走向，偶尔开几句其他人的玩笑，实则是夸赞对方，语言风趣而不失分寸。他叫魏勇，北京十一学校的历史特级教师，范美忠最好的朋友之一。2003年，范美忠执教两个半月后被杭州外国语学校驱逐，在天涯社区发表帖子批判杭外校长。次日，魏勇发出《坚决反对范美忠的个人英雄主义》，两人由此不打不相识。互动几句后，他们发现对方竟是隆昌老乡，魏毕业于隆昌一中，范则是二中。\r\n　　单从饭局上的表现来看，他们像是两类完全不同的人：前者一身书生气，显出几分迂腐，后者则身段柔软，深谙处世之道。而二者的教师生涯也似乎是两条相反的轨迹：前者毕业于最高学府，一路颠簸，驻足于一所西部县级市的私立中学，后者师专毕业，从家乡的一所小学起步，一步步成为京城名校的王牌教师。\r\n　　另一天中午，我和范美忠、魏勇一起吃午饭。聊着聊着，范美忠情绪有些激动： \"我不怕别人骂我，你可以把我刚才说的写出去！\"说到这里，他的手机响了，出去接听大概五分钟后，他回来说自己要赶去参加一个朋友的婚礼。西装革履的魏勇用手指着他的衣服调侃道： \"你穿得这么随便，就别去砸场子了吧？\"范美忠不好意思地笑了笑，还是急匆匆去了。\r\n　　就是这样两个状况迥异的人，却保持了十几年的友情，至今联系密切。双方都认为对方对求知本身充满热情，并且具备与自己对话的水准。他们共同的朋友，德阳外国语学校语文老师丰继奎向我这样分析二者的异同： \"魏勇既有俗世的油滑，又同时怀有某种理想主义。相比之下，美忠是一个拙于谋生的人。他身边的很多人，打着理想主义的旗号，但在现实中其实都捕获了很多猎物。而美忠呢，一点儿猎物都没打到。\"\r\n　　对于性格造成的命运差异，范美忠不回避。 \"魏勇是一个有弹性的人，能够适当扭曲一下自己，在缝隙中游走前进，既让自己活得更好，同时能够实现理想。他这个能力是很强的，我很佩服。这种扭曲自己的能力，我几乎没有。\"\r\n　　在2012年一篇题为《启蒙者魏勇》的文章里，他用看似更为刻薄的语句评价这位挚友： \"他在理想和现实、批判思考与体制限制之间周旋的能力实在是太强了……魏老师的这种内心分裂能力和世俗智慧才是我最佩服的。\"\r\n　　当同样的问题抛给魏勇时，他将范美忠定义为虽不能至却心向往之的 \"裸奔者\"： \"为什么许多人喜欢范美忠？因为他有侵略性；为什么许多人反感范美忠？因为他有侵略性……他的侵略性源于思想裸奔的举动，比基尼让伊斯兰长袍感觉到侵略性，裸奔则让比基尼感受到侵略性。所以裸奔者范美忠让一切比基尼思想者自卑羡慕，进而产生一起裸奔的愿望——当然，仅仅是愿望。\"\r\n![裸奔者范美忠](http://photocdn.sohu.com/20150514/mp14909357_1431556724231_4.jpeg)\r\n　　童年的回忆毫无愉悦可言，尽管如此，范美忠觉得父母的一个共同点给他留下了愿意接受的烙印：真实。由于家事繁重，担任集体公社会计的范母曾一度辞职，几天后，邻居们纷纷上门请她回去，因为只有她能秉公办事。而范父也是从不看别人脸色行事的人。 \"我爸就是有一种什么呢，又臭又硬的感觉。不管是官是富，我没有听他说过一句吹捧别人的话。\"\r\n　　一件事如果让他感到厌恶，他必定反对。他的姐姐范美琼回忆说，父亲有时酒后会殴打母亲，家里无人敢发出声音，范美忠却会站起身来和父亲理论。\r\n　　这样的习惯被他带出了故乡。1992年，北大新生要在石家庄接受一整年军训，这被他视为 \"一生中最痛苦的一年\"。他每天熄灯后将头蒙在被子里偷听《美国之音》，直到随身听被没收。 \"这东西我军训前没听过，军训后也再没听过，但是当时禁止我们听，那我就偏要天天听。\"\r\n　　一年后的北大初体验，令他感到崩溃。他发现自己当时人文基础之薄弱，不但无法与大城市考来的同学相比， \"甚至不及校门口卖盗版光盘的文艺小贩\"。只是读了几本历史研究著作，他便觉得，自己过去12年阅读的课本，乃是满纸谎言，从小建立的世界观顷刻崩塌。一番恶补后，他又有了新的认识，觉得北大教授们多是寻章摘句的考据家，全无知识分子的情怀与格局。他表达失望的方式是放弃考试，在宿舍闭门自修，每天与室友辩论，且绝不认输。四年下来，成绩稳居末位，这并未让他失去批评教授们的底气：毕业后，他写出一篇流传甚广的《评北大历史系诸君》，将老师们骂了个遍。\r\n　　这篇在今天看来过于愤懑苛刻的文章，夹带着他当时对个人命运的不满：成绩不佳，又无其他技能，找工作四处碰壁。他觉得一门心思读了四年书，其实是把自己推向了极尴尬的境地：20岁时才从零开始补课，基础之薄弱，注定成为不了大家。而若是投身于现实，他天天琢磨的东西，又离社会太远。\r\n　　某一天，他突然觉得自己如此痛苦，全是书本的错。一气之下，把四年来买的一千多本书全卖了。\r\n　　冷静之后，他决定做一名老师。 \"自己成不了大家，但可以培养未来的大家。\"他回到四川，进入自贡蜀光中学。校长看中他的最大原因是，一个考进北大的人，一定能传授给学生们其他老师不具备的考试技巧。\r\n　　这个推测是错误的。范美忠不希望学生们重演他当年进入大学后世界观崩塌的一幕， \"我上课的基调就是猛烈批判教材\"。不到一个月，党委书记嘴唇发抖地质问他：你觉得学生考试的时候，该写你讲的，还是教材上印的？\r\n　　冲突不止于此。他的第一堂课不到20分钟就讲完，然后回办公室喝茶，因为觉得内容很简单，无须多言。他在公开场合对校长说高三老师都是在摧残学生，不顾同事们尴尬的表情。事实上，他并不把他们视为 \"同事\"，而是 \"当我的学生资格都不够的蠢材\"。\r\n　　三年后，他不辞而别。类似的故事随后在不同学校反复上演。在广州华美外国语学校，他21天即被辞退，导火索是在课堂上对比蒋经国和邓小平。2005年，朋友丰继奎邀请他做关于鲁迅的演讲，台下坐着德阳几所中学的五六十位老师，他张口就是 \"我觉得中国的文科老师多数都是白痴\"。没过几分钟，人已走了大半。\r\n　　\"他就是比较任性，谁都不管，自己想怎么样就怎么样。\"绍兴稽山中学语文老师蔡朝阳与范美忠在新浪读书沙龙相识，一度共同担任论坛版主。他用10个字形容范美忠： \"执着如怨鬼，纠缠似毒蛇。\"2002年5月，这两位网友在绍兴的一处出租屋首次见面，接头暗号是一本林贤治的鲁迅研究著作《记忆》。范美忠毫无初次碰面的拘谨，聊了三天三夜。 \"你根本没机会跟他说，我不知道，我听不懂。他就是不停讲不停讲，你带个耳朵听就是了。\"\r\n　　与范美忠交谈的几天里，我充分体验到了蔡朝阳的感受。他极度看重言说的连贯性，对交谈环境也十分在意。和他去德阳的那天，我找了两家茶馆，都被否决，打车找了大半个小时后，他仍不满意，直到打电话咨询一个当地的朋友才选定地方。 \"我这个人对吃饭穿衣一类的事情不是很注意，但是聊天的地方，一定要感觉舒服，才能进入交流的状态。\"\r\n　　因对应试教育体系深感绝望， \"不愿成为其帮凶\"，在他的教师生涯中，还曾短暂穿插过一段媒体从业经历。在《经济时报》，一篇近万字的文章被删去三分之二， \"感觉就像挥刀自宫\"，在《南方体育》， \"我忍受不了新闻娱乐化\"，一个月就主动走人。他只得回到自己熟悉的教育领域，在成都的《教师之友》杂志担任编辑。\r\n　　这段经历仍然是不愉快的。时任主编李玉龙回忆起一个细节：和一个教育专家讨论问题时，范美忠觉得对方姿态高傲却见识浅陋，骂他 \"傻逼\"。李玉龙命令范美忠道歉，他强忍脾气照办，但最后还是忍不住来了一句： \"虽然跟你道歉了，但我还是觉得你是一个傻逼。\"\r\n　　2005年下半年，《教师之友》团队因为一些复杂的原因被迫解散，在尚未清理完毕的编辑部办公室里，他用一台旧电脑连写了一个月文章，名为解析鲁迅《野草》，实为复盘己命： \"鲁迅自身对社会抱有过于完美的理想主义态度……他仍然缺乏打持久战的心理准备。鲁迅的启蒙未尝没有效果，但是因自身心态过于急切，总希望更快地见到更好的效果，故反而产生失败和受挫感。\"\r\n　　他觉得自己几乎已经到了无路可走的境地。 \"偌大的中国，竟无一处自由表达的空间。\"就在此时，在朋友的牵线下，他在成都的一间茶馆里，收到卿光亚的邀约，担任IB项目的中方老师。\r\n　　IB项目全称为国际预科证书课程，学生获得证书，就可取得进入大多数国家大学学习的资格。没有指定教材，没有教学大纲，甚至没有固定的考试形式，都由任课教师自行掌握。该项目的学生不参加国内高考，这意味着老师也无应试压力。这些都令范美忠兴奋不已，觉得简直是为自己量身定制。\r\n　　在光亚，他感受到了前所未有的授课自由。为了表达对他授课方式的充分尊重，卿光亚甚至从未听过他讲课。但好景不长，他不再忍受外部空间的逼仄，内心的痛苦，却在这种宽松的氛围中无节制地蔓延开来。\r\n　　他觉得找不到哪怕一个能与自己进行有质量交流的人，无论是学生还是老师。多次抱怨学生 \"质量普遍太差\"后，卿光亚甚至为他特意修改了选课制度，由学生选课改为双向选择，不喜欢的学生，他可以不要。\r\n　　包括魏勇在内的朋友们，经常接到他抱怨的电话。 \"他经常说，学生差得不得了。他的兴趣其实不在教育本身上面，而是通过讲课这种形式去探讨高精尖的问题。他看到学生没兴趣听课，他自己也没兴趣讲了，好吧，那你们就自己看书吧。这是没有道理的，基础教育的目的并不是培养大师、文豪，而是发掘孩子身上的可能性。如果我在他的位置，我不会去挑拣学生。\"\r\n　　范美忠接受这样的批评，但不愿做出改变。教育对他而言只是走出精神困境的手段，不是最终目的。目力所及范围内，很难找到一个比光亚更宽松的环境，但精神之困却还在延续，这令他内心的绝望感达到了峰值。坐在都江堰堤坝旁那个固定的茶馆座位上，三十多年来的种种痛苦矛盾，累积到了即将爆发的时刻。\r\n#### 重建\r\n　　范美忠偶尔会参加中学同学组织的聚会。多年不见面的同学，见面后总会问他，你原来那么强壮，现在怎么瘦了这么多。\r\n　　在我面前，他突然攥紧了拳头。 \"因为那时候天天在墙上狂打，本来很平整的一面墙，打得坑洼不平。\"拳头越练越硬，后来已经察觉不到痛感，他便不再满足于在家中操练，而是成天提着一根棍子到处走，等着别人与他干架。\r\n　　类似的行为模式延续到了成年后，只是换了一种形式。现实生活中找不到可以对话的人，他就转向虚拟世界。他不用网名，始终实名发帖。和现实中风格类似，他发帖火药味十足，回复极快，别人还没来得及回复一条，他已洋洋洒洒又发了七八条。\r\n　　这种风格自然会激怒别人，针锋相对的反驳文章屡屡出现。这反倒让他结识了不少朋友，魏勇、李勇、蔡朝阳皆是如此。由于讨论话题多集中于学术领域，引发的波澜始终限于小圈子里，直到2008年5月22日发在天涯社区的那篇《那一刻地动山摇》。\r\n　　7年过后，如今的他承认，当时的文风过于极端，语气比平时更加挑衅，但他强调，这是有意为之的结果，至今不后悔。 \"矫枉必须过正\"。\r\n　　为了躲避盛传的大余震，随后几天，他没有上网。直到三天后一个记者的电话，才让他意识到文章的影响。他问记者：我并不是一个受人关注的人，你采访我干什么？记者说：你自己上网看看吧。\r\n　　\"我蒙住了，不知所措。不是害怕，是压根儿没想到会扩散到这种程度。\"直到风波渐渐平息之后，他才回过神来：提着棍子和别人在小巷里打斗，或许没什么。但若是在人山人海的广场上挥起棍子，结果就不是自己能预料的了。\r\n　　记者的电话如潮水般涌来。他一概拒绝，希望事情渐渐平息。但发现一些曾对他予以极高评价的人也称他为 \"人渣\"后，他推翻了自己。 \"我怎么能以这样的形象定格在历史上呢？我还想用我的声音影响这个社会，如果现在不出来扭转这个形象，那以后说话还有谁听呢？\"\r\n　　在他自己的观察中，凤凰卫视《一虎一席谈》，成为了扭转形象的关键节点。一位辩论嘉宾请求主持人让他提前离场，在其看来，现场近乎疯狂的谩骂声，已经超越了承受极限。但范美忠表现平静，用微笑回应嘉宾的请求： \"放心，我足够坚强。\"\r\n　　节目播出后，大量支持他的声音出现，舆论由此前的一边倒批评变得多元。无论褒贬，都已让他感到麻木，他更敏感的是，媒体约访时，不再将注意力局限于那篇文章，而表现出对他过往经历的强烈兴趣。\r\n　　央视、新华社、《南方周末》、《朝日新闻》、BBC……媒体规格之高，问题之细致，令他意外。接受一家杂志采访时，他忍不住问记者：难道是中宣部下了文件要求你们报道我？回答让他哭笑不得： \"竞争媒体都在做你的稿子，我们不做，就是漏题。\"\r\n　　一拨接一拨的采访，持续了大约三个月。 \"当时我突然就想：我为什么不借此机会传播我的观念呢？平时写文章发网上没什么人看，现在到处都采访你，那你就借采访把观念说出来噻！虽然他们肯定会删，但是总能出来一些的。\"\r\n　　对于邀约，他也并非照单全收。北京一家培训学校请他去讲座，他本已接受，但在临行前，得知对方临时将主题改为了 \"如何考上北大\"，他在电话里大骂对方。 \"我当时非常生气。我这样一个反对高考、追求教育理想的人，你让我讲这个？\"\r\n　　一些心态乐观的朋友，觉得他是因祸得福。丰继奎曾对他说，这件事让我觉得你才是真正北大出身的人，你通过让自己下地狱的方式，上了从教以来最成功的一堂课。\r\n　　但很快，情势急转直下。6月初，他接到通知，光亚学校接到市教育局转教育部指令，要求吊销他的教师资格证。这是一个乌龙事件，因为他从未获得该证，吊销无从谈起。但经媒体报道，他被光亚解聘的消息很快传遍网络。\r\n　　危机时刻，曾经的电视剧导演卿光亚巧妙处理了此事。他一边向前来求证的媒体确认解聘的消息，一边安抚声称要起诉教育部的范美忠： \"你先回家休息，暑假结束就回来。奥运会一开，大家什么都忘了。\"为了让他安心调整状态，卿光亚后来甚至将他暑假期间的薪水装在信封里，开车送到他成都的家中。\r\n　　正如卿光亚所料，一场道德审判的狂欢过后，看客纷纷离场，只留下千夫所指者默默舔舐伤口。谈起这段经历时，范美忠拿过我的笔记本，在上面画了一个圆圈。 \"这是一个蛋壳。我以前一直努力破壳而出不得，\"说着，他又在圆圈顶端画了一个箭头， \"直到2008年，那件事像一个锤子，从外面把蛋壳敲破了。\"\r\n　　锤子的力量太过猛烈，砸碎了蛋壳，却也砸伤了他。 \"我以前一直觉得，我已经把人性看得过于阴暗、丑陋和虚伪，但通过这件事，我觉得自己以前对人性的估计还是过高了。\"\r\n　　越是这样觉得，他越是想要摆脱曾经的精神教父鲁迅。他觉得自己对人性之恶的洞察已经达到了和鲁迅相当的水准，但这又如何？ \"鲁迅只提出问题，却从来不给出答案。\"\r\n　　决定离鲁迅而去的这一年，范美忠37岁。他在《荣格自传》中看到一套神秘理论，称37岁是一个人找到自我，精神发展走向真正成熟的节点。他将信将疑，阅读了更多材料，发现似乎确有道理——37岁这年，鲁迅发表《狂人日记》，黑格尔写就《精神现象学》，海德格尔完成《存在与时间》。与他们相比，37岁的范美忠，却要彻底重建自己的精神体系。他形容当时的自己在沼泽地中越陷越深。 \"我拼命想抓住一个东西把自己拉上来，但扑腾半天，却不知道该抓什么。\"\r\n　　最难熬的时候，他通过打篮球透支体能来释放压力。李勇成为了他的球伴，几个月间，两人把成都市内所有小学的球场打了个遍。\r\n　　时至今日，自认为已经上岸的他反复强调妻子的帮助。经朋友介绍，他们2006年初在网上认识，7个月后走进婚姻。为此，吴文冰放弃了自己在北京的工作，回到家乡。在京时，她曾借从事儿童出版的机会，混迹于北大的知识圈子。 \"北大的很多学者、博士，比美忠更帅，性格也更柔和。但是和他们聊天感觉很失望，根本没什么力量。美忠那种真、纯的力量感，非常有魅力，让我眼前一亮。\"\r\n　　\"如果当时没有遇到我，他现在很可能已经走向崩溃。\"范美忠认同妻子的这个判断，觉得对方带给了他一直所期盼的归属感。 \"我以前一直很害怕有了婚姻和孩子，就会失去自由。但婚后看法很快就改变了，它其实让你获取更大的自由，从那种漂泊的、没有归属感的困境中解脱出来。\"\r\n　　他们在一起最爱做的事是，在书房里各捧一本书，读到触动之处就念给对方，交换各自的体会。汶川地震之后，在吴文冰的引导之下，亟须心理重建的范美忠每日诵读《圣经》，尝试和妻子一样，成为一名基督徒。\r\n　　他一度觉得，基督教像是一架直升机，将会把自己从沼泽中拉起。但这番尝试最终以失败收场。 \"基督教讲求无条件的宽恕。对于当时的我来说，终究还是很难做到。\"\r\n#### 出走\r\n　　2015年1月31日的傍晚，范美忠在微信朋友圈公布辞职一事： \"终于辞职离开光亚学校了。10年，这是我做得最长的一个工作了。稍事休息，接下来要做三件事：迎接新生命的诞生；准备华德福高中的历史课；继续写《庄子解读》。\"\r\n　　5分钟后，一位朋友留言： \"嗯，终于摆脱了卿光亚的魔爪，祝贺！\"\r\n　　他马上回复： \"我是很感谢卿校长的，他给了我很多帮助和照顾。只是一个工作做久了，确实感到疲惫和厌倦。\"\r\n　　看似平淡的回答背后，暗流汹涌。\r\n　　2011年，他觉得自己对学生理解能力的忍受达到了极限，试图通过开设新课程的新鲜感来减轻自己的痛苦。在西方思想长河中漂流多年后，他将目光重新投向中国传统，具体对象是《庄子》。这是一个带有偶然性的选择： \"一般的作品我看不上眼，要教就教最好的。唐诗宋词好，但是太熟悉了，厌倦了。那就只有先秦经典了，《论语》讲了一遍，不喜欢。那试试《庄子》吧，其实我当时不懂，大学在床头放了四年，就是读不懂。\"\r\n　　头两年的讲授过程， \"现在可以负责任地说讲得是不好的\"。 \"当时我一直是在批判《庄子》，不讲逻辑，逃避现实。其实根本没读懂人家意思，还瞎批。\"\r\n　　他觉得自己随后突然找到了门径。 \"第三年才入门，第四年水平就已经非常高。可以说能够代表当代研究《庄子》的最高水平。\"\r\n　　如今，他的自我定位不只是《庄子》的研究者，而是皈依者。这是人至中年的一场精神出走： \"曾经我对中国文化是完全拒斥的，但现在我觉得它绝非我以前想象的那样。鲁迅那代人对中国文化有很多成见，其实他们并不太懂。《庄子》这种原典，才真正涉及中国人精神的核心问题。\"\r\n　　\"那你现在对鲁迅什么态度？\"\r\n　　\"没有任何兴趣了。鲁迅全集还是要留着，其他研究鲁迅的书全扔了，除了我自己写的。\"\r\n　　他觉得 \"庄子把我对绝对真理的执着和理性逻辑的自由都打破了，这让我彻底自由\"， \"获得了前所未有的平和\"。一个例证是，2008年的风波过后，他和妻子曾经把批评自己的言论全部汇集在一个文档里，现在打开这个文件，他内心不会产生任何波动。\r\n![裸奔者范美忠](http://photocdn.sohu.com/20150514/mp14909357_1431556724231_5.jpeg)\r\n　　早年间在课堂上大谈政治，向学生 \"放毒\"的场景，如今鲜有出现。早前，他曾参加成都的一些知识分子聚会，在一场读书会中，大家围坐成一圈，谈起了反腐话题，挨个表达愤怒。范美忠感觉尴尬，差点儿中途离开。后来，他退出了这个组织。 \"别人都很愤怒，我一个人无动于衷，也不是很好。可是，总不能伪装愤怒吧？\"\r\n　　但一如过往，并不是谁都能认同他的自我判断。卿光亚眼中范美忠这几年的变化，就与他本人的讲述相去甚远。他在我面前表示出对范美忠未来生活的巨大担忧，例子之一，就是他不久前辞职的经过。\r\n　　对于收到范美忠的辞呈，卿光亚早有心理准备。 \"每次地震周年的时候，总有媒体问他辞不辞职，为什么不辞职？不停地给他心理暗示，结果搞得他居然把辞职当成了一个提要求的法宝，每隔一段就来说一下。\"\r\n　　为了让范美忠留下，卿光亚屡次做出妥协。除了专门为他修改选课制度外，还把他的课程都安排在早上11点。 \"他说他起得晚。其实是没有理的，按照学校规定，早上8点准时上班，不管有没有课。他也不坐班。有一次他睡过头没来，我还去替他上课。\"为了让他安心任教，卿光亚说自己还对他做出了一些暗中的保护。每年春天，都江堰市教育局都会派人来校询问范美忠的状况，卿光亚总会想办法错开范美忠讲课的时间，避免双方直接接触。\r\n　　\"狼来了\"的故事上演了七年，终于成真。范美忠与成都华德福学校达成约定，将于2015年秋季学期起在该校讲授高中历史，他的妻子目前正是在此任教。他并不觉得华德福是比光亚更理想的平台，离开的原因只是厌倦了目前的状态。 \"我对中国的学校，已经不再抱有期待。一个地方待久了，即使它很好，我也会选择离开，因为它是旧的。\"\r\n　　按照他与华德福的约定，他本应在光亚执教到2015年夏天，但实际离开的时间却提前了半年。突然提前辞职的导火索，是一个看似琐碎的事件。\r\n　　他错过了一堂期末考试的监考，高中分部校长为此开出罚单，要扣他三天工资。他当着校长的面将罚单撕碎，并向卿光亚抗议此事。 \"我当然是拒绝他。这种事情我不能通融。\"卿光亚回忆说。而范美忠的反应则是，辞职。\r\n　　卿光亚觉得，汶川地震让很多人受到了严重的心理创伤，范美忠是受伤最深的人之一。 \"他比以前更敏感，更反叛。2008年之前，高中部是个外国女校长，要求老师着正装上课。他穿牛仔裤，校长要处罚他，他就跑出去买了一套正装，回来跟学生说，看到没有？这就叫规则，就叫纪律。可现在呢？\"\r\n　　无论卿光亚如何一再表达惋惜，这对合作十年的搭档终究分道扬镳。提前辞职意味着，未来半年内，范美忠将没有固定收入，可第二个孩子的降生，必然意味着更多的经济支出。但和过去一样，仍然无法在他身上感受到关于金钱的忧虑。一天傍晚，我和他一同乘坐公交，路过一栋闹市区路口的高楼时，他告诉我大楼的主人是一位北大哲学系1987届的师兄。 \"钱挣多少算多呢？很多时候只是个数字。每年成都北大校友会聚会时，这个师兄都是捐钱最多的，但那些钱换算一下，也不过是这栋大楼的几平米罢。\"\r\n　　他习惯性地将话题拉回精神层面。 \"我读懂《庄子》的同时，也完全解决了自己的精神问题。心灵得到自由，生命得到安顿。他让我的生命走到了一个新的阶段，思想获得了大突破。\"\r\n　　七年之间，从鲁迅到庄子。这种颠覆性的变化，真的已经完成了吗？他的朋友冉云飞告诉我，他强烈怀疑。 \"他一段时间内喜欢什么，他就极力推崇什么。这是他的大问题。这是多年累积的知识结构的缺陷造成的，很难解决。\"\r\n　　实际上，范美忠如今仍然在被一些问题所困扰，尽管在旁人看来几乎称不上是问题。几年前，朋友送了他一辆二手桑塔纳，也将烦恼送给了他。那天傍晚等公交车的时候，他说自己每天都在为出行方式感到纠结，作为一个环保主义者，他觉得开车与否将自己置于了一个两难的境地。\r\n　　他最好的朋友魏勇觉得，判断他是否真正完成了精神的蜕变，还为时尚早，也并不重要。 \"我经常想，也许在我们同情范美忠的时候，其实他正双倍地同情我们。我们很多人都是假猎手，永恒地瞄着目标却永远不肯扣动扳机，而他想开枪就开了，管它准不准。开枪常失准头的猎手还是猎手，可永远不开枪的猎手还是猎手吗？不如说是猎物。\"\r\n　　（本文原载于《智族GQ》杂志，原标题为：裸奔者范美忠，是微信号 GQZHIZU 原创文章）',',思想,',70,0,'2016-09-02 11:22:55','2016-09-07 21:18:21',0,'http://photocdn.sohu.com/20150514/mp14909357_1431556724231_2.jpeg',1,'http://learning.sohu.com/20150514/n413008832.shtml'),(74,1,'一名前教师追问：徐玉玉之死，我们足够心疼吗',NULL,'','',0,'　　作者：单士兵   来源：理论头条v\r\n　　前几天，18岁的农村女孩徐玉玉死了。徐玉玉刚被南京邮电大学录取，却中了诈骗电话的招，学费被骗光，焦虑痛苦之下，心理崩溃，突然昏厥，继而身亡。\r\n　　这样的悲惨，也激起人们痛骂诈骗分子心狠恶毒，痛斥通信运营商无良失职，批评公共部门援助救济缺失，指摘相关部门轻忽公众权益。这种舆论情势，似乎已经成为轮回现象。比如，若问接下来，电话诈骗能进行陪葬吗？垄断无良能及时遏止吗？监管失灵能尽快改变吗？很多人恐怕只能一声叹息。\r\n　　最不想看到的，就是人们将这类人间悲剧视为一个宣泄情绪的临时出口，久而久之，心灵越来越麻木。面对徐玉玉的死，很多人说，“太让人心疼了”。我认为，这份心疼，值得呵护。心足够疼就不会麻木。如果能让这种锐痛感转变为普遍的共鸣感，进而生成改变各种不公的共理心，心疼还可以带来动力，产生改变不公的现实力量。\r\n　　那么，你对徐玉玉真的足够心疼吗？你真的了解徐玉玉这种农村贫困学生是如何艰难奋斗的吗？你真的清晰感受到这类群体在人生转折期遭遇的心理压力吗？我认为，不知道农村贫穷高中女生经历过怎样的心灵炼狱，就不明白徐玉玉为何会心理崩溃，也不足以去说是真正心疼徐玉玉。\r\n　　十几年前，我在苏北一所国家级示范性高中当班主任老师。那个城市很多权贵名流都会动用各种关系来把子女送进来这所名校。我的班上有不少学生是从农村考来的，他们多半家境贫寒，但学习刻苦，成绩优异。这类学生团结认真，进步巨大，后来学校还专门开设农村班，将从农村高分招来的学生放在一起。我也被调去做农村班老师，加上自己本身也是在农村贫困家庭长大，我敢说，我真的懂他们。\r\n　　因为懂得，所以慈悲。我对农村学生格外偏爱，特别是农村贫困女生，更是心疼。农村并不足够重视教育，很多贫困家庭女孩读完初中就会被送出去打工挣钱养家。加上重男轻女观念严重，很少家庭愿意在女孩进行过多的教育投资。那些农村贫困家庭女生非常珍惜到城里名校读书的机会。城市再繁华，也与她们无关。她们不买漂亮衣服，没有化妆品，吃不起好的饭菜，分数就是她们所有快乐与幸福的所在。每次考完试，考砸的都会哭得撕心裂肺。每天晚自习熄灯后，她们总会去抢路灯下的位置读书，直到被我赶回宿舍。周末她们也很少回家，安安静静在教室里学习。\r\n![徐玉玉作文《我的家庭》](http://n.sinaimg.cn/news/transform/20160826/N_37-fxvixer7282852.jpg)\r\n徐玉玉在其作文《我的家庭》里说：父母已年近半百，过了半辈子了呀。还没跟我们姐妹俩享一天清福呢所以，我一定要很努力地学习才能报答我的父母……　　徐玉玉在其作文《我的家庭》里说：父母已年近半百，过了半辈子了呀。还没跟我们姐妹俩享一天清福呢所以，我一定要很努力地学习才能报答我的父母……\r\n　　她们就是应试教育的囚徒，但应试教育也是她们的希望。应试教育的考核标准化、行为短期化、目标功利化，尽管适合做放飞她们梦想的翅膀，但也随时会让她们变成折翼的天使。她们不认同辍学打工或早早出嫁的生活，为远离粗鄙乡村，开启梦幻人生，用尽心力去死读书，读死书。在这种情况下，应试教育给了她们分数，但不能带来良好的人格养成，也不能带来防范社会风险的能力，反而容易让她们生成更为偏狭性格心理。由于应试教育偏离人文精神，也无法祛除贫困和学业带给她们带来的心理压力，她们不断承受着自尊与自卑带来的痛苦。可以说，在从高中通往大学的道路上，随时都会出现压垮这些贫困女生的最后一根稻草。\r\n　　那些年，我曾见过很多贫困高中女生的悲剧，最普遍的是精神衰弱、性格畸形，严重的就是高考失败、选择自杀。值得强调的是，为这些女生提供心理救助，使她们免于恐惧和伤害，并不是容易的事。因为生存压力和生活梦想，都把她们心拴得死死，让她们信念系于一端，一旦破灭，就容易崩溃。徐玉玉因电话诈骗突然崩溃死亡，就是这种状况的表征。毫不夸张地说，现在依然有无数的农村贫困女在经历着可怕的心灵炼狱。如果整个社会对她们人生缺乏心疼，对她们命运缺乏关注，对她们苦难缺少救助，像徐玉玉这样的悲剧，就一定会通过各种各样的方式上演。\r\n　　再穷不能穷教育。教育扶贫确实也是国家精准扶贫的重要落点，精神扶贫和文化扶贫也是被屡屡提及的概念。但是，精准都在细节幽微处，文化都在人心深远处。徐玉玉的悲剧，还是说明，我们社会对这样的人生并不足够心疼，特别是从国家和制度层面，还缺乏足够精细的人文呵护和救济力量。\r\n\r\n',',思想,',105,0,'2016-09-04 21:03:22','2016-09-07 21:17:40',0,'http://n.sinaimg.cn/news/transform/20160826/N_37-fxvixer7282852.jpg',1,'http://news.sina.com.cn/pl/2016-08-26/doc-ifxvixeq0519696.shtml'),(75,1,'“郭曹互撕”后面是一卷长长的裹脚布','郭德纲和徒弟曹云金的矛盾闹大了，闹翻了。\r\n我稍为捋一捋，是上周郭德纲在纲丝节上公布了德云社的家谱。曾经的两名云字科徒弟何云伟与曹云金并不在列，这显然是要将两位徒弟除名的意思嘛。','','',0,'郭德纲和徒弟曹云金的矛盾闹大了，闹翻了。\r\n我稍为捋一捋，是上周郭德纲在纲丝节上公布了德云社的家谱。曾经的两名云字科徒弟何云伟与曹云金并不在列，这显然是要将两位徒弟除名的意思嘛。\r\n![](http://tc.sinaimg.cn/maxwidth.800/tc.service.weibo.com/mmbiz_qpic_cn/073bdf585dcd95da505ea7d3e889ad66.jpg)\r\n然后郭德纲又发微博：该清的清，该驱的驱。所谓的清理门户，是为了给好人们一个交代。凡日月所照、江河所至皆以忠正为本。留下艺名带走脸面，愿你们万里鹏程。从此江湖路远，不必再见。\r\n这不指名不道姓的话已经很明了：我要清理门户，要和曹云金你们这些不孝之徒断决关系，从此老死不相往来。\r\n然后，曹云金发长文细述自己和郭德纲的恩怨，称曾被赶睡公园演出遭封杀。还说，“是你的江湖险恶，但我的世界阳光，……人生长路漫漫，确实不必再见。”这是一副从此绝别的话。\r\n![](http://tc.sinaimg.cn/maxwidth.800/tc.service.weibo.com/mmbiz_qpic_cn/dbabd5bede34a2de07df629f424408d3.jpg)\r\n再然后，就是其他人，包括郭德纲的徒弟纷纷站出来指责曹云金“背叛恩师”，说“一日为师终身为父”，曹云金此举是禽兽不如。\r\n比如郭德纲的徒弟朱云峰就说了：德云社十大班规之首，不准欺师灭祖。守者立，犯者罚！一日为师，终身为父，老话乌鸦讲反哺，羊羔跪乳。出言不逊，犯我恩师。禽兽尚知眷念父母！总之，还字之前，请闭嘴。\r\n无论是郭德纲还是其徒弟朱云峰的话语，都充满了让我熟悉而惊讶的口吻和气息，那就是过时的，江湖味极浓的，充满人身依附的师徒关系，散发着一股子霉味。\r\n“现代社会，师徒关系仍然有权利与义务之分别，但本质上是契约关系，彼此应该是平等而独立的。”\r\n我记得我大学毕业到某银行办公室工作，行长是从过去老信用社过来的人，就跟我说，我们现在大学生多舒服，而他那阵子从业时不叫员工，叫学徒，在师父面前低三下四，早早就来到办公室，把卫生做好，把师傅的桌子擦得干干净净，冬天生好炉子，师父一来，温热的毛巾就递了过去，把师父侍候得舒舒服服，才学到一点业务。\r\n这种情形在过去可能是比较普遍的，无论哪一门手艺，都还没有学校，成件制，模板化，批量学习，要想学点东西，就得拜师学艺，学到了手艺，才能够混出名堂，才能有安身立命之本。所以，任何一个学徒都有可能将师父视为再生父母，故而有“一日为师终身为父”，师父对徒弟的影响实在太大了，确实是徒弟的大恩人，恩重如山，恩重超父母。\r\n与之相对的是，师父给你如此大的恩惠，改变你的命运，给你一生的荣华富贵（比如成了名师、名角、名人），相应地，你对师父要尽到更多的义务，这其中就不准欺师灭祖，这其实就是要你“一日为徒终身为徒”，背叛恩师的事，肯定会遭到圈子里以及社会的普遍指责，这是有其合理性的。\r\n![](http://tc.sinaimg.cn/maxwidth.800/tc.service.weibo.com/mmbiz_qpic_cn/80a8ba80cc3fdc1b401d4a2252e946a9.jpg)\r\n此外，在过去，一门讨生活的手艺、艺术，求学者众，师父有极大的挑选权，一些底层弟子无家可归，拜师学艺时也就将师父视同生父生母了，视师父的家为自己的家。而在过去，子女对父母有极大的人身依附，说不上有多少独立的人格和自由，这也让过去的师徒关系染上了浓浓的人身依附关系。\r\n\r\n而且这样的父子关系毕竟非血缘关系，师父对徒弟的背叛自然舍得下狠手打击，加之像戏曲、相声这些群体多为江湖行走者，生存颇为不易，不冷血不行，一旦沾染了江湖规矩，翻起脸来，就会更为残酷无情。\r\n\r\n这一点，我们可以从《霸王别姬》的电影里看到，那些学京剧的徒弟对师父是何等的言听计从，师父有着怎样的生杀予夺之权，可以决定着弟子的前途命运。哪怕成了名震天下的名角，对师父也是不敢有半点不敬。\r\n\r\n\r\n然而，时代变化了，很多手艺、艺术都纳入到学校制了，而不是门派师徒制了。在现代社会，师徒关系仍然有权利与义务之分别，但本质上是契约关系，彼此应该是平等而独立的，“一日为师终身为父”更多的是讲一种尊敬，绝不是强调人身依附关系。没有哪个老师敢要求弟子对其尽无穷的责任，成为师父赚钱的工具，对其有绝对的指使，没有这回事。\r\n![](http://tc.sinaimg.cn/maxwidth.800/tc.service.weibo.com/mmbiz_qpic_cn/a94425c0c693eb1ac393e971872919a1.jpg)\r\n只有仍然没有进化到现代教育模式的手艺和艺术，只有还停留在传统时代的思维，只有还迷恋江湖思维的人，才会觉得自己收了一个徒弟，就是收进了家门（门户），就是自己的孩子，可以一辈子指来唤去，幻想着自己仍拥有强大的父权，弟子稍有不从，就动用社会道德来鞭打他。\r\n\r\n恰恰现在很多手艺、艺术都已经学校制化了，有些手艺可以在职校学习，有些艺术可以投师艺术学校。而这样的学习之中，我们很少听说师生之间有那么多的书剑恩仇之事。唯有仍然保留着传统的、江湖式的传授方式的相声、二人传等艺术，总是不断地闹出一些幺蛾子，不断爆出内讧，不是师徒反目，就是徒弟之间互撕，圈子内的互殴，而且撕起来还不如泼妇骂街体面，斯文扫地，其状难看至极。\r\n\r\n\r\n我想，这些落后的、过时的艺术传授方式真得改改了，还把过去那些裹脚布、小脚当宝贝，在现代社会还演绎得那么自鸣得意，除了感到恶心，还有太有多的时空穿越感。\r\n\r\n新京报 2016.09.05 20:25\r\n\r\n文/廖保平',',思想,',64,0,'2016-09-06 17:32:54','2017-05-14 20:04:53',0,'http://tc.sinaimg.cn/maxwidth.800/tc.service.weibo.com/mmbiz_qpic_cn/073bdf585dcd95da505ea7d3e889ad66.jpg',1,'http://media.weibo.cn/article?id=2309404016443917259512&from=timeline&isappinstalled=1&jumpfrom=weibocom&luicode=10000011&lfid=2'),(76,1,'川藏线老司机说：就算你举着“求怀孕”的牌子','作为一个常年在川藏线跑生活的老司机说：“穷游的妹子们，拜托你们不要进藏了，如果要进藏，请你们坐火车、飞机进藏，我不会再搭你们了。请原谅我们的拒绝!”','','',0,'作者： 来源： 兴趣部落 2016年09月04日 21:50:20\r\n![](http://www.fawan.com/UploadFiles/allimg/160904/25_160904214706_1.jpg)\r\n　　作为一个常年在川藏线跑生活的老司机说：“穷游的妹子们，拜托你们不要进藏了，如果要进藏，请你们坐火车、飞机进藏，我不会再搭你们了。请原谅我们的拒绝!”\r\n　　讲真的，常年跑西藏货运，一路上都是男男女女的背包客，只要他们竖起大拇指请求搭车，我都会停下来搭他们。有时候甚至他们不请求搭车，我也会主动停下来问问他们要不要顺道载他们一程；因为看着他们背上背包那么沉，挺心疼他们虐待自己的。\r\n　　顺道搭载他们一程，是举手之劳的事情，咱们就当做好事积阴德了；谁一辈子没有遇到过困难，对不对？\r\n　　不过，前阵子开始，我决定不再搭载他们了。因为发生了太多事，我也不想给自己不痛快。\r\n![](http://www.fawan.com/UploadFiles/allimg/160904/25_160904214719_1.jpg)\r\n##### 1.舆论的威力太大了，压力也大\r\n　　我有空的时候会看看新闻，看到关于川藏线的新闻也会点进去看看。那些评论说什么炮游、AB制、分腿游，真是外行人看热闹，说得好像我们为了占人家小姑娘便宜才搭载一样。川藏线上，男男女女都搭过，就觉得顺道帮个忙，路上也有个说话的人，没那么无聊。可是现在那么多人说炮游的，容易误导我们的家人。我不想惹这个麻烦，以后就不搭他们了。\r\n##### 2.路上形形色色的人太多\r\n　　搭的人多了，碰到形形色色的人也多。碰到很多有素质的，比如中途停车加水时，还会去商店给我带烟、带红牛的。像这种人，我就觉得帮他们是值得的。\r\n　　当然，也遇到一些脸皮厚的，有时候搭他们会碰上饭点，有些人很客气的吃随身携带的干粮或者自己吃、有些人跟着我一起吃饭主动掏钱请客；而有些人吃完直接拍拍屁股走人连句客套话都没有，好像我请吃饭是应该的；后来我再遇到这种人，我直接说今天不走了，让他们自己走。\r\n![](http://www.fawan.com/UploadFiles/allimg/160904/25_160904214734_1.jpg)\r\n##### 3.作为谈资，不会感恩\r\n　　现在为什么那么多人说炮旅、分腿游，就是他们中一些人把事情说得太玄乎了，什么83元走西藏、700元走西藏，弄得人们云里雾里，东想西想；也害得我们变成了占便宜的司机。\r\n　　其实那些说花83元、700元走西藏的人，就是为了吹牛逼，说得自己有多厉害。就不知道感恩这一路上帮助过他们的人，只拿这些当作他们吹嘘的资本。\r\n##### 4.遇到困难时\r\n　　之前搭了一个人，半道轮胎爆了，我下车换轮胎，他倒好，帮都不帮，直接下车走了。\r\n##### 5.无节操\r\n　　曾经一个司机朋友好心拉一个搭车的男生，谁知道下车后，他的钱包都不见了。\r\n　　总之，现在碰到他们，我现在是不敢搭了，也不想搭了。搭到些有素质的人还好，搭到那些没素质的人，心里窝火。干脆不搭，不惹那一身臊。',',思想,',78,0,'2016-09-07 18:42:31','2017-05-14 18:56:59',0,'http://www.fawan.com/UploadFiles/allimg/160904/25_160904214706_1.jpg',1,'http://www.fawan.com/fwbdhz/2016/09/04/365992.html'),(77,1,'你知道“道德绑架”背后的真实心理吗？','他出生在西北的一个小县城，由于地理原因，那里的生活条件很落后，大家都过着贫穷的日子，有什么事相互帮忙，邻里关系很不错。其中有一个人头脑特别灵活，知道附近的山上有很多珍贵的药材，就以很低的价格买下了那片山头，雇了些人上山采药，然后贩卖到东部发达地区，再把那里的东西运回来卖给小县城的人，如此十几年折腾下来，竟然拥有了一家制药公司和一家贸易公司，不但在市区买上了别墅，还配了一辆日本进口的小轿车，成为远近闻名的首富。','','',0,'后台有一位读者给我讲了这样一个故事。\r\n\r\n>他出生在西北的一个小县城，由于地理原因，那里的生活条件很落后，大家都过着贫穷的日子，有什么事相互帮忙，邻里关系很不错。其中有一个人头脑特别灵活，知道附近的山上有很多珍贵的药材，就以很低的价格买下了那片山头，雇了些人上山采药，然后贩卖到东部发达地区，再把那里的东西运回来卖给小县城的人，如此十几年折腾下来，竟然拥有了一家制药公司和一家贸易公司，不但在市区买上了别墅，还配了一辆日本进口的小轿车，成为远近闻名的首富。\r\n\r\n>这时候，小县城的人不淡定了，认为他应该把赚来的钱拿出来给大家修公路，建养老院，照拂家乡。\r\n\r\n>他不愿意，认为自己想做慈善那是自己愿意，凭什么让别人来支配自己的财富？于是，他遭到了空前的责难，一顶顶帽子扣下来，比如“为富不仁”“忘恩负义”“一毛不拔”等等，他和家人成了大家眼里的混蛋。\r\n\r\n>读者说当年他才刚上高中，看着大家同仇敌忾的样子，活像对方杀了自己全家一样，他小小的心灵极为震撼，但是他不敢发表意见，怕别人把怒火引到他身上。\r\n\r\n>后来，由于某岛事件，引发了民族矛盾，小县城的一些人二话不说就拿着铁器，把他的日本小轿车砸了个稀巴烂，人人都瞪着血红的眼睛怒骂：“砸了这贱种的车，他是卖国贼、汉奸！”\r\n\r\n>这些暴力行为把他们一家吓得够呛，最后不得不搬家。\r\n\r\n![你知道“道德绑架”背后的真实心理吗？](http://www.timetimetime.net/zb_users/upload/2016/6/2016060801415563.jpg)\r\n\r\n还有一位读者跟我说，他是从农村到大城市来打拼的南漂一族，去年过年买了一辆车开回家过年，本来一家人都挺高兴的，结果有些邻居却说有能力买车，应该把那钱留起来给你父母养老，自己快活，于心何忍？\r\n\r\n读者说我每个月都会给我父母寄钱，父母老了我也会负责到底，可是我买辆车开着上下班怎么了？难道我不能买车吗？\r\n\r\n读者最后问我：每个人都有自己的自由和权利，过什么样的日子，怎么处理自己的财富，这不都是应该由自己决定的吗？为什么有这么多人喜欢搞道德绑架呢？你能告诉我这是为什么吗？\r\n\r\n若在以前，我会回复他，之所以有很多人喜欢道德绑架别人，是源于缺乏界限感，不懂得尊重别人的生活和选择，喜欢把自己的意志强加给别人。\r\n\r\n也有很多人认为道德绑架的人都是圣母，出发点是好的，只是方式用错了，曾经我也这么认为，但接触人性久了，发现完全不是这么一回事，我们所看到的，不过是事情的表面，而且还是最浅的那一面。\r\n\r\n所谓道德绑架的出发点，和圣母一点点关系都没有，你以为这些人是真的捆绑着别人做好事吗？\r\n\r\n就好比文中指责读者的那些邻居，他们真的关心那位读者是不是孝顺父母吗？他们根本不关心！真正的原因是：我家没有车，你家居然买车了。可是他又不能不让你买，怎么办？指责你不孝啊，孝道在中国的威力，很多人都感受过，还有比这更有打击力的武器吗？\r\n\r\n其实，作为是成年人，有多少人是真的不知道不应该去干涉别人的生活呢？有多少人是真的不知道那是人家自己的钱，人家想怎么花就怎么花呢？\r\n\r\n大多数人还是明白的，那么，为什么他们还是喜欢搞道德绑架呢？这其中的真实原因，恐怕连那些习惯道德绑架的人，都不敢面对。\r\n\r\n如果仔细观察一下，我们会发现但凡喜欢搞道德绑架的人，都是又LOW又穷又失败并且心理还不健康的那些人，于是，就不难理解为什么会产生道德绑架了。\r\n\r\n还记得马云下面的逼捐吗？如果这些留言的人对马云说：“你那么有钱，给我点花花吧？”会是什么结果呢？\r\n\r\n我想肯定会招来很多骂声，诸如“你穷你有理啊？”那些逼捐的人自己也明白会得到什么样的结果，于是，扯过道德的大旗，摇身变成：“发生了这种灾难，你这么有钱不应该多捐一些做好事吗？”\r\n\r\n于是，有了所谓的道德和正义的遮羞布，这些人就能大行肆虐，其真正的心理并非行善，当他们看到其他人联合在一起去指责比自己有钱有能力的人，他们的内心终于达到平衡，会生出这样的窃喜：呵，有钱又怎样？还不是跟过街老鼠一样，人人喊打？\r\n\r\n他们的真实心理是：你那么有钱，凭什么你一个人用？拿出来给大家花花！哼，就算你不拿出来，大家的唾沫也能淹死你，你也别想好过。\r\n\r\n这种心理才是逼捐背后的真实心理，源于仇富，而非圣母。\r\n\r\n还记得之前砸日本车的事件吗？\r\n\r\n据我了解，动手去砸的人当中没有一个是地位超然、能力卓绝的人，大多是些平时生活不得志的人，你会看见开着宾利、法拉利的人去砸人家二三十万的本田丰田吗？\r\n\r\n所以，答案不言自明。\r\n\r\n如果这些人说：“凭什么我骑自行车上班，你开着进口车出行，老子砸了你？”想都不用想会得到什么后果。但在特殊的时期，当这些人打着“爱国”的名义去干这些事，他们内心的阴暗心理就会被掩盖，还会得到诸多理解，比如：“爱国情怀是很好的，只是方式不当，太激进了。”\r\n\r\n在自我的催眠下，可能连他们自己都觉得自己的行为很“爱国”，而忘记了自己的心理有多阴暗。\r\n\r\n其实，他们的行为完全不是爱国，若真的爱国，必然会考虑什么行为才是真正的爱国，什么行为会带来后遗症，而不是以这种又LOW又蠢的行为，替中国抹黑，让外媒嘲讽，爱不爱国，他们并不关心，有没有替国家抹黑，他们也不在意，他们真正的心理是：“你开进口小轿车？我让你开不成，还落个卖国贼的恶名。”\r\n\r\n他们想发泄的不过是生活中的不得意和扭曲的心理而已。\r\n\r\n还有那些自己婚姻不幸福，别人要离婚时，经常在旁边说：“离婚太不负责了，为了孩子也该忍一忍，我都是为了你好，不希望你的人生留下遗憾。”\r\n\r\n你可以仔细观察一下，但凡这么说的女人，自己的婚姻状况如何？不管她们如何粉饰自己的幸福和掩饰自己的失意，都改变不了这些人的婚姻质量差强人意的事实，因为，真正幸福的女人是不会去干涉别人家的家事的。\r\n\r\n她真正的内心活动是：我不幸福我可以忍，凭什么你就要离婚？大家都是人，谁比谁高贵啊？大家一起不幸，自己的不幸就不会那么难受了。\r\n\r\n但她不能直勾勾地这样表达，于是才会拿出万年法宝——孩子，以孩子的名义捆绑你，离婚就是不为孩子负责，让你不管离与不离，都如鲠在喉。\r\n\r\n当然不是说，但凡劝合的人都心怀不轨，劝离的人才是为了你好。真正为你好的人，一定会去了解你真实的处境，给出中肯的意见，为你好的劝和，是替你分析现状，总结得失，绝不会上来就指责你不负责任；为你好的劝离，同样需要客观站在你的处境上，本着希望你更幸福的用意而给出的意见。\r\n\r\n之所以有这么多人喜欢搞道德绑架，是因为道德绑架太好用了，只要一拿出道德这面旗帜，就可以把别人打入万劫不复的地步，还不得抗争。\r\n\r\n所以，我们要明白：一个人有了一定的见识和成就后，是绝对不屑去道德绑架别人的，因为但凡成功的人，多多少少都经历过被人强迫的滋味，他们深知被一群无知无脑的人绑架，又无法理喻的那种感觉。\r\n\r\n那些动辄指责别人、干涉别人的人，永远都是一群没有自我、没有追求、没有情操、也没有见识的失败者而已，你又何需在意这些人说什么呢？\r\n\r\n你只要明白一点：说你不爱国的人，也许他生平没有做过任何爱国行为；说你不孝顺的人，也许他自己从来没干过什么孝顺的事；说你不负责任的人，也许他一辈子都没为谁负过责任。真正希望你做得更好的人，他们会用一种你非常乐意接受的方式来影响你，同化你。\r\n\r\n成功者都在为自己的人生努力，LOW者才会到处乱喷，绑架别人。\r\n\r\n不必害怕道德绑架，只有实在拿你的成功没办法的人，才会用道德绑架你，若他有其他打击你成功的办法，早就用了，就因为没有，才会耍耍嘴皮子，给你添点堵，明白了这一点，还需要那么郁闷想不开吗？\r\n\r\n我们要明白，如果你想过得比别人好，比别人更成功，你就无可避免地会受到道德绑架，攻击诋毁，这是我们在成功道路上必然会遇到的，没承受住，你就会掉入愤怒烦躁的深渊，承受住了，你的前路繁花似锦，一群有格调、有品位、有涵养的朋友，正在前方含笑等着你加入。（文/晚情）\r\n\r\n作者简介：晚情，作家，编剧，云意轩翡翠创始人，著有《且以情深共白头》《豪婚》等书，新书《做一个刚刚好的女子：不攀附，不将就》正在热卖中。微博@晚情的小窝，个人公众平台：倾我们所能去生活。',',思想,',58,0,'2016-09-10 06:39:27','2017-05-14 18:56:43',0,'http://www.timetimetime.net/zb_users/upload/2016/6/2016060801415563.jpg',1,'http://www.timetimetime.net/yuedu/71906.html'),(78,1,'少年游·并刀如水','并刀如水，吴盐胜雪，纤手破新橙。锦幄初温，兽烟不断，相对坐调笙。','','',0,'并刀如水，吴盐胜雪，纤手破新橙。锦幄初温，兽烟不断，相对坐调笙。\r\n\r\n低声问：向谁行宿？城上已三更。马滑霜浓，不如休去，直是少人行。\r\n\r\n—— 周邦彦（1056-1121）北宋词人',',思想,',46,0,'2016-09-10 19:52:32','2017-05-14 18:56:19',0,'',1,'《少年游·并刀如水》'),(79,1,'表姐一家让我懂得娶一个女人，家庭背景多重要','想想如果他娶的是个普通人家明事理的女孩子，加上他那么有本事，现在生活得过得多好。同时也让我更加明白，结婚跟谈恋爱真的差很多，千万别为了爱情盲目结婚，我爸妈也表示让我远离这样家庭背景的女生，日子毕竟是过的，不是一时半会的，两个人在一起应该是让生活有所提升，而不是倒退。现在想想也是感慨，都说男怕入错行，女怕嫁错郎，其实男人也要怕娶错人啊。','','',0,'先说说我表姐一家吧，我舅舅好吃懒做，靠着我外公留下的旧城区的破房子，一个月收 2000 块的租，天天不干活，就知道在楼下跟别人打麻将赌，赌不大一天输赢几十块，舅妈还好点，在商场帮人卖衣服，但是性格很懦弱，这样的家庭下，我小表哥也是个不学无术的人，初中毕业就没念了，跟人混社会，混到现在也没一人样，一天到晚喝酒。我表姐想考大学，舅舅没给，认为女人就应该早成家，她气不过，自己边打工边自学，报成考，考了 4 年愣是考不上，于是放弃。\r\n\r\n然后悲剧的人物就来了，我的表姐夫，在网上跟我表姐认识，武汉大学的，挺帅挺清秀，也不知道看上我表姐什么，只身前往南宁，考了西大的博，来的时候看我舅家挺穷，置办了很多家电。为了讨好我舅，还决定留在我们这边发展。于是悲剧就开始了，结婚的时候，我舅一分钱没出，在南宁办的，表姐夫一家人大老远从武汉跑过来，出钱出力，但是看得出表姐夫还是很幸福的，我表姐好面子，去了五星级酒店，本来我表姐夫一家人也没什么钱。基本上是掏积蓄给办婚礼，我舅那边的亲戚死抠。红包基本给的 100 块。差不多一道菜钱。拖家带口的来。但是我表姐夫有出息啊，把工程爆破证给考了，挂给别人，一年有 10 几万的收入（现在不知道了），博士毕业后工作一个月 2 万月薪，（真不吹）。年薪贼高，于是就按揭买了个地段不错的房，月供多少没说，但应该负担得起。我小表哥看我表姐夫那么有钱，就怂恿我表姐，让她买车，还说年薪那么高，买辆车有什么难，我表姐好面子，就逼我表姐夫又按揭买了天籁，但是我表姐夫因为早年读书比较认真没考驾照，于是车顺理成章的给我表哥开，还不带出油费的，一开就是开到现在。于是表姐夫日子开始过得紧巴巴的，我表姐生完孩子后也不上班了，天天在家里看电视带孩子逢人就说她老公多牛逼。万幸我表姐夫人踏实努力，很快生活就开始有点起色了。但是这时候我表哥因为走偏门，卖毒 品，被抓，看守所的人说给 10 万就改成吸毒，不是贩毒。我舅穷的叮当响，只能求助我表姐夫，我舅妈一把鼻涕一把泪，我表姐夫没办法，10 万一掏，等我表哥出来了还给我表哥讲了一晚上道理，我当时心里就替他悲哀，我表哥什么人啊你真是幼稚。\r\n\r\n然后就是老城区的房子突然说要拆，我舅跟智障一样，以为偷偷加盖能多赚点钱，于是把房子加做了两层（钱大部分我表姐夫出，说是拿了拆迁款多还他），结果检测员来检测，说多盖的不算，又因为房子比较老，就只有土地证，没有其他两证，一平米只补偿几百（坑吧，前段时间还有因为这个闹事的），我舅瞬间傻眼了，苦的还是我表姐夫，房子快没了，又不愿意租房，那怎么办？举家全搬我表姐夫的房子去了。一家人偷偷核算着，拆迁款那么少。买个房子都不够，又因为常年好吃懒做，收租收习惯了，还是想买自建房，但是现在自建房贵啊，一栋都是几百万的。然后就开始怂恿我表姐夫，贷款，把自己的房子抵押上，贷款买自建房，说是投资，以后升值。其实谁都懂是为了自己一家人住顺带收租。我表姐夫自然不乐意，闹了好一阵，终于没闹成，双方各让一步，等房子拆了，我表姐夫再出一笔钱，加上拆迁款给我舅一家买套房，前前后后预计得要几十万感觉。\r\n\r\n然后就是几个星期前，我表哥给放高 利 贷的做打手，被人捅了，伤到了肾，做了很久的手术（我妈还掏了 3000 救急，估计也不会还了），当时已经有生命危险，还好我表哥命大，活了下来，捅人的那个人早就消失了，于是住院的钱，药钱，还得我表姐夫来，听我妈说，我表哥不懂伤哪里了，手一直抖，医生说估计会有后遗症，我妈就很叹息。不懂以后还能不能干活。昨晚我和我爸妈一起去看我表哥，我舅一家人都在，我表姐夫在表姐吵得很厉害，我们一来，就又不说话了，脸色黑得厉害，回来我妈说是我舅为了让我表哥 \" 改邪归正 \"，强烈要求我表姐夫在公司安排一份工作给我表哥，但是公司又不是我表姐夫开的，当然不可能，于是我表姐就闹，现在情况怎样不得而知。\r\n\r\n昨晚我看到我表姐夫的时候，差点认不出来，虽说他天天跑工地，但是看起来真的很寒掺啊，犹记得当年那清秀的样啊，现在变成这样，真是感慨，想想如果他娶的是个普通人家明事理的女孩子，加上他那么有本事，现在生活得过得多好。同时也让我更加明白，结婚跟谈恋爱真的差很多，千万别为了爱情盲目结婚，我爸妈也表示让我远离这样家庭背景的女生，日子毕竟是过的，不是一时半会的，两个人在一起应该是让生活有所提升，而不是倒退。现在想想也是感慨，都说男怕入错行，女怕嫁错郎，其实男人也要怕娶错人啊。\r\n\r\n来源：虎扑步行街',',思想,',51,0,'2016-09-10 23:05:30','2017-05-14 19:59:37',0,'',1,'http://www.nanyangshi.com/news/2016/04-25/2b2bc85135187818772e08c15dd0facd.html'),(80,1,'底层放弃教育，中产过度焦虑，上层不玩高考',NULL,'','',0,'作者：余秀兰\r\n　　越来越多的社会底层家庭的孩子放弃高中、大学，直接选择技工学校，学门手艺和技术；5%的上层家庭根本不玩中国高考游戏，也看不上国内质量越来越差的本科教育，这些家庭的孩子从幼儿园开始就选择每年学费高达数十万的国际学校，高中甚至初中就到欧美发达国家继续接受最优质的教育，他们将是未来中国社会甚至国际化的精英。\r\n　　对教育最抓狂和焦虑的当属城市中产阶级家庭，他们的孩子输不起，稍不努力考不上一本、985、211大学，他们的社会流动轨迹就将滑向底层。这就是中国社会当下，生动的阶层教育画像。\r\n##### 余秀兰：焦虑的中产阶级，焦虑的教育梦\r\n　　曾经，“读书改变命运”“知识就是力量”是社会上流行的口号。教育是中国亿万家庭，特别是贫困家庭子弟的一剂强心针。\r\n![](http://img.mp.itc.cn/upload/20160904/84474bad902f4141993facf27a8a9288.jpeg)\r\n　　如今，“一毕业就失业””“学好数理化，不如有个好爸爸”等口号却戏谑地调侃了教育，这个曾是渴望向上流动的人们赖以改变命运的独木桥。许多令人困惑的情况出现了——\r\n　　第一，“教育改变命运”的口号在当前的社会环境下已然变味。整个社会教育的起点已经提高，即使付出很大成本，得到的也只不过是最基础与必需的教育。受教育已不是提高个人档次的问题，而是维持最低生活所必需的问题。\r\n　　第二，教育不再是让一个家庭脱贫致富的好事。对于许多家庭而言，大学学费无异于天文数字。一个人考上大学，一个家族都会被拖入贫困的泥潭。加之如今就业压力不断增加，城市生活成本日益趋高，即使大学毕业，对家庭的回报也没有保障。\r\n　　第三，欠缺高等教育，同样可以获得高的社会地位。许多名人并未受过高层次的教育，但有着可观的金钱和较高的地位。再加上所谓的“土豪”、富二代、官二代的不断涌现，使得“读书无用论”有了生存的土壤。\r\n　　种种现象似乎表明，教育促进社会成员的升迁性社会流动的功能减弱了，高层次的教育并不必然带来好的收入和职业地位。\r\n　　“教育改变命运”的口号不再像过去那么令人信服了。而中国的不同阶层，对待教育的态度也有了截然不同的差别。\r\n#### 一.绝望的底层人民：干脆放弃高等教育\r\n　　一位两个孩子均在外打工的家长说：“读个初中就行了，读多了也没用的！”“以前村子里的人都认为我目光短浅，瞧不起我，现在，他们好多人反过来求着我，让我儿子帮他们的孩子找工作。念大学又怎么样，还不是为了找一份好工作。可是现在，机会多的是，不是非要上大学。”\r\n![](http://img.mp.itc.cn/upload/20160904/563b16b9503d4af0a822c51ba05dd38a_th.jpeg)\r\n　　中科院社会学博士后的调查发现，越贫穷越认同“读书无用”：村庄贫困层认同度62.32%、农村中间层37.24%；年收入1万元以下的村庄贫困层认为读书无用的比例最高。\r\n　　由此可见，认为“读书无用论”再次泛滥的结论并不正确。中高层从未说过读书无用，相反，他们更加疯狂。\r\n#### 二.疯狂的中产阶级：对教育的焦虑与过度重视\r\n　　且不提一线城市天价却依旧供不应求的名校学区房，根据今年七月的一则新闻报道，一位80后上海妈妈为今年9月即将上小学一年级的孩子列了个学期清单，暑假开销加课外学习的开销达到32万元。除了各种学习用品、家居用品和夏令营以外，总计20个课外兴趣班。\r\n　　中产阶级对教育的焦虑，从中国不断高企的学区房价和愈发火热的补习班便可一窥全貌。\r\n　　而一条新的道路越来越成为新中产阶级的家庭标配，那就是读私立学校和出国读书。2016年6月10日，南京某私立学校的幼升小面试中，5086名孩子竞争216个名额，录取比例破23:1。而其如此受欢迎的原因，与该校针对出国留学的教育方式有不容忽略的关系。\r\n![](http://img.mp.itc.cn/upload/20160904/6a19fd2ecb644044a6b8c12158f6448d_th.jpeg)\r\n　　孩子的教育问题集中反映了中产阶级的焦虑情绪。中产阶级希望自己的孩子可以继续接力，向更高的社会经济地位跃迁，为此他们不惜重金，让孩子去上各种辅导班，学习各种才艺和礼仪，让孩子赢在起跑线；如果做不到这一点，他们就会转而拥抱阶层固化，希望孩子至少可以继承自己的中产阶级身份，为此他们不惜搁置自己的价值观，他们会坚定地反对异地高考，将招收农民工子女的学校贬称为“菜场小学”，避之不及。\r\n　　中产阶级的孩子，也许是学业压力最大的一个群体，这源于他们父母内心深处巨大的不安全感：毕竟，与社会上层相比，他们的孩子输不起。（熊易寒：中国中产阶级的三副面孔，《文化纵横》2016年8月）\r\n　　这些现象都带给人们极大的困惑：教育还能改变命运吗？底层的上升通道关闭了吗？教育与社会流动究竟是怎样的关系？\r\n#### 三.人们为什么讨厌那些“二代”？\r\n　　观察当前的中国社会可以发现，社会阶层固化趋势显现，向上流动困难。\r\n##### 第一，教育面前机会不平等的现象仍很严重。\r\n　　这些教育差距（除第四个差距）主要是因地域差距造成的，但同时也有家庭社会经济背景的因素，不同家庭背景为孩子提供的经济资本、文化资本、社会资本差距越来越大。具有较好社会经济条件的家庭会为孩子选择较好的教育。此外，家长在学校教育之外的投入也因家庭条件的不同而差距很大，家庭条件好的家庭可以为孩子找家教、选择辅导班和进行各种才艺培训。\r\n　　这些，都导致了不同家庭背景的孩子拥有不同的教育成就。\r\n![](http://img.mp.itc.cn/upload/20160904/8b874eb3f94a423b82ac595dc99e1d2b_th.jpeg)\r\n##### 第二，优胜劣汰公理遭“二代”现象挑战。\r\n　　“二代”现象反映了社会差别通过代际更替具备一定的遗传性，上代的优势可以通过各种途径放大和强化而传递给下代。\r\n　　在地位获得方面，一方面，上代的优势可以通过影响下代的教育水平，从而影响下代的地位获得，即上代可以为子女提供更优质的教育资源，从而使他们在教育竞争中获得优势，进而在地位获得上取得优势；\r\n　　另一方面，上代可以直接利用经济资本和社会资本为下代获得较好的职位。有研究表明，社会就业竞争越激烈，社会资本运作的空间就越大。“拼爹”是对这一现象最形象的概括。\r\n　　由于高等教育的扩张，获得大学文凭不再是件困难的事情，但大学文凭对不同的人具有不同的功能。对于某些家庭社会经济背景好的学生来说，大学文凭可能只具有象征性的功能，他们的就业不需要完全依靠这张文凭；而对于家庭社会背景差的学生来说，大学文凭则具有实在的工具性功能，是他们找工作的唯一资本。\r\n　　正如杜里－柏拉和让丹所指出的：“虽然文凭是必不可少的，但是并不能因此认为为了获得某一社会职位有文凭就足够了。”“现实中，择优录用的运作似乎被社会因素严重扭曲了。在学业成功和选择某一教育与家庭环境不无关系的事实之外，社会出身继续对教育水平相当的青年们的职业插入产生影响，并在整个职业生涯中继续介入其中。”\r\n　　正是这些原因，导致了底层人们向上流动受阻，对教育绝望。而中产阶级，却开始了地位焦虑和对教育的疯狂。社会阶层结构变得更加固化，“拼爹一代”成为人生赢家。与此同时，社会矛盾极易激化，富二代、官二代成为了诸多社会矛盾的来源，和一触碰就燃起熊熊舆论之火的敏感词。\r\n#### 四.寒门学子，除了努力还能拼什么？\r\n　　教育，究竟能否促进升迁性的社会流动？\r\n![](http://img.mp.itc.cn/upload/20160904/2c04005495934bf480822be5c87318f9_th.jpeg)\r\n　　事实上，这取决于大的社会结构，当一个社会是开放公正的，人们的地位获得主要依靠其知识与能力，而不是其家庭背景和社会资本，教育所起的作用就会较大；反之，当一个社会的阶层结构封闭固化，人们的地位获得主要依靠先赋因素，依靠对上代优势的“继承”，教育所起的作用就很小。\r\n　　其次，取决于教育本身是否公平合理，教育机会与教育资源是否公平地向每个阶层的人开放，教育中是否不带有任何阶级偏向。因为只有公平合理的教育才能促进合理的社会流动。\r\n　　此外，还要考虑教育发展的速度与规模同经济发展之间的匹配性。这就是说，教育能否促进底层的升迁性社会流动，并不仅仅是由教育本身决定的，还受社会因素制约，而且归根结底是社会结构起决定作用。\r\n- 只是，寒门学子，除了努力还能拼什么？\r\n- 你有什么理由放弃努力？\r\n- 你有什么理由放弃改变命运的机会？\r\n- 努力是你唯一的宿命。\r\n　　法国当代著名社会学家布迪厄说过：面对经济资本和社会权力，文凭虽然只是“一个日渐疲软的通货”，但是中国中产阶级孩子除了拼高考，还有什么路可走？\r\n　　教育已经成为中国社会阶层的隐秘再生产的途径。上层阶级的父母用权力资本和经济资本为子女提供了最优质且稀缺的教育资源，这些出身背景相似的孩子从幼儿园开始就只和同样社会地位的孩子社交，形成上层精英封闭的人际网络。\r\n　　底层社会放弃高等教育这个中产阶级的孵化器，将世代都是蓝领个人。而中产阶级家庭多数孩子在普通大学毕业后将成为低收入的低级白领，要么是城市贫困群体，要么继续啃老。\r\n- 这是合理的现象吗？\r\n- 政府的责任何在？\r\n- 父母该为孩子的阶层负责吗？\r\n- 这些，或许都是我们应该进一步思考的问题。',',思想,',62,0,'2016-09-10 16:25:36','2016-09-11 11:02:10',0,'http://img.mp.itc.cn/upload/20160904/84474bad902f4141993facf27a8a9288.jpeg',1,'http://learning.sohu.com/20160904/n467555179.shtml'),(81,1,'孩子问爸爸：为什么要上学？','“爸爸，我为什么要上学呢？” 上学不久的儿子问爸爸。\r\n　　爸爸说：\r\n　　儿子，你知道吧？一颗小树苗长1年的话，只能用来做篱笆，或当柴烧。\r\n　　长10年的话可以做檩条。\r\n　　长20年的话用处就大了，可以盖房子，可以做家具，还可以做玩玩具...','','',0,'![](http://img.mp.itc.cn/upload/20160908/81466aea05d94036ac031da8b838d24a_th.jpeg)\r\n　　“爸爸，我为什么要上学呢？” 上学不久的儿子问爸爸。\r\n　　爸爸说：\r\n　　儿子，你知道吧？一颗小树苗长1年的话，只能用来做篱笆，或当柴烧。\r\n　　长10年的话可以做檩条。\r\n　　长20年的话用处就大了，可以盖房子，可以做家具，还可以做玩玩具...\r\n　　一个小孩子如果不上学，他7岁的时候就可以放羊了，长大了能放一大群羊，可是他除了放羊，其他的事情基本干不了。\r\n　　如果上6年小学，毕业了，在农村他可以用新的技术来种地，在城里可以去打工，做保安，也可以当个小商贩，小学的知识就够用了。\r\n　　如果上9年，初中毕业后，他就可以学习一些机械的操作了。\r\n　　如果上12年，高中毕业后，他就可以学习很多机械的修理技术了。\r\n　　如果大学毕业，他就可以设计高楼，铁路桥梁。\r\n　　如果他硕士博士毕业，他就可能发明出许多我们原来没有的东西。\r\n　　知道了吗？\r\n　　儿子：知道了。\r\n　　爸爸问：那放羊、种地、当保安，丢人不？\r\n　　儿子：丢人。\r\n　　爸爸说：儿子，不丢人。他们不偷不抢，凭本事赚钱，养活自己的家，一点也不丢人。不是说不上学，或上学少就没用。就像一年的小树一样，有用，但用处不如大树多。对社会的贡献少，他们赚的钱就少。读书多，花的钱也多，用的时间也多，但是贡献大。\r\n　　儿子：我明白了，我要好好读书。\r\n　　\r\n　　儿子出国前还对爸爸说，那次谈话印象深刻。\r\n　　跟孩子交流既不需要威逼，也不需利诱，孩子会为自己做最好的选择。\r\n　　其实，教育很简单，越朴实的话语，越能震撼人心，越能激励孩子们努力前行！在这一点上，中外莫不如此！',',思想,',127,0,'2016-09-11 18:53:28','2017-05-14 18:56:07',0,'http://img.mp.itc.cn/upload/20160908/81466aea05d94036ac031da8b838d24a_th.jpeg',1,'http://baobao.sohu.com/20160908/n467983133.shtml'),(82,1,'中国社会即将分层，你将会在第几层？','这不是鸡汤，也不是砒霜，只是从纷繁复杂的现状中，抓住背后的暗潮涌动，分析我们将面对的未来：\r\n社会即将分层，你将会在第几层？','','',0,'这不是鸡汤，也不是砒霜，只是从纷繁复杂的现状中，抓住背后的暗潮涌动，分析我们将面对的未来：\r\n#### 社会即将分层，你将会在第几层？\r\n01\r\n\r\n你的下一代将被迫逃离家乡？\r\n\r\n“凡有的，还要加给他，叫他有余；没有的，连他所有的也要夺过来。”\r\n\r\n这句话出自《圣经·马太福音》25章29节，后人以此为典故，归纳了“马太效应”，即强者愈强，弱者愈弱。\r\n\r\n#### 马太效应是世间最冰冷的规则，却又无处不在。\r\n\r\n当“逃离北上广”和“逃回北上广”的话题在网上大热时，公众号“城市数据团”发表了一篇爆文《逃离你终将衰落的家乡》。文章以各省人口流动的大数据为依据，得出了一个残酷的结论：\r\n\r\n#### 大都市就像抽水机，不停地从落后省份抽取劳动力，或许将来的某一天，我们就会像今天的日本一样，无数村庄和城镇凋零衰败，但东京和大阪都市圈繁华依旧。\r\n\r\n#### 在人口负增长的时代，大都市将毫不留情地吸干周边地区的血液，以便自己能够生存。残酷吗？不，因为这是年轻劳动力自己用脚（投票）投出的结果。\r\n\r\n![](http://dingyue.nosdn.127.net/qCQ6eiZoZWuBY3ByGXkVY5bGAwqbXQ66luTcgpywuvIno1473750305795transferflag.png?imageView&thumbnail=690x10000&quality=50)\r\n\r\n大都市拥有优质的政治资源、商业资源、教育资源、人力资源……这些优质资源吸引着无数优秀的年轻人，而优秀的年轻人将推动大都市的繁荣发展，从而让大都市获取更多的资源，于是形成了一个优势迭代的良性循环，这就是马太效应中的强者愈强。\r\n\r\n而由人口迁徙引申出来的推论，则更加触目惊心：\r\n\r\n#### 你还能在这些选择（逃离北上广还是逃回北上广）中犹豫，说明你无比幸福，因为你们的下一代和下下一代可能不会再有任何选择的机会。假如你最终选择留在了一个生活安逸风景如画的小城镇上，你也许会幸福地过完一生；但在你的子女到了你这个年纪的时候，很可能他们有且只有一个选择，那就是——逃离他们终将衰落的家乡。\r\n\r\n文中所谓的“无比幸福”其实“无比残酷”，因为大都市在攫取优秀人才的同时，也在用高额的房价和户籍制度将千千万万的普通人挤到繁华都市的边缘，将他们赶到逼仄的地下室，脏乱的出租房，直到他们梦碎的那一天，收起行囊，滚回家乡，然后他们的下一代再背起行囊，逃离家乡。\r\n\r\n这就是马太效应的另一面，弱者愈弱。\r\n\r\n![](http://dingyue.nosdn.127.net/hizhr45HX6YZpyo32mbrRsqmYfp4oTjXdF7dLJrUWP5Zg1473750305795.jpg?imageView&thumbnail=690x10000&quality=50)\r\n\r\n02 越有钱收入增长越快！\r\n\r\n《二十一世纪资本论》的作者汤玛斯·皮克提认为，当今的资本回报率已经大于经济的增长率，这将会导致社会财富向少数人聚集。\r\n\r\n也就是说，越有钱收入增长越快！经合组织（OECD）的统计数据验证了这一点。\r\n![](http://dingyue.nosdn.127.net/khSMkNnLaneASybmgDjLqKgWDOWSVEo3fg2uJUbp6mhs01473750305795.jpg?imageView&thumbnail=690x10000&quality=50)\r\n最近30年，英美等发达国家的高收入群体和低收入群体收入都有所增长，但是高收入群体（政企管理者、金融从业者、IT从业者）的收入增长更快。\r\n\r\n#### 投资财富的积累犹如滚雪球，同样的速度下，雪球越大体积增长越快\r\n![](http://dingyue.nosdn.127.net/vkMD6gvpu7H5rGcuC3K7wWS0Tpr66Zl6wt=rzTMdw6Jeq1473750305798transferflag.png?imageView&thumbnail=690x10000&quality=50)\r\n>当王健林“先赚它个一个亿”的小目标刷屏时，你有没有算过：王健林身家2600亿，一个亿只占他总资产的0.04%，对他而言真的只是一个小目标啊！\r\n\r\n而对于没有家产且年收入十万的年轻人而言，一个亿的小目标也不算太难，也就是不吃不喝工作1000年而已。\r\n\r\n03 寒门再难出贵子\r\n\r\n1980年，一个农民家的孩子踏进了北大的校门，邻里乡亲都以他为荣。可他到了北京之后才发现：自己没读过课外书，跟不上同学的聊天话题；穿衣搭配非常土，女生找他扛包打水，理由居然是为了让自己的男朋友休息一下；做个自我介绍，也被当众嘲笑，说他普通话讲得像日语；除了插秧是能手，他一样都拿不出手。\r\n\r\n就是这样一名农家子弟，他创办了第一家在美国上市的中国教育机构，他入选了“中国最具影响力的50位商业领袖”，他的名字叫俞敏洪。\r\n\r\n寒门出贵子，逆境出英才，俞敏洪的人生经历书写了读书改变命运的传奇。\r\n![俞敏洪照片对比](http://dingyue.nosdn.127.net/hYV0biqzK6sJaTMLPJSET1A4YMVNh09kTrOncg7YsaLXT1473750305798transferflag.png?imageView&thumbnail=690x10000&quality=50)\r\n可是，如果俞敏洪再晚生几年会怎样？\r\n\r\n北京大学教育学院副教授刘云杉统计1978年~2005年北大学生的家庭出身发现：\r\n\r\n80年代中后期是农家子弟用知识改变命运的黄金时代，三成以上的北大学子出自寒门；\r\n\r\n90年代中期农家子弟的比例开始下滑；\r\n\r\n2000年之后，考上北大的农村子弟仅占一成多。寒门子弟进名校的通道正变得越来越窄。\r\n\r\n农家子弟的名额都被谁占了？\r\n\r\n权威期刊《中国社会科学》于2012年刊登了一篇研究报告《无声的革命：北京大学与苏州大学学生社会来源研究（1952-2002）》。报告通过研究50年数据，得出了一个让全社会哗然的结论：\r\n\r\n#### 90年代后，考上北大的精英子弟比例快速攀升，这些社会精英只占全社会人口的1.7%，却有40%的北大学生诞生于这样的精英家庭。\r\n\r\n#### 寒门再难出贵子，精英扎堆进名校，这是马太效应的又一次胜利。\r\n\r\n（为什么80年代是农家子弟的黄金年代？因为高考是1977年才恢复的，随着时间的推移，马太效应日趋明显。）\r\n\r\n04 绝望的底层，高喊读书无用\r\n\r\n前几天，有读者转给我一篇“亚洲新闻周刊杂志”公众号的文章，标题是《底层放弃教育，中产过度焦虑，上层不玩中国高考》。\r\n\r\n在此之前，我早已在朋友圈刷到了这篇文章，因为标题实在太刺眼，而刺心的是，它反映的难道不就是现实吗？\r\n\r\n作者余秀兰借中科院社会学博士后的一项调查得出结论：**越贫穷越认同“读书无用”**。村庄贫困层认同度62.32%、农村中间层37.24%，年收入1万元以下的认同比例最高，于是作者用了这样的小标题来描述底层人民对待教育的态度——绝望的底层人民：干脆放弃高等教育。\r\n\r\n作者的结论对吗？\r\n\r\n对。虽然情理难容，但却在意料之中，不信我论证给你看：\r\n\r\n#### 论据之一：家里越穷，读书的代价越高\r\n\r\n2014年《经济学人》(The Economist)的一项报告指出：包括书本费用在内，高中三年的学费动辄数千美元——这往往超过了贫困农村家庭一年的收入。\r\n\r\n#### 论据之二：出身越底层，上的学校越差\r\n\r\n2014年，瑞典隆德大学的薄家珉(Benjamin Lillebrohus)的一项统计报告显示：2012年复旦大学新招收的农村学生占比为10.36%，同济大学占比18.98%，天津大学28.14%，吉林大学32.27%，西北师范大学59.85%，南昌大学43.68%，喀什大学（原喀什师范学院）56.98%。\r\n\r\n就像《南方周末》2011年的一篇报道中提到的那样：“出身越底层，上的学校越差”，这一趋势难以被逆转。\r\n\r\n#### 论据之三：学校越差，越难找到好工作\r\n\r\n当社会的教育起点越来越高，应届毕业生越来越多时，好工作的门槛也必然越来越高。毕业生要面对的竞争对手，是人才市场中所有竞争同一岗位的人，所以对于三流大学的毕业生，“毕业即失业”已不再是笑话。\r\n\r\n另一方面，无论寒门学子为上大学背了多少债，付出了多少代价，企业顶多只会表示遗憾，仅此而已。\r\n\r\n对于底层人民而言，教育的高成本，低收益，导致了他们对教育的绝望。\r\n![南方周末记者 翁洹/图](http://dingyue.nosdn.127.net/61Ozh6YLbUkoqJizcjsIvVgcKuM8BJV2uFIVfOkA67p2V1473750305798transferflag.png?imageView&thumbnail=690x10000&quality=50)\r\n05 海淀拼娃是怎么拼的？\r\n\r\n当“读书无用”的声音在底层日益高涨时，社会中上层却在教育的投入上更加疯狂。\r\n\r\n今年上半年，一篇名为《北京的无奈：海淀拼娃是怎么拼的》的文章在各路家长的朋友圈疯狂转发。\r\n\r\n当主流媒体炮轰课外班是培养应试教育的机器时，作者透露了他孩子在辅导班的课程：\r\n\r\n语文由北大的老师上课，孩子读的是《大学》和《春秋》，但很多内容讲的其实是历史，而且是把中国历史发生的事情与外国历史横向对比，带有文化和哲学的启蒙。\r\n\r\n英语则是新东方的名师上课，孩子从自然拼读开始，不再是死记硬背，而是在讲英语故事。\r\n\r\n数学则是国内985名校的毕业生授课，小学低年级的奥数就足以让文科生缴枪，但孩子学会了就会有乐趣。\r\n\r\n作者称儿子每天早上七点半起床，晚上八点课外班下课，赶回家还要写作业，做完作业还要看课外书，一般是儿童读物，一周读完一本，一个月读完一套，内容包括科技、历史、地理等等。\r\n\r\n或许你会觉得这样的家长很残酷，居然把孩子逼得那么苦，说好的快乐教育呢？可更残酷的是，所有的这一切，都是孩子自己要求的。\r\n\r\n“一般控制他晚上十点要睡觉，但他经常会比这个睡得晚，孩子才七岁啊！真的很担心，每次都对他说你不想学了课外班就不要上了，但他总是不愿意，他有一个目标，就是能够赢了老爸，要有他会他老爸不会的内容。\r\n\r\n文章的最后一句话耐人寻味：成功真的不是一代的积累。\r\n\r\n更耐人寻味的是：龟兔赛跑，如果兔子拼命向前跑，会怎么样？\r\n\r\n答案依然是马太效应。\r\n![](http://dingyue.nosdn.127.net/zFmp5R0vUbCl2gS1kCM4kz2VUVMVZCraUF1mw93R=H1bP1473750305798transferflag.png?imageView&thumbnail=690x10000&quality=50)\r\n06 社会越发达，阶层越固化\r\n\r\n《人生七年》是BBC的一部纪录片，它选择了14个不同阶层的英国孩子，记录了他们的人生轨迹。从7岁开始，每七年记录一次，一直到他们的56岁。\r\n\r\n这项历时49年的研究揭露了一个残酷的事实：穷人的孩子依然是穷人，富人的孩子依然是富人，阶层在代际间得到了传承。\r\n\r\n7岁本该是个天真烂漫的年纪，但不同阶层孩子已表现出了明显的差异。\r\n\r\n上流社会：John和Andrew就已经养成了阅读《金融时报》、《观察家》的习惯，他们明确地知道自己会上顶级的私立高中，然后读牛津大学，再然后进入政坛。\r\n\r\n中产阶层：男孩会拥有自己的理念，如反对种族歧视，帮助有色人种；女孩则想着长大嫁人生子。\r\n\r\n底层社会：有人希望当驯马师赚钱，有人希望能有机会见到自己的爸爸，而贫民窟出生的Paul，甚至把“吃饱饭、少罚站、少被打”当成了自己的人生愿望。\r\n\r\n49年之后，他们已是56岁。\r\n\r\n上流社会：John成为了企业家并致力于慈善事业，Andrew成为了律所合伙人，他们的孩子继续接受着精英教育。\r\n\r\n中产阶层：他们中的大多数人依然是中产，也会有个别滑落到了社会的底层。\r\n\r\n底层社会：Paul成为了泥瓦工，Symon则成为了司机，他们生了一大堆儿女，儿女中的大部分人继续在底层靠出卖劳动力为生。\r\n![](http://dingyue.nosdn.127.net/iNRI7dJwJjWWjiJTdxvRKts81ZYVPMMwA8ZV1aVnjiTkS1473750305800transferflag.png?imageView&thumbnail=690x10000&quality=50)\r\n在一个百废待兴的社会，弯道超车，一夜暴富都成为可能，但社会一旦进入到发达又稳定的阶段，阶层的分化和固化将变得日趋明显。\r\n\r\n哈佛公开课《公平的起点是什么》中指出：“即使是努力本身，很大程度上也依赖于幸运的家庭环境。”\r\n\r\n两位罗斯福总统都毕业于哈佛，“布什家族”四代都是耶鲁校友，小布什在竞选的时候甚至开玩笑说：“我继承了我父亲一半的朋友。”\r\n\r\n上层社会的人脉、财富、精英意识、教育资源等等，父传子，子传孙。\r\n\r\n而社会中下层的孩子，在公立学校接受了所谓的“快乐教育”后，构成了新一代的社会中下层。但不管怎样，发达社会至少能为他们提供可靠的生活保障。\r\n\r\n这是社会稳定的另一种形态。\r\n![](http://dingyue.nosdn.127.net/6tH0eSB=QqgAlvzXMXpon42LNO9VzrrC49rpfU4ihW7bv1473750305802transferflag.png?imageView&thumbnail=690x10000&quality=50)\r\n07社会即将分层，你将会在第几层？\r\n\r\n郝景芳的《北京折叠》荣获2016年的雨果奖。\r\n\r\n雨果奖是世界科幻小说的最高奖项，堪称科幻界的“诺贝尔文学奖”，可《北京折叠》与其说是科幻，不如说是披着科幻外衣的社会隐喻：\r\n\r\n#### 顶层操控规则，中层高节奏工作，而底层的穷人，将连被剥削的价值都不再会有。\r\n当底层人民对着邻里乡亲高喊读书无用时，阿尔法狗已经战胜了李世石，一场“人工智能”的革命正悄无声息地到来。\r\n\r\n可以预见，随着人工智能的发展，“机器换人”是必然的趋势，当一批又一批“自动XX机”进入各行各业之后，社会对蓝领的需求将大幅降低。到了那一天，那些放弃教育的底层人民，他们的出路又在哪里？\r\n\r\n这是政府要考虑的问题。\r\n\r\n#### 而对于我们自己而言，更关心的问题是：这个社会还有打破阶层的可能吗？\r\n有，当然有！\r\n\r\n即便是在阶层高度固化的英国社会，在纪录片《人生七年》中，依然出现了一个人，他打破了阶层的天花板成功晋升精英，他就是Nicolas ——一个农夫的儿子，他考上了牛津大学，然后成为了美国名校的教授。\r\n![](http://dingyue.nosdn.127.net/LzBa91oiED0eXYZ4h3chII2sU59E5ghKKrlM9PE16Zk511473750305802transferflag.png?imageView&thumbnail=690x10000&quality=50)\r\n十四分之一，从概率上来算，约为7%。\r\n\r\n无独有偶，全球复杂网络研究权威、美国物理学会院士巴拉巴西在《爆发》一书中提到了这样一个观点：**人类行为的93%是可以预测的，而剩下的那7%无法预测的人则改变了世界。**\r\n\r\n书中没有给出7%这个数字是怎么来的，但至少他给了我们一个启示：\r\n\r\n#### 世界上永远存在这样一类人，他能够超越自己的家庭、血缘、环境，他能够挣脱时代对他的束缚，让世界另眼相看，这一类人被称为英雄。\r\n那么问题来了：社会即将分层，阶层正在固化，而你，能成为英雄吗？\r\n\r\n本文转自公众号缓缓君',',思想,',68,0,'2016-09-14 05:47:37','2017-05-14 15:41:44',0,'http://dingyue.nosdn.127.net/qCQ6eiZoZWuBY3ByGXkVY5bGAwqbXQ66luTcgpywuvIno1473750305795transferflag.png?imageView&amp;thumbnail=690x10000&amp;quality=50',1,'http://c.m.163.com/news/a/C0RQ7S090521AGAM.html?s=newsapp&w=4&f=wx'),(83,1,'健身日志 2016-10-08','1.跑步10分钟，速度7\r\n2.拉伸','','',0,'#运动前：\r\n##### 1.跑步10分钟，速度7\r\n##### 2.拉伸\r\n<1>小腿\r\n<2>背肌，双手拉住栏杆，腿分叉直了，头往下压，要背部疼\r\n<3>臀部和大腿根部，双手拉住栏杆，腿分叉直了，下蹲姿势\r\n<4>大腿正面，手拉着脚背，往屁股后面拉脚。\r\n<5>胸肌，一只手扶在墙上，拉胸。\r\n#正式运动\r\n1.深蹲 15次*2组\r\n2.俯卧撑，跳起，张腿 15次*2组\r\n3.哑铃推举 10次*2组\r\n4.杠铃提取 10次*2组\r\n4.走5分钟+跑20分钟\r\n\r\n总耗时1个半小时\r\n2016-10-08\r\n\r\n</br>\r\n负重臀桥\r\n\r\n\r\n\r\n',',日记,',91,0,'2016-10-10 03:40:31','2017-07-14 10:38:26',0,'',0,''),(84,1,'不要以为你是恩师，徒弟就不挖你的坟','皇帝也是一个孩子，也必须要有那个年纪最必须要有的东西--童年。可显然张居正这个严师剥夺了他多数光阴，用以学习怎么当个好皇帝。','','',0,'近来偶得一本写明万历时代的小说，于是花时间阅读完，并且观看了与之相关的电视剧，通过搜索引擎，查找多篇百科，博客，论坛文章进行对比。虽然细微之处，各种小说野史评文等都有出入，有作者过份发挥的地方，不过总的人，事，时间点，缘由是差不多的。\r\n综合理了理万历和张居正之间的恩恩怨怨，让我起了不少共鸣。往大了看，似只是中国有史的这三千年来无数次皇权，后权，相权，宦官，外戚，一干朝臣之间的大戏而已，来回重复的在每个朝代上演。历史的车轮轧过去，倒回来再轧，我们小老百姓从小都在电视剧中看这种剧，熟的不能再熟的套路，没什么好讲的，而且，跟我们无关；往小了看，我认为这就是家事，是每一个作为社会细胞的家庭，都无法避免的事，这也是引起我共鸣之处。\r\n万历9岁接替皇位，一个小学三四年级的年纪，自然不能理政。朝政由张居正牵头，太后和宦官保驾护航，中兴了十年。这十年大家都忙着教小皇帝料理军国大事，可却没有人能看得到他从一个只会听话乖巧懂事的小孩子，成长为一个思想渴求独立到完全不受任何人，任何典法约束的昏君，这段漫长的心路历程。\r\n皇帝也是一个孩子，也必须要有那个年纪最必须要有的东西--童年。可显然张居正这个严师剥夺了他多数光阴，用以学习怎么当个好皇帝。如果你要教一个人做到什么事，犹其是那种故事中流传的圣人行为，那你可得十二万分的注意一件事，那就是：自己做的到吗？老百姓家说的和做的不一样，无非骂两句，可帝师的行事追不上他口中对小皇帝天天念经的那些个廉德，那下场，就是死一票人，毁好几代名声。\r\n张居正兴起了大明朝十年，首功一件，拿点钱财，受些荣誉是应该的，就像他自己的用人原则：尚循吏而不重清流。意思就是要重用那些虽贪但能解决实际问题的官员，比如像殷正茂；至于像海瑞这样的清官，更多只是成就了个人一世清明，却难以解决国计民生的实际问题。张居正自己也非清廉，但人家会办事。可是张居正对皇帝讲学，却是用圣人的要求来规策一个十来岁的小孩子。按理说，给小孩上课，就应讲那些三观很高大上，正治正确，有\r\n2016-10-24',',思想,',74,0,'2016-10-25 06:56:02','2017-05-14 15:40:44',0,'',0,''),(85,1,'CentOS7.2 OpenStack kvm','现有的所有的Iaas平台基本都基于OpenStack，由于工作上接触了虚拟机，所以这里学习下安装OpenStack的过程！','','',0,'http://www.cnblogs.com/dongdongwq/p/5649894.html\r\n1、系统环境\r\n```\r\n# uname -r\r\n\r\n3.10.0-327.el7.x86_64\r\n\r\n# cat /etc/redhat-release\r\n\r\nCentOS Linux release 7.2.1511 (Core)\r\n```\r\n2、服务器部署\r\n\r\n|  ip | 主机名  | 角色  | 配置  |\r\n| ------------ | ------------ | ------------ | ------------ |\r\n| 192.168.0.6  | controller  | 控制节点  | 内存:4G;CPU:2核;硬盘:50G  |\r\n| 192.168.0.7  | compute  | 计算节点  | 内存:2G;CPU:2核;硬盘:50G  |\r\n\r\n3、基础环境准备\r\n\r\n3.1、配置hosts\r\n```\r\n# cat /etc/hosts\r\n\r\n192.168.0.6 controller\r\n\r\n192.168.0.7 compute\r\n```\r\n\r\n3.2、配置时间同步\r\n```\r\n[root@controller ~]# yum install -y ntp\r\n\r\n[root@controller ~]# vim /etc/ntp.conf\r\n\r\n15 restrict -6 ::1\r\n\r\n16 restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap\r\n\r\n27 restrict 0.centos.pool.ntp.org nomodify notrap noquery\r\n\r\n28 restrict 1.centos.pool.ntp.org nomodify notrap noquery\r\n\r\n29 restrict 2.centos.pool.ntp.org nomodify notrap noquery\r\n\r\n30 restrict 3.centos.pool.ntp.org nomodify notrap noquery\r\n\r\n31 server 127.127.1.0\r\n\r\n32 fudge 127.127.1.0 stratum 10\r\n\r\n[root@controller ~]# systemctl enable ntpd\r\n\r\n[root@controller ~]# systemctl start ntpd\r\n```\r\n在控制节点和计算节点配置定时任务\r\n```\r\n[root@compute ~]# crontab -e\r\n```\r\n新增定时任务如下\r\n```\r\n*/5 * * * * /usr/sbin/ntpdate 192.168.0.6 >/dev/null 2>&1\r\n```\r\n3.3、关闭防火墙\r\n```\r\n# systemctl stop firewalld\r\n```\r\n3.4、关闭selinux\r\n```\r\nvim /etc/selinux/config\r\n# SELINUX=disabled\r\n```\r\n需要重启\r\n3.5、安装基础包\r\n```\r\n[root@controller ~]# yum install -y http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm\r\n又发现了另外一个地址，不知道用哪个好\r\nyum install -y http://dl.fedoraproject.org/pub/epel/7Server/x86_64/e/epel-release-7-8.noarch.rpm\r\n\r\n[root@controller ~]# yum install -y centos-release-openstack-liberty\r\n\r\n[root@controller ~]# yum install -y python-openstackclient\r\n```\r\n3.6、安装mysql\r\n```\r\n[root@controller ~]# yum install -y mariadb mariadb-server MySQL-python\r\n\r\n[root@controller ~]# vim /etc/my.cnf\r\n```\r\n在mysqld模块添加如下几行：\r\n```\r\ndefault-storage-engine = innodb\r\n\r\ninnodb_file_per_table\r\n\r\ncollation-server = utf8_general_ci  \r\n\r\ninit-connect = \'SET NAMES utf8\'\r\n\r\ncharacter-set-server = utf8\r\n\r\n[root@controller ~]# systemctl enable mariadb.service\r\n\r\n[root@controller ~]# systemctl start mariadb.service\r\n\r\n[root@controller ~]# mysql_secure_installation\r\n```\r\n3.7、安装rabbitmq\r\n```\r\n[root@controller ~]# yum install -y rabbitmq-server\r\n\r\n[root@controller ~]# systemctl enable rabbitmq-server.service\r\n\r\n[root@controller ~]# systemctl start rabbitmq-server.service\r\n\r\n[root@controller ~]# rabbitmqctl add_user openstack openstack\r\n\r\nCreating user \"openstack\" ...\r\n\r\n...done.\r\n\r\n[root@controller ~]# rabbitmqctl set_permissions openstack \'.*\' \'.*\' \'.*\'\r\n\r\nSetting permissions for user \"openstack\" in vhost \"/\"...\r\n\r\n...done.\r\n\r\n[root@controller ~]# rabbitmqctl  set_user_tags openstack administrator\r\n\r\n[root@controller ~]# rabbitmq-plugins enable rabbitmq_management\r\n\r\n[root@controller ~]# systemctl restart rabbitmq-server.service\r\n\r\n```\r\n\r\n在浏览器中输入http://192.168.0.6:15672，默认账户和密码为guest\r\n\r\n登录后将前面创建的openstack用户加入到admin中，结果如下图：\r\n\r\n',',技术,',58,0,'2016-10-29 07:07:47','2017-05-14 20:02:45',0,'',0,''),(86,1,'吉他练习',NULL,'','',0,'53231323 43231323 63231323\r\n\r\n1 2 3 4 5  6  7  1\r\n3 5 7 8 10 12 14 15',',思想,',67,0,'2016-11-05 19:20:44','2016-11-05 19:35:57',0,'',0,''),(87,1,'摘录 2016-11月','希望每个人死后尸体都能自动变成一本书，书的内容就是死者的生平。这样一来，有人成了名著，有人成了禁书，有人变成菜谱，有人变成地图，有人是美图秀秀使用手册，有人是小旅馆的登记薄......整个世界就是一个巨大的图书馆，我们读者别人，作者自己，等着被读','','',0,'- 你听过的最漂亮的一句话是什么？\r\n希望每个人死后尸体都能自动变成一本书，书的内容就是死者的生平。这样一来，有人成了名著，有人成了禁书，有人变成菜谱，有人变成地图，有人是美图秀秀使用手册，有人是小旅馆的登记薄......整个世界就是一个巨大的图书馆，我们读者别人，作者自己，等着被读\r\n\r\n',',思想,',45,0,'2016-11-14 07:33:29','2017-05-14 15:41:18',0,'',0,''),(88,1,'基于AWS S3协议搭建个人云存储服务','相信风靡全球的亚马逊 AWS S3 的存储云服务大家已经耳熟能详了，如何自己搭建一个私有的S3存储云服务呢？\r\n使用Minio这款开源软件搭建属于自己的S3简单云存储服务！','','',0,'相信风靡全球的亚马逊 AWS S3 的存储云服务大家已经耳熟能详了，如何自己搭建一个私有的S3存储云服务呢？\r\n\r\nMinio 提供对象存储服务，兼容了 AWS S3 存储协议，用于非结构化的数据存。非结构化对象，比如图像，音、视频，日志文件，备份镜像…等等管理不方便，不定长，大小变化大、类型多，云端的访问复杂，minio就是来解决这种场景的。非结构化的文件从数KB到5TB都能很好的支持。开源并且用Go语言开发，有web操作界面，我们可以用它来搭建兼容S3协议的存储云服务。\r\n\r\n官网 https://minio.io/\r\n\r\n详情见如下操作\r\n\r\n```\r\n[root@localhost ~]# mkdir /data/aws_s3\r\n[root@localhost ~]# wget https://dl.minio.io/server/minio/release/linux-amd64/minio\r\n[root@localhost ~]# mv minio /usr/local/bin/\r\n[root@localhost ~]# minio server /data/aws_s3/\r\nCreated minio configuration file successfully at /root/.minio\r\n\r\nEndpoint:  http://10.5.10.89:9000  http://127.0.0.1:9000  http://172.17.0.1:9000\r\nAccessKey: U3XLU4IMXY3IDKHU268F \r\nSecretKey: /6NCL6HGacviaCgRqr2qLbVOjhkkJdRpV7wz0JJD \r\nRegion:    us-east-1\r\nSQS ARNs:  <none>\r\n\r\nBrowser Access:\r\n   http://10.5.10.89:9000  http://127.0.0.1:9000  http://172.17.0.1:9000\r\n\r\nCommand-line Access: https://docs.minio.io/docs/minio-client-quickstart-guide\r\n   $ mc config host add myminio http://10.5.10.89:9000 U3XLU4IMXY3IDKHU268F /6NCL6HGacviaCgRqr2qLbVOjhkkJdRpV7wz0JJD\r\n\r\nObject API (Amazon S3 compatible):\r\n   Go:         https://docs.minio.io/docs/golang-client-quickstart-guide\r\n   Java:       https://docs.minio.io/docs/java-client-quickstart-guide\r\n   Python:     https://docs.minio.io/docs/python-client-quickstart-guide\r\n   JavaScript: https://docs.minio.io/docs/javascript-client-quickstart-guide\r\n\r\nDrive Capacity: 8.3 GiB Free, 9.1 GiB Total\r\n```\r\n以上我们就成功启动了minio的s3服务，默认端口9000，可以通过网页访问http://localhost:9000\r\n\r\n**注意**：第一次打开时候需要填写AccessKey和SecretKey才能进入，我们上面启动服务的时候，已经看到屏幕有输出了\r\n```\r\nAccessKey: U3XLU4IMXY3IDKHU268F \r\nSecretKey: /6NCL6HGacviaCgRqr2qLbVOjhkkJdRpV7wz0JJD \r\n```\r\n把这两个Key填入，就能顺利进入，进入后展开页面如下\r\n\r\n![minio web ui 1](http://img.blog.csdn.net/20170329232002211?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n这就是我们的S3云存储的管理页面了，看着是不是和七牛什么的提供云存储的产品页面挺像的，原来大家都是基于S3协议开发的啊。\r\n\r\n上传个文件试试。点击右下角的红色小加号按钮，弹出的菜单选择\"create bucket\"则会创建一个桶，输入名字\"test\"，然后再点击刚才那个红色小加号按钮，这次选择\"Upload file\"上传文件，给这个桶上传了一个叫login.txt的文本文档，此时页面如下\r\n\r\n![minio web ui 2](http://img.blog.csdn.net/20170329232109875?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n至此我们可以看到文件已经上传，要访问这个文件，可以点击文件右侧的三个点的按钮，选择分享就可以得到一个外链，在浏览器中访问这个外链就可以直接访问文件。\r\n\r\n那么文件到底被存到哪里去了呢，我们启动命令中其实指定了工作路径/data/aws_s3/，所以到服务器这个目录下看看\r\n```\r\n[root@localhost ~]# ls /data/aws_s3/   \r\ntest\r\n[root@localhost ~]# ls /data/aws_s3/test/\r\nlogin.txt\r\n```\r\n桶名称test是一个目录，其下就有我上传的login.txt文件。\r\n\r\n另外，如果想指定ip和端口，可以这样写\r\n```\r\n[root@localhost ~]# minio server /data/aws_s3/ --address=0.0.0.0:9000\r\n```\r\n想运行到后台\r\n```\r\n[root@localhost aws_s3]# nohup minio server /data/aws_s3/ --address=0.0.0.0:443 &\r\n[1] 19882\r\nnohup: 忽略输入并把输出追加到\"nohup.out\"\r\n```\r\n这样会把标准输出重定向到当前目录下的nohup.out文件中，然后进程就放到后台运行了。\r\n\r\n据说minio可以搭建分布式存储系统 GlusterFS，这样就成了真正的云存储了，有时间再研究下把它从现在的单机测试，变成一朵存储云，哈哈！\r\n\r\n****\r\n> 创建于 2017-03-29 成都，更新于 2017-03-29 成都\r\n\r\n>该文章在以下平台同步\r\n>- LIBERALMAN: \r\n>- CSDN: http://blog.csdn.net/socho/article/details/68231662\r\n>- 简书: http://www.jianshu.com/p/aaf513fa5412\r\n\r\n- [1]  引用 \r\n\r\n',',技术,',56,0,'2017-03-30 07:49:14','2017-05-14 15:26:40',0,'http://img.blog.csdn.net/20170329232002211?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast',0,''),(89,1,'OpenResty入门','基于ningx做的二次开发，使用lua脚本动态修改nginx配置，灵活运维，充分发挥nginx性能！','','',0,'操作系统:Centos 7\r\n\r\nOpenResty 让你的Web服务直接跑在 Nginx 服务内部，充分利用 Nginx 的非阻塞 I/O 模型，不仅仅对 HTTP 客户端请求,甚至于对远程后端诸如 MySQL、PostgreSQL、Memcached 以及 Redis 等都进行一致的高性能响应。\r\n### 1 安装\r\n#### 1.1 配置安装源\r\n```\r\n[root@localhost ~]# vim /etc/yum.repos.d/OpenResty.repo\r\n```\r\n内容如下:\r\n```\r\n[openresty]\r\nname=Official OpenResty Repository\r\nbaseurl=https://openresty.org/yum/openresty/openresty/epel-$releasever-$basearch/\r\nskip_if_unavailable=True\r\ngpgcheck=1\r\ngpgkey=https://copr-be.cloud.fedoraproject.org/results/openresty/openresty/pubkey.gpg\r\nenabled=1\r\nenabled_metadata=1\r\n```\r\n#### 1.2 安装\r\n```\r\n[root@localhost ~]# yum install openresty\r\n```\r\n软件会安装到/usr/local/openresty/目录下\r\n\r\n创建工作目录\r\n```\r\n[root@localhost ~]# mkdir ~/work\r\n[root@localhost ~]# cd ~/work/\r\n[root@localhost work]# mkdir logs/ conf\r\n```\r\n创建nginx配置\r\n```\r\n[root@localhost work]# vim conf/nginx.conf\r\n```\r\n内容如下\r\n```\r\nworker_processes  1;\r\nerror_log logs/error.log;\r\nevents {\r\n    worker_connections 1024;\r\n}\r\nhttp {\r\n    server {\r\n        listen 8081;\r\n        location / {\r\n            default_type text/html;\r\n            content_by_lua \'\r\n                ngx.say(\"<p>hello, world</p>\")\r\n            \';\r\n        }\r\n    }\r\n}\r\n```\r\n配置环境变量\r\n```\r\n[root@localhost work]# export PATH=/usr/local/openresty/nginx/sbin:$PATH\r\n```\r\n启动\r\n```\r\n[root@localhost work]# nginx -p `pwd`/ -c conf/nginx.conf\r\n```\r\n正常情况的话，不会有什么输出到屏幕上。如果有问题，可以查看logs/error.log\r\n\r\n看看效果\r\n```\r\n[root@localhost work]# curl http://localhost:8081/\r\n<p>hello, world</p>\r\n```\r\n如果成功输出hello，world则就允许正常了。\r\n\r\n#### 1.3 压力测试\r\n安装压力测试工具\r\n```\r\n[root@localhost work]# yum install httpd-tools\r\n```\r\n压测\r\n```\r\n[root@localhost work]# ab -c10 -n50000 http://localhost:8081/\r\nThis is ApacheBench, Version 2.3 <$Revision: 1430300 $>\r\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\nLicensed to The Apache Software Foundation, http://www.apache.org/\r\n\r\nBenchmarking localhost (be patient)\r\nCompleted 5000 requests\r\nCompleted 10000 requests\r\nCompleted 15000 requests\r\nCompleted 20000 requests\r\nCompleted 25000 requests\r\nCompleted 30000 requests\r\nCompleted 35000 requests\r\nCompleted 40000 requests\r\nCompleted 45000 requests\r\nCompleted 50000 requests\r\nFinished 50000 requests\r\n\r\n\r\nServer Software:        openresty/1.11.2.2\r\nServer Hostname:        localhost\r\nServer Port:            8081\r\n\r\nDocument Path:          /\r\nDocument Length:        20 bytes\r\n\r\nConcurrency Level:      10\r\nTime taken for tests:   9.577 seconds\r\nComplete requests:      50000\r\nFailed requests:        0\r\nWrite errors:           0\r\nTotal transferred:      8400000 bytes\r\nHTML transferred:       1000000 bytes\r\nRequests per second:    5220.74 [#/sec] (mean)\r\nTime per request:       1.915 [ms] (mean)\r\nTime per request:       0.192 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          856.53 [Kbytes/sec] received\r\n\r\nConnection Times (ms)\r\n              min  mean[+/-sd] median   max\r\nConnect:        0    1   0.3      1       8\r\nProcessing:     1    1   0.4      1      10\r\nWaiting:        1    1   0.2      1       9\r\nTotal:          1    2   0.4      2      10\r\n\r\nPercentage of the requests served within a certain time (ms)\r\n  50%      2\r\n  66%      2\r\n  75%      2\r\n  80%      2\r\n  90%      2\r\n  95%      2\r\n  98%      2\r\n  99%      3\r\n 100%     10 (longest request)\r\n```\r\n\r\n### 2 反向代理\r\n新建两个目录，做为新的后端web服务器\r\n```\r\n[root@localhost ~]# mkdir backend1 backend2\r\n```\r\n#### 2.1 启动脚本\r\n我们再起两个nginx的服务，作为后端web服务器用。为了方便启动和管理每个web服务器，写了一个脚本\r\n```\r\n#!/bin/sh\r\n\r\nif [ $# != 1 ];then\r\n        echo \"you need arguments!\";\r\n        exit;\r\nfi\r\n\r\nif [ \"$1\"x = \"start\"x ];then\r\n    nginx -p `pwd`/ -c conf/nginx.conf\r\n        echo \"start nginx\";\r\nelif [ \"$1\"x = \"stop\"x ];then\r\n    nginx -p `pwd`/ -c conf/nginx.conf -s reload\r\n    echo \"reload nginx\"\r\nelif [ \"$1\"x = \"stop\"x ];then\r\n    ps -ef|grep nginx|grep -v grep\r\n    father_pid=`cat logs/nginx.pid`\r\n        children_pids=`ps -ef|grep nginx|grep -v grep|grep -v master|awk \'{print $2}\'`\r\n    for child_id in ${children_pids}\r\n    do\r\n        kill -9 $child_id\r\n    done\r\n    kill -9 $father_pid\r\n        echo \"stop nginx\";\r\nelse\r\n        echo \"input error!\";\r\nfi\r\n```\r\n脚本名称utils.sh，放到各个work根目录下，加可执行权限\r\n```\r\n[root@localhost work]# chmod +x ./utils.sh\r\n```\r\n使用如下\r\n\r\n启动\r\n```\r\n[root@localhost work]# ./utils.sh start\r\n```\r\n重载配置\r\n```\r\n[root@localhost work]# ./utils.sh reload\r\n```\r\n停止\r\n```\r\n[root@localhost work]# ./utils.sh stop\r\n```\r\n#### 2.2 新建两个后端nginx服务器\r\n采用和建立work目录一样的步骤，也分别将这两个目录配置成web服务器，细节略过，直接贴出两个目录的配置文件\r\n\r\n****\r\n> 创建于 2017-03-14 成都，更新于 2017-03-18 成都\r\n\r\n>该文章在以下平台同步\r\n>- LIBERALMAN:http://api.liberalman.cn:10898/article/89\r\n>- CSDN:http://blog.csdn.net/socho/article/details/62136170\r\n>- 简书:\r\n\r\n- [1]  引用 http://wiki.jikexueyuan.com/project/openresty/README.html\r\n\r\n\r\n',',技术,',50,0,'2017-04-13 12:17:34','2017-05-14 15:24:50',0,'',0,''),(90,1,'levelDB','levelDB是谷歌推出的一款内存数据库开发库，不输于redis！','','',0,'1，下载levelDB源码\r\n```\r\ngit clone https://github.com/google/leveldb.git\r\n```\r\n我是下载了这个地址的zip包leveldb-master.zip，解压安装的。\r\n\r\n2，编译LevelDB\r\n\r\n```\r\n[root@localhost ~]# unzip leveldb-master.zip\r\n[root@localhost ~]# cd leveldb-master\r\n[root@localhost leveldb-master]# make all\r\n```\r\n\r\n编译完成之后在当前目录多了两个目录：out-shared和out-static\r\n\r\n在out-static目录下有我们需要的**libleveldb.a**，out-shared下则是对应的静态库。由于make完之后并没有make install这样的命令，如果要使用这个库，把他拷贝到系统库路径下即可.\r\n```\r\n[root@localhost leveldb-master]# cp out-shared/libleveldb.so* /usr/local/lib & cp -R include/* /usr/local/include\r\n[1] 31021\r\n[1]+  完成                  cp -i out-shared/libleveldb.so* /usr/local/lib\r\n```\r\n3,在当前目录新建文件夹test\r\n\r\n```\r\n[root@localhost leveldb-master]# mkdir test\r\n[root@localhost leveldb-master]# cd test/\r\n```\r\n\r\n4,在test目录新建测试代码test.cpp\r\n```\r\n#include <assert.h>  \r\n#include <string.h>  \r\n#include <iostream>  \r\n#include \"leveldb/db.h\"  \r\n  \r\nint main(){\r\n    leveldb::DB* db;\r\n    leveldb::Options options;\r\n    options.create_if_missing = true;\r\n    leveldb::Status status = leveldb::DB::Open(options,\"/tmp/testdb\", &db);  \r\n    assert(status.ok());\r\n  \r\n    std::string k1 = \"name\";\r\n    std::string v1 = \"jim\";\r\n  \r\n    status = db->Put(leveldb::WriteOptions(), k1, v1);  \r\n    assert(status.ok());\r\n  \r\n    status = db->Get(leveldb::ReadOptions(), k1, &v1);  \r\n    assert(status.ok());\r\n    std::cout<<\"k1:\"<<k1<<\"; v1:\"<<v1<<std::endl;  \r\n      \r\n    std::string k2 = \"age\";\r\n    std::string v2 = \"20\";\r\n  \r\n    status = db->Put(leveldb::WriteOptions(), k2, v2);  \r\n    assert(status.ok());\r\n    status = db->Get(leveldb::ReadOptions(), k2, &v2);  \r\n    assert(status.ok());\r\n    std::cout<<\"k2:\"<<k2<<\"; v2:\"<<v2<<std::endl;\r\n  \r\n    status = db->Delete(leveldb::WriteOptions(), k2);  \r\n    assert(status.ok());\r\n    std::cout<<\"Delete k2..\"<<std::endl;\r\n    status = db->Get(leveldb::ReadOptions(),k2, &v2);\r\n    if(!status.ok())  \r\n        std::cerr<<\"k2:\"<<k2<<\"; \"<<status.ToString()<<std::endl;\r\n    else  \r\n        std::cout<<\"k2:\"<<k2<<\"; v2:\"<<v2<<std::endl;\r\n  \r\n    delete db;\r\n    return 0;\r\n}  \r\n```\r\n5,编译运行\r\n\r\n编译：\r\n```\r\n[root@localhost test]# g++ -o test test.cpp -lleveldb -lpthread\r\n```\r\n运行：\r\n```\r\n[root@localhost test]# ./test\r\nk1:name; v1:jim  \r\nk2:age; v2:20  \r\nDelete k2..  \r\nk2:age; NotFound:  \r\n```\r\n到目前为止，我们就基本可以使用leveldb了。\r\n\r\n6, 执行完.test之后，在/tmp/testdb下面产生了leveldb相关的文件：\r\n```\r\n[root@localhost test]# ls -alh /tmp/testdb  \r\n总用量 32K\r\ndrwxr-xr-x. 2 root root 4.0K 3月  16 00:29 .\r\ndrwxrwxrwt. 8 root root 4.0K 3月  16 00:29 ..\r\n-rw-r--r--. 1 root root  146 3月  16 00:29 000005.ldb\r\n-rw-r--r--. 1 root root   80 3月  16 00:29 000006.log\r\n-rw-r--r--. 1 root root   16 3月  16 00:29 CURRENT\r\n-rw-r--r--. 1 root root    0 3月  16 00:29 LOCK\r\n-rw-r--r--. 1 root root  309 3月  16 00:29 LOG\r\n-rw-r--r--. 1 root root   57 3月  16 00:29 LOG.old\r\n-rw-r--r--. 1 root root   80 3月  16 00:29 MANIFEST-000004\r\n```\r\n\r\nleveldb的限制\r\n\r\n1、非关系型数据模型（NoSQL），不支持sql语句，也不支持索引；\r\n\r\n2、一次只允许一个进程访问一个特定的数据库；\r\n\r\n3、没有内置的C/S架构，但开发者可以使用LevelDB库自己封装一个server;\r\n\r\n****\r\n> 创建于 2017-03-16 成都，更新于 2017-03-17 成都\r\n\r\n>该文章在以下平台同步\r\n>- LIBERALMAN: http://api.liberalman.cn:10898/article/90\r\n>- CSDN: http://blog.csdn.net/socho/article/details/62332533\r\n>- 简书: \r\n\r\n- [1]  引用 \r\n\r\n',',技术,',77,0,'2017-04-13 20:33:44','2017-05-14 15:23:24',0,'',0,''),(91,1,'nginx启用HSTS以支持从http到https不通过服务端而自动跳转','HSTS(HTTP Strict Transport Security)，HSTS的作用是强制客户端（如浏览器）使用HTTPS与服务器创建连接。服务器开启HSTS的方法是，当客户端通过HTTPS发出请求时，在服务器返回的超文本传输协议响应头中包含Strict-Transport-Security字段。非加密传输时设置的HSTS字段无效。','','',0,'最近对我的个人网站启用了Https，所以想设置http默认自动转https访问的功能，但又不想总让服务端做转发操作，那样浪费资源。那么有什么好的办法呢？\r\n\r\n### 302跳转\r\n通常将 HTTP 请求 302 跳转到 HTTPS，但有问题：\r\n\r\n1.不安全，302 跳转会暴露用户访问站点，易被劫持。\r\n\r\n2.多增加一次访问，使得客户端响应速度慢。302 跳转需要一个 RTT（The role of packet loss and round-trip time），浏览器执行跳转也需要时间。\r\n\r\n### HSTS\r\n\r\n302 跳转是由浏览器触发的，服务器无法完全控制，这个需求导致了 HSTS(HTTP Strict Transport Security)的诞生。HTSP 就是添加 header 头（add_header Strict-Transport-Security max-age=15768000;includeSubDomains），告诉浏览器网站使用 HTTPS 访问，支持HSTS的浏览器就会在后面的请求中直接切换到 HTTPS。在 Chrome 中会看到浏览器自己会有个 307 Internal Redirect 的内部重定向。在一段时间内也就是max-age定义的时间，不管用户输入 www.liberalman.cn 还是 http://www.liberalman.cn ，都会默认将请求内部跳转到https://www.liberalman.cn 。\r\n\r\n采用HSTS协议的网站将保证浏览器始终连接到该网站的HTTPS加密版本，不需要用户手动在URL地址栏中输入加密地址。\r\n\r\n该协议将帮助网站采用全局加密，用户看到的就是该网站的安全版本。\r\n\r\nHSTS的作用是强制客户端（如浏览器）使用HTTPS与服务器创建连接。服务器开启HSTS的方法是，当客户端通过HTTPS发出请求时，在服务器返回的超文本传输协议响应头中包含Strict-Transport-Security字段。非加密传输时设置的HSTS字段无效。\r\n\r\n比如，https://www.liberalman.cn 的响应头含有Strict-Transport-Security: max-age=31536000; includeSubDomains。这意味着两点：\r\n在接下来的一年（即31536000秒）中，浏览器只要向xxx或其子域名发送HTTP请求时，必须采用HTTPS来发起连接。比如，用户点击超链接或在地址栏输入 http://www.liberalman.cn/ ，浏览器应当自动将 http 转写成 https，然后直接向 https://www.liberalman.cn/ 发送请求。\r\n\r\n在接下来的一年中，如果 www.liberalman.cn 服务器发送的TLS证书无效，用户不能忽略浏览器警告继续访问网站。\r\n\r\n服务器端配置HSTS，减少302跳转，其实HSTS的最大作用是防止302 HTTP劫持。HSTS的缺点是浏览器支持率不高，另外配置HSTS后HTTPS很难实时降级成HTTP。同时，也建议启用SPDY来提高性能，不累述。\r\n\r\n### nginx如何配置HSTS\r\n在nginx的配置中，在https的server站点添加如下头部：\r\n```\r\nadd_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\";\r\n```\r\n这样当第一次以https方式访问我的网站，nginx则会告知客户端的浏览器，以后即便地址栏输入http，也要浏览器改成https来访问我的nginx服务器。是不是很爽，服务器再也不管http转发到https这档子事了，由浏览器自己把http改名字为https再来请求服务器，这不就减少了访问服务器的次数了吗，节省了不少资源。\r\n\r\n实测效果，重启nginx后，第一次访问用了http，发现没有跳转。当然不跳了，人家HSTS生效是要你访问https才生效的。然后输入了https的网址，下来再重新输入http，神奇了，真的浏览器自己替换成了https，再试试依然会替换，看我的配置，大概会维持63072000s吧，哈哈。\r\n\r\n如果用户第一次访问是http，以后还是http，就是不用一次https，那我们岂不是一直不能是的HSTS生效了？所以这里再加个配置，在http站点的server下，添加配置\r\n\r\n```\r\nreturn 301 https://$host;\r\n```\r\n\r\n这样当客户端访问http的时候，nginx就给他转到https上去，那访问了一次https后，以后浏览器自己就往https上转了，发到nginx的也就是https的请求了！\r\n\r\n另外如果为了避免点击劫持，还要添加 X-Frame-Options 头部，确保不会嵌入到frame 或 iframe，使得网站的内容不会嵌入到其他网站。\r\n\r\n```\r\nadd_header X-Frame-Options \"DENY\";\r\n```\r\n### 浏览器支持\r\nChromium和Google Chrome从4.0.211.0版本开始支持HSTS\r\n\r\nFirefox 4及以上版本\r\n\r\nOpera 12及以上版本\r\n\r\nSafari从OS X Mavericks起\r\n\r\nInternet Explorer从Windows 10技术预览版开始支持，之后微软又向IE11用户推送了支持HSTS的更新。\r\n\r\n### 缺点\r\nHSTS并不是HTTP会话劫持的完美解决方案。用户首次访问某网站是不受HSTS保护的。这是因为首次访问时，浏览器还未收到HSTS，所以仍有可能通过明文HTTP来访问。如果他们通过HTTP访问HSTS保护的网站时：\r\n\r\n- 以前从未访问过该网站\r\n- 最近重新安装了其操作系统\r\n- 最近重新安装了其浏览器\r\n- 切换到新的浏览器\r\n- 切换到一个新的设备如移动电话\r\n- 删除浏览器的缓存\r\n- 最近没访问过该站并且max-age过期了\r\n\r\n解决这个不足目前有两种方案\r\n\r\n一是浏览器预置HSTS域名列表，Google Chrome、Firefox、Internet Explorer和Spartan实现了这一方案。google坚持维护了一个“HSTS preload list”的站点域名和子域名，并通过https://hstspreload.appspot.com/提交其域名。该域名列表被分发和硬编码到主流的web浏览器。客户端访问此列表中的域名将主动的使用HTTPS，并拒绝使用HTTP访问该站点。\r\n一旦设置了STS头部或者提交了你的域名到HSTS预加载列表，这是不可能将其删除的。这是一个单向的决定使你的域名通过HTTPS可用的。\r\n\r\n二是将HSTS信息加入到域名系统记录中。但这需要保证DNS的安全性，也就是需要部署域名系统安全扩展。截至2014年这一方案没有大规模部署。\r\n\r\n由于HSTS会在一定时间后失效（有效期由max-age指定），所以浏览器是否强制HSTS策略取决于当前系统时间。部分操作系统经常通过网络时间协议更新系统时间，如Ubuntu每次连接网络时，OS X Lion每隔9分钟会自动连接时间服务器。攻击者可以通过伪造NTP信息，设置错误时间来绕过HSTS。解决方法是认证NTP信息，或者禁止NTP大幅度增减时间。比如Windows 8每7天更新一次时间，并且要求每次NTP设置的时间与当前时间不得超过15小时。\r\n\r\n****\r\n> 创建于 2017-05-18 成都，更新于 2017-05-18 成都\r\n\r\n>该文章在以下平台同步\r\n>- LIBERALMAN: https://www.liberalman.cn/article/91\r\n>- CSDN: http://blog.csdn.net/socho/article/details/72456008\r\n>- 简书: \r\n\r\n- [1]  引用 ',',技术,',55,0,'2017-05-19 08:32:24','2017-05-18 19:58:02',0,'',0,''),(92,1,'面试总结','这2个月各种面试心得总结','','',0,'### 滴滴一面\r\n\r\n1.设计一个算法，去掉c代码中的注释\r\n2.数据库中有10张表，表中的数据都是按ID这个关键字乱序排列的，找到前10个ID。\r\n\r\n\r\n# 常见问题\r\n1.看到你常用的语言是golang和c++，那你说说golang有什么优缺点，你为什么要用golang？\r\n答：\r\n优点：\r\n- 开发速度快，代码简洁\r\n- 编译快\r\n- 部署简单，一个静态可执行文件，除了glibc外无别的依赖，想想python的部署，对比下就知道了。\r\n- 高并发。goroutine和channel两大特性。用channel不用考虑锁，它帮你做了。\r\n- 自带完整的工具链，gofmt、golint、govet、goimports等\r\n\r\n缺点：\r\n- 错误处理机制太原始，panic这个东西不好用，不支持try catch。\r\n- 垃圾回收机制太垃圾，GC性能很差，会导致全程序停顿，即。对于游戏服务器、app服务器等，一次GC数秒难以接受（早期1.3之前没有做GC优化）。\r\n- 不支持泛型，例如C++中的模板，它没有，那个interface{}不怎么好用。\r\n- 简化声明\":=\"这种方式，让人不知道类型是什么，要点击进去看源码才行。\r\n- 语法太严格，末尾没有分号。\r\n- 不能用于强实时系统。\r\n- 第三方库太少，不成熟。\r\n\r\n2.看你说熟悉mysql，那你讲讲mysql如何优化？\r\n答：\r\n- 开启查询缓存。尽量不要用NOW()、RAND()这种不确定性的函数，而是在输入的时候就定量。\r\n- 使用explain分析查询语句的性能瓶颈。\r\n- 表不要太大，注意分割。比如有500w条记录，如果全是数字类型的保持800w条记录以下，有字符型的保持500w条以下，超过就要分表。\r\n\r\n3.TCP Server 为什么同一个端口可以建立多条socket连接？\r\nsimultaneous open 同时打开\r\n\r\n\r\n\r\n\r\n2017-05-02\r\n为什么要自己重写mqtt，而不用现成的。\r\n我作为程序员的习惯，喜欢自己造轮子。\r\n作为一个要对公司负责的人员，怎么能将自己的喜好用于工作中呢？\r\n\r\n为什么又来北京了？\r\n1.\r\n2.\r\n3.感情原因\r\n方便说下哪些公司有offer了吗？\r\n',',技术,',29,0,'2017-06-15 12:12:16','2017-07-11 14:54:27',0,'',0,''),(93,1,'Golang','Go语言，谷歌开发的，支持协程的新语言，很好用，简洁明了！','','',0,'Go原生自带pprof，但我们使用linux perf。\r\n\r\n\r\n每个P有一个队列，存放正在执行的G。\r\n\r\n1.system call，M阻塞，唤起（或新建）一个M执行别的G。\r\n2.channel call，M不阻塞，设置G为waitting，换别的G来执行。当上一个G调用完成，换别的可用M来执行。\r\n\r\n底层应用epoll做的。\r\n1.2之后，为不饿死别的goroutine，任意函数都可能触发scheduler。\r\n\r\n1.4之后，golang标准库开始自带内存池功能。\r\n\r\ngolang使用 Mark - and - sweep ，即 标记 - 清除 法。\r\n\r\n防御性编程\r\n\r\nappium 移动测试方案\r\n\r\n',',技术,',16,0,'2017-07-04 13:04:46','2017-07-04 14:07:05',0,'',0,''),(94,1,'Huawei','工作总结','','',0,'- 抢占式多任务——内核\r\n- 协作式多任务——用户\r\n\r\nOceanStor Device Manager\r\nOpenstack Swift 分布式对象存储系统\r\n\r\nFibre Channel 光线通道，1Gb/秒，多用于小型计算机到磁盘阵列。\r\nFusion Sphere 虚拟化软件，修改Openstack得到的。\r\nFusion Container 容器管理平台。\r\nFusion Storage 分布式存储管理软件。\r\n\r\n\r\n请求URL、时间戳、token三者合并加盐签名，服务器端校验有效性！\r\n\r\nIntegrated Product Development：IPD 流程\r\n华为的基础依然是IPD，虽然也在发展敏捷。\r\n\r\n\r\n# CNA-28\r\n这是我们常用的服务器，2个cpu啊，不知道他的操作系统是不是要专门订制，目前的个人电脑都是一个cpu，没法应对2个cpu的。\r\n\r\n\r\n\r\n| 设备  | 型号  | 备注  |\r\n| :------------ | :------------ | :------------ |\r\n| 内存  | Micron 16G | 总共6个，约等于 96G内存 |\r\n| CPU  | Intel(R) Xeon(R) CPU E5-2620 @ 2.00 GHz  | 2个cup，每个6核，12线程|\r\n| 逻辑磁盘  | 磁盘1：598G，本地磁盘，以scsi方式挂载。 磁盘2:300G，网络磁盘，IPSAN存储方式挂载 | 虚拟化硬盘不列出，操作系统是在本地硬盘上分了总共25G的空间，多个分区 |\r\n| 网卡 | Intel Corporation 82580 Gi 1000 Mb/s | 全双工，总共4个网卡 |\r\n| 图形处理器 | 无 | . |\r\n| USB | 无 | . |\r\n| PCI | 4个网卡 | . |\r\n\r\n\r\n\r\n微信使用了我们的X8600服务器。\r\n\r\nDJ  2012年买了华赛，得到fusion storage。\r\n存储下面都是X86架构的服务器，上面靠软件。\r\n磁盘成本占50%~60%\r\n灾/备\r\n\r\nGartner\r\nIDC\r\n\r\n\r\n数据中心建设，Uptime标准99.995%可用率，有柴油发电机作为断电缓切，柴油库也有。\r\n\r\n\r\n核心网：用于交换IP地址，让双方接上。\r\n传输网：传输具体数据。\r\n\r\n\r\n南向标准\r\n北向标准\r\n\r\n# Openstack\r\nkeystone 包括 单点登录 和 服务发现。\r\n\r\n\r\n中国文人的愿望：进则以儒治国，退则以道养身！\r\n\r\n\r\n\r\n',',技术,',18,0,'2017-07-04 21:44:21','2017-07-04 14:18:18',0,'',0,''),(95,1,'入职 NIO-蔚来汽车','入职 NIO-蔚来汽车','','',0,'入职第一天漂亮小妹妹就走了，好伤心！\r\n\r\n高档写字楼，环境很好，没有装修味道。hr介绍了公司情况，那些超跑看起来超级吊，不知道以后有没有机会去体验下！\r\n\r\n2017-07-11\r\n北京·蔚来汽车',',技术,',12,0,'2017-07-11 14:30:37','2017-07-11 14:32:41',0,'',0,''),(96,1,'Gossip 最终一致性算法','成员管理和消息广播 采用GOSSIP协议，支持ACL访问控制。这其实就是p2p协议。他主要要做的事情是，去中心化。','','',0,'Gossip算法因为Cassandra而名声大噪，Gossip看似简单，但要真正弄清楚其本质远没看起来那么容易。为了寻求Gossip的本质，下面的内容主要参考Gossip的原始论文：<<Efficient Reconciliation and Flow Control for Anti-Entropy Protocols>>。\r\n\r\n \r\n\r\n1. Gossip背景\r\n\r\nGossip算法如其名，灵感来自办公室八卦，只要一个人八卦一下，在有限的时间内所有的人都会知道该八卦的信息，这种方式也与病毒传播类似，因此Gossip有众多的别名“闲话算法”、“疫情传播算法”、“病毒感染算法”、“谣言传播算法”。\r\n\r\n但Gossip并不是一个新东西，之前的泛洪查找、路由算法都归属于这个范畴，不同的是Gossip给这类算法提供了明确的语义、具体实施方法及收敛性证明。\r\n\r\n2. Gossip特点\r\n\r\nGossip算法又被称为反熵（Anti-Entropy），熵是物理学上的一个概念，代表杂乱无章，而反熵就是在杂乱无章中寻求一致，这充分说明了Gossip的特点：在一个有界网络中，每个节点都随机地与其他节点通信，经过一番杂乱无章的通信，最终所有节点的状态都会达成一致。每个节点可能知道所有其他节点，也可能仅知道几个邻居节点，只要这些节可以通过网络连通，最终他们的状态都是一致的，当然这也是疫情传播的特点。\r\n\r\n要注意到的一点是，即使有的节点因宕机而重启，有新节点加入，但经过一段时间后，这些节点的状态也会与其他节点达成一致，也就是说，Gossip天然具有分布式容错的优点。\r\n\r\n3. Gossip本质\r\n\r\nGossip是一个带冗余的容错算法，更进一步，Gossip是一个最终一致性算法。虽然无法保证在某个时刻所有节点状态一致，但可以保证在”最终“所有节点一致，”最终“是一个现实中存在，但理论上无法证明的时间点。\r\n\r\n因为Gossip不要求节点知道所有其他节点，因此又具有去中心化的特点，节点之间完全对等，不需要任何的中心节点。实际上Gossip可以用于众多能接受“最终一致性”的领域：失败检测、路由同步、Pub/Sub、动态负载均衡。\r\n\r\n但Gossip的缺点也很明显，冗余通信会对网路带宽、CUP资源造成很大的负载，而这些负载又受限于通信频率，该频率又影响着算法收敛的速度，后面我们会讲在各种场合下的优化方法。\r\n\r\n4. Gossip节点的通信方式及收敛性\r\n\r\n根据原论文，两个节点（A、B）之间存在三种通信方式:\r\n\r\npush: A节点将数据(key,value,version)及对应的版本号推送给B节点，B节点更新A中比自己新的数据\r\npull：A仅将数据key,version推送给B，B将本地比A新的数据（Key,value,version）推送给A，A更新本地\r\npush/pull：与pull类似，只是多了一步，A再将本地比B新的数据推送给B，B更新本地\r\n如果把两个节点数据同步一次定义为一个周期，则在一个周期内，push需通信1次，pull需2次，push/pull则需3次，从效果上来讲，push/pull最好，理论上一个周期内可以使两个节点完全一致。直观上也感觉，push/pull的收敛速度是最快的。\r\n\r\n假设每个节点通信周期都能选择（感染）一个新节点，则Gossip算法退化为一个二分查找过程，每个周期构成一个平衡二叉树，收敛速度为O(n2 )，对应的时间开销则为O(logn )。这也是Gossip理论上最优的收敛速度。但在实际情况中最优收敛速度是很难达到的，假设某个节点在第i个周期被感染的概率为pi ,第i+1个周期被感染的概率为pi+1 ，则pull的方式:\r\n\r\npull\r\n\r\n而push为：\r\n\r\npush\r\n\r\n显然pull的收敛速度大于push，而每个节点在每个周期被感染的概率都是固定的p(0<p<1)，因此Gossip算法是基于p的平方收敛，也成为概率收敛，这在众多的一致性算法中是非常独特的。\r\n\r\n个Gossip的节点的工作方式又分两种：\r\n\r\nAnti-Entropy（反熵）：以固定的概率传播所有的数据\r\nRumor-Mongering（谣言传播）：仅传播新到达的数据\r\nAnti-Entropy模式有完全的容错性，但有较大的网络、CPU负载；Rumor-Mongering模式有较小的网络、CPU负载，但必须为数据定义”最新“的边界，并且难以保证完全容错，对失败重启且超过”最新“期限的节点，无法保证最终一致性，或需要引入额外的机制处理不一致性。我们后续着重讨论Anti-Entropy模式的优化。\r\n\r\n5. Anti-Entropy的协调机制\r\n\r\n协调机制是讨论在每次2个节点通信时，如何交换数据能达到最快的一致性，也即消除两个节点的不一致性。上面所讲的push、pull等是通信方式，协调是在通信方式下的数据交换机制。协调所面临的最大问题是，因为受限于网络负载，不可能每次都把一个节点上的数据发送给另外一个节点，也即每个Gossip的消息大小都有上限。在有限的空间上有效率地交换所有的消息是协调要解决的主要问题。\r\n\r\n在讨论之前先声明几个概念：\r\n\r\n令N = {p,q,s,...}为需要gossip通信的server集合，有界大小\r\n令(p1,p2,...)是宿主在节点p上的数据，其中数据有(key,value,version)构成，q的规则与p类似。\r\n为了保证一致性，规定数据的value及version只有宿主节点才能修改，其他节点只能间接通过Gossip协议来请求数据对应的宿主节点修改。\r\n\r\n5.1 精确协调（Precise Reconciliation）\r\n\r\n精确协调希望在每次通信周期内都非常准确地消除双方的不一致性，具体表现为相互发送对方需要更新的数据，因为每个节点都在并发与多个节点通信，理论上精确协调很难做到。精确协调需要给每个数据项独立地维护自己的version，在每次交互是把所有的(key,value,version)发送到目标进行比对，从而找出双方不同之处从而更新。但因为Gossip消息存在大小限制，因此每次选择发送哪些数据就成了问题。当然可以随机选择一部分数据，也可确定性的选择数据。对确定性的选择而言，可以有最老优先（根据版本）和最新优先两种，最老优先会优先更新版本最新的数据，而最新更新正好相反，这样会造成老数据始终得不到机会更新，也即饥饿。\r\n\r\n当然，开发这也可根据业务场景构造自己的选择算法，但始终都无法避免消息量过多的问题。\r\n\r\n5.2 整体协调（Scuttlebutt Reconciliation）\r\n\r\n整体协调与精确协调不同之处是，整体协调不是为每个数据都维护单独的版本号，而是为每个节点上的宿主数据维护统一的version。比如节点P会为(p1,p2,...)维护一个一致的全局version，相当于把所有的宿主数据看作一个整体，当与其他节点进行比较时，只需必须这些宿主数据的最高version，如果最高version相同说明这部分数据全部一致，否则再进行精确协调。\r\n\r\n整体协调对数据的选择也有两种方法：\r\n\r\n广度优先：根据整体version大小排序，也称为公平选择\r\n深度优先：根据包含数据多少的排序，也称为非公平选择。因为后者更有实用价值，所以原论文更鼓励后者\r\n6. Cassandra中的实现\r\n\r\n经过验证，Cassandra实现了基于整体协调的push/push模式，有几个组件：\r\n\r\n三条消息分别对应push/pull的三个阶段：\r\n\r\nGossipDigitsMessage\r\nGossipDigitsAckMessage\r\nGossipDigitsAck2Message\r\n还有三种状态：\r\n\r\nEndpointState：维护宿主数据的全局version，并封装了HeartBeat和ApplicationState\r\nHeartBeat：心跳信息\r\nApplicationState：系统负载信息（磁盘使用率）\r\nCassandra主要是使用Gossip完成三方面的功能：\r\n\r\n失败检测\r\n动态负载均衡\r\n去中心化的弹性扩展\r\n7. 总结\r\n\r\nGossip是一种去中心化、容错而又最终一致性的绝妙算法，其收敛性不但得到证明还具有指数级的收敛速度。使用Gossip的系统可以很容易的把Server扩展到更多的节点，满足弹性扩展轻而易举。\r\n\r\n唯一的缺点是收敛是最终一致性，不使用那些强一致性的场景，比如2pc。\r\n\r\n',',技术,',17,0,'2017-07-13 03:38:22','2017-07-12 11:41:59',0,'',1,'http://www.cnblogs.com/xingzc/p/6165084.html'),(97,1,'服务发现：Zookeeper vs etcd vs Consul','本文对比了Zookeeper、etcd和Consul三种服务发现工具，探讨了最佳的服务发现解决方案，仅供参考。','','',0,'如果使用预定义的端口，服务越多，发生冲突的可能性越大，毕竟，不可能有两个服务监听同一个端口。管理一个拥挤的比方说被几百个服务所使用的所有端口的列表，本身就是一个挑战，添加到该列表后，这些服务需要的数据库和数量会日益增多。因此我们应该部署无需指定端口的服务，并且让Docker为我们分配一个随机的端口。唯一的问题是我们需要发现端口号，并且让别人知道。\r\nsingle-node-docker.png\r\n\r\n当我们开始在一个分布式系统上部署服务到其中一台服务器上时，事情会变得更加复杂，我们可以选择预先定义哪台服务器运行哪个服务的方式，但这会导致很多问题。我们应该尽我们所能尽量利用服务器资源，但是如果预先定义每个服务的部署位置，那么要实现尽量利用服务器资源是几乎不可能的。另一个问题是服务的自动伸缩将会非常困难，更不用说自动恢复了，比方说服务器故障。另一方面，如果我们将服务部署到某台只有最少数量的容器在运行的服务器上，我们需要添加IP地址到数据列表中，这些数据需要可以被发现并存储在某处。\r\nmulti-node-docker.png\r\n\r\n当我们需要存储和发现一些与正在工作的服务相关的信息时，还有很多其他的例子。\r\n\r\n为了能够定位服务，我们需要至少接下来的两个有用的步骤。\r\n服务注册——该步骤存储的信息至少包括正在运行的服务的主机和端口信息\r\n服务发现——该步骤允许其他用户可以发现在服务注册阶段存储的信息。\r\n\r\n除了上述的步骤，我们还需要考虑其他方面。如果一个服务停止工作并部署/注册了一个新的服务实例，那么该服务是否应该注销呢？当有相同服务的多个副本时咋办？我们该如何做负载均衡呢？如果一个服务器宕机了咋办？所有这些问题都与注册和发现阶段紧密关联。现在，我们限定只在服务发现的范围里（常见的名字，围绕上述步骤）以及用于服务发现任务的工具，它们中的大多数采用了高可用的分布式键/值存储。\r\n服务发现工具\r\n\r\n服务发现工具的主要目标是用来服务查找和相互对话，为此该工具需要知道每个服务，这不是一个新概念，在Docker之前就已经存在很多类似的工具了，然而，容器带给了这些工具一个全新水平的需求。\r\n\r\n服务发现背后的基本思想是对于服务的每一个新实例（或应用程序），能够识别当前环境和存储相关信息。存储的注册表信息本身通常采用键/值对的格式，由于服务发现经常用于分布式系统，所以要求这些信息可伸缩、支持容错和分布式集群中的所有节点。这种存储的主要用途是给所有感兴趣的各方提供最起码诸如服务IP地址和端口这样的信息，用于它们之间的相互通讯，这些数据还经常扩展到其它类型的信息服务发现工具倾向于提供某种形式的API，用于服务自身的注册以及服务信息的查找。\r\n\r\n比方说我们有两个服务，一个是提供方，另一个是第一个服务的消费者，一旦部署了服务提供方，就需要在服务发现注册表中存储其信息。接着，当消费者试图访问服务提供者时，它首先查询服务注册表，使用获取到的IP地址和端口来调用服务提供者。为了与注册表中的服务提供方的具体实现解耦，我们常常采用某种代理服务。这样消费者总是向固定IP地址的代理请求信息，代理再依次使用服务发现来查找服务提供方信息并重定向请求，在本文中我们稍后通过反向代理来实现。现在重要的是要理解基于三种角色（服务消费者、提供者和代理）的服务发现流程。\r\n\r\n服务发现工具要查找的是数据，至少我们应该能够找出服务在哪里？服务是否健康和可用？配置是什么样的？既然我们正在多台服务器上构建一个分布式系统，那么该工具需要足够健壮，保证其中一个节点的宕机不会危及数据，同时，每个节点应该有完全相同的数据副本，进一步地，我们希望能够以任何顺序启动服务、杀死服务或者替换服务的新版本，我们还应该能够重新配置服务并且查看到数据相应的变化。\r\n\r\n让我们看一下一些常用的选项来完成我们上面设定的目标。\r\n手动配置\r\n\r\n大多数服务仍然是需要手动管理的，我们预先决定在何处部署服务、如何配置和希望不管什么原因，服务都将继续正常工作，直到天荒地老。这样的目标不是可以轻易达到的。部署第二个服务实例意味着我们需要启动全程的手动处理，我们需要引入一台新的服务器，或者找出哪一台服务器资源利用率较低，然后创建一个新的配置集并启动服务。情况或许会变得越来越复杂，比方说，硬件故障导致的手动管理下的反应时间变得很慢。可见性是另外一个痛点，我们知道什么是静态配置，毕竟是我们预先准备好的，然而，大多数的服务有很多动态生成的信息，这些信息不是轻易可见的，也没有一个单独的地方供我们在需要时参考这些数据。\r\n\r\n反应时间会不可避免的变慢，鉴于存在许多需要手动处理的移动组件，故障恢复和监控也会变得非常难以管理。\r\n\r\n尽管在过去或者当服务/服务器数量很少的时候有借口不做这项工作，随着服务发现工具的出现，这个借口已经不存在了。\r\nZookeeper\r\n\r\nZookeeper是这种类型的项目中历史最悠久的之一，它起源于Hadoop，帮助在Hadoop集群中维护各种组件。它非常成熟、可靠，被许多大公司（YouTube、eBay、雅虎等）使用。其数据存储的格式类似于文件系统，如果运行在一个服务器集群中，Zookeper将跨所有节点共享配置状态，每个集群选举一个领袖，客户端可以连接到任何一台服务器获取数据。\r\n\r\nZookeeper的主要优势是其成熟、健壮以及丰富的特性，然而，它也有自己的缺点，其中采用Java开发以及复杂性是罪魁祸首。尽管Java在许多方面非常伟大，然后对于这种类型的工作还是太沉重了，Zookeeper使用Java以及相当数量的依赖使其对于资源竞争非常饥渴。因为上述的这些问题，Zookeeper变得非常复杂，维护它需要比我们期望从这种类型的应用程序中获得的收益更多的知识。这部分地是由于丰富的特性反而将其从优势转变为累赘。应用程序的特性功能越多，就会有越大的可能性不需要这些特性，因此，我们最终将会为这些不需要的特性付出复杂度方面的代价。\r\n\r\nZookeeper为其他项目相当大的改进铺平了道路，“大数据玩家“在使用它，因为没有更好的选择。今天，Zookeeper已经老态龙钟了，我们有了更好的选择。\r\netcd\r\n\r\netcd是一个采用HTTP协议的健/值对存储系统，它是一个分布式和功能层次配置系统，可用于构建服务发现系统。其很容易部署、安装和使用，提供了可靠的数据持久化特性。它是安全的并且文档也十分齐全。\r\n\r\netcd比Zookeeper是比更好的选择，因为它很简单，然而，它需要搭配一些第三方工具才可以提供服务发现功能。\r\netcd.png\r\n\r\n现在，我们有一个地方来存储服务相关信息，我们还需要一个工具可以自动发送信息给etcd。但在这之后，为什么我们还需要手动把数据发送给etcd呢？即使我们希望手动将信息发送给etcd，我们通常情况下也不会知道是什么信息。记住这一点，服务可能会被部署到一台运行最少数量容器的服务器上，并且随机分配一个端口。理想情况下，这个工具应该监视所有节点上的Docker容器，并且每当有新容器运行或者现有的一个容器停止的时候更新etcd，其中的一个可以帮助我们达成目标的工具就是Registrator。\r\nRegistrator\r\n\r\nRegistrator通过检查容器在线或者停止运行状态自动注册和去注册服务，它目前支持etcd、Consul和SkyDNS 2。\r\n\r\nRegistrator与etcd是一个简单但是功能强大的组合，可以运行很多先进的技术。每当我们打开一个容器，所有数据将被存储在etcd并传播到集群中的所有节点。我们将决定什么信息是我们的。\r\netcd-registrator.png\r\n\r\n上述的拼图游戏还缺少一块，我们需要一种方法来创建配置文件，与数据都存储在etcd，通过运行一些命令来创建这些配置文件。\r\nConfd\r\n\r\nConfd是一个轻量级的配置管理工具，常见的用法是通过使用存储在etcd、consul和其他一些数据登记处的数据保持配置文件的最新状态，它也可以用来在配置文件改变时重新加载应用程序。换句话说，我们可以用存储在etcd（或者其他注册中心）的信息来重新配置所有服务。\r\netcd-registrator-confd.png\r\n\r\n对于etcd、Registrator和Confd组合的最后的思考\r\n\r\n当etcd、Registrator和Confd结合时，可以获得一个简单而强大的方法来自动化操作我们所有的服务发现和需要的配置。这个组合还展示了“小”工具正确组合的有效性，这三个小东西可以如我们所愿正好完成我们需要达到的目标，若范围稍微小一些，我们将无法完成我们面前的目标，而另一方面如果他们设计时考虑到更大的范围，我们将引入不必要的复杂性和服务器资源开销。\r\n\r\n在我们做出最后的判决之前，让我们看看另一个有相同目标的工具组合，毕竟，我们不应该满足于一些没有可替代方案的选择。\r\nConsul\r\n\r\nConsul是强一致性的数据存储，使用gossip形成动态集群。它提供分级键/值存储方式，不仅可以存储数据，而且可以用于注册器件事各种任务，从发送数据改变通知到运行健康检查和自定义命令，具体如何取决于它们的输出。\r\n\r\n与Zookeeper和etcd不一样，Consul内嵌实现了服务发现系统，所以这样就不需要构建自己的系统或使用第三方系统。这一发现系统除了上述提到的特性之外，还包括节点健康检查和运行在其上的服务。\r\n\r\nZookeeper和etcd只提供原始的键/值队存储，要求应用程序开发人员构建他们自己的系统提供服务发现功能。而Consul提供了一个内置的服务发现的框架。客户只需要注册服务并通过DNS或HTTP接口执行服务发现。其他两个工具需要一个亲手制作的解决方案或借助于第三方工具。\r\n\r\nConsul为多种数据中心提供了开箱即用的原生支持，其中的gossip系统不仅可以工作在同一集群内部的各个节点，而且还可以跨数据中心工作。\r\nconsul1.png\r\n\r\nConsul还有另一个不错的区别于其他工具的功能，它不仅可以用来发现已部署的服务以及其驻留的节点信息，还通过HTTP请求、TTLs（time-to-live）和自定义命令提供了易于扩展的健康检查特性。\r\nRegistrator\r\n\r\nRegistrator有两个Consul协议，其中consulkv协议产生类似于etcd协议的结果。\r\n\r\n除了通常的IP和端口存储在etcd或consulkv协议中之外，Registrator consul协议存储了更多的信息，我们可以得到服务运行节点的信息，以及服务ID和名称。我们也可以借助于一些额外的环境变量按照一定的标记存储额外的信息。\r\nconsul-registrator1.png\r\n\r\nConsul-template\r\n\r\nconfd可以像和etce搭配一样用于Consul，不过Consul有自己的模板服务，其更适配Consul。\r\n\r\n通过从Consul获得的信息，Consul-template是一个非常方便的创建文件的途径，还有一个额外的好处就是在文件更新后可以运行任意命令，正如confd，Consul-template也可以使用Go模板格式。\r\nconsul-registrator-consul-template1.png\r\n\r\nConsul健康检查、Web界面和数据中心\r\n\r\n监控集群节点和服务的健康状态与测试和部署它们一样的重要。虽然我们应该向着拥有从来没有故障的稳定的环境努力，但我们也应该承认，随时会有意想不到的故障发生，时刻准备着采取相应的措施。例如我们可以监控内存使用情况，如果达到一定的阈值，那么迁移一些服务到集群中的另外一个节点，这将是在发生“灾难”前执行的一个预防措施。另一方面，并不是所有潜在的故障都可以被及时检测到并采取措施。单个服务可能会齿白，一个完整的节点也可能由于硬件故障而停止工作。在这种情况下我们应该准备尽快行动，例如一个节点替换为一个新的并迁移失败的服务。Consul有一个简单的、优雅的但功能强大的方式进行健康检查，当健康阀值达到一定数目时，帮助用户定义应该执行的操作。\r\n\r\n如果用户Google搜索“etcd ui”或者“etec dashboard”时，用户可能看到只有几个可用的解决方案，可能会问为什么我们还没有介绍给用户，这个原因很简单，etcd只是键/值对存储，仅此而已。通过一个UI呈现数据没有太多的用处，因为我们可以很容易地通过etcdctl获得这些数据。这并不意味着etcd UI是无用的，但鉴于其有限的使用范围，它不会产生多大影响。\r\n\r\nConsu不仅仅是一个简单的键/值对存储，正如我们已经看到的，除了存储简单的键/值对，它还有一个服务的概念以及所属的数据。它还可以执行健康检查，因此成为一个好的候选dashboard，在上面可以看到我们的节点的状态和运行的服务。最后，它支持了多数据中心的概念。所有这些特性的结合让我们从不同的角度看到引入dashboard的必要性。\r\n\r\n通过Consul Web界面，用户可以查看所有的服务和节点、监控健康检查状态以及通过切换数据中心读取设置键/值对数据。\r\nconsul-nodes.png\r\n\r\n对于Consul、Registrator、Template、健康检查和Web UI的最终思考\r\n\r\nConsul以及上述我们一起探讨的工具在很多情况下提供了比etcd更好的解决方案。这是从内心深处为了服务架构和发现而设计的方案，简单而强大。它提供了一个完整的同时不失简洁的解决方案，在许多情况下，这是最佳的服务发现以及满足健康检查需求的工具。\r\n结论\r\n\r\n所有这些工具都是基于相似的原则和架构，它们在节点上运行，需要仲裁来运行，并且都是强一致性的，都提供某种形式的键/值对存储。\r\n\r\nZookeeper是其中最老态龙钟的一个，使用年限显示出了其复杂性、资源利用和尽力达成的目标，它是为了与我们评估的其他工具所处的不同时代而设计的（即使它不是老得太多）。\r\n\r\netcd、Registrator和Confd是一个非常简单但非常强大的组合，可以解决大部分问题，如果不是全部满足服务发现需要的话。它还展示了我们可以通过组合非常简单和特定的工具来获得强大的服务发现能力，它们中的每一个都执行一个非常具体的任务，通过精心设计的API进行通讯，具备相对自治工作的能力，从架构和功能途径方面都是微服务方式。\r\n\r\nConsul的不同之处在于无需第三方工具就可以原生支持多数据中心和健康检查，这并不意味着使用第三方工具不好。实际上，在这篇博客里我们通过选择那些表现更佳同时不会引入不必要的功能的的工具，尽力组合不同的工具。使用正确的工具可以获得最好的结果。如果工具引入了工作不需要的特性，那么工作效率反而会下降，另一方面，如果工具没有提供工作所需要的特性也是没有用的。Consul很好地权衡了权重，用尽量少的东西很好的达成了目标。\r\n\r\nConsul使用gossip来传播集群信息的方式，使其比etcd更易于搭建，特别是对于大的数据中心。将存储数据作为服务的能力使其比etcd仅仅只有健/值对存储的特性更加完整、更有用（即使Consul也有该选项）。虽然我们可以在etcd中通过插入多个键来达成相同的目标，Consul的服务实现了一个更紧凑的结果，通常只需要一次查询就可以获得与服务相关的所有数据。除此之外，Registrator很好地实现了Consul的两个协议，使其合二为一，特别是添加Consul-template到了拼图中。Consul的Web UI更是锦上添花般地提供了服务和健康检查的可视化途径。\r\n\r\n我不能说Consul是一个明确的赢家，而是与etcd相比其有一个轻微的优势。服务发现作为一个概念，以及作为工具都很新，我们可以期待在这一领域会有许多的变化。秉承开放的心态，大家可以对本文的建议持保留态度，尝试不同的工具然后做出自己的结论。\r\n\r\n原文链接：Service Discovery: Zookeeper vs etcd vs Consul（翻译：胡震）\r\n\r\n=================================================================\r\n\r\n译者介绍： 胡震， 曾任互联网金融创业公司首席架构师&CTO，现在平安金融科技中心架构组负责技术管理和架构设计工作。','',19,0,'2017-07-12 12:12:35','2017-07-12 12:12:35',0,'',1,'http://www.dockone.io/article/667'),(98,1,'eureka的惊群效应','最近一口气发布好几个服务，涉及大约9个实例同时更新，而总共有16个服务实例注册，出现了eureka开启自我保护模式，过了好几分钟还没有恢复。','','',0,'序\r\n\r\n最近一口气发布好几个服务，涉及大约9个实例同时更新，而总共有16个服务实例注册，出现了eureka开启自我保护模式，过了好几分钟还没有恢复。\r\n\r\n分析\r\n\r\n设定的eureka.instance.leaseRenewalIntervalInSeconds为10秒。eureka为2个实例，eureka.server.renewalPercentThreshold为0.85，而eureka.server.renewalThresholdUpdateIntervalMs为900000。\r\n\r\n按这么算，正常的阈值为27，而当9个服务重启，则瞬间注册的实例为16+9=25，那么此时阈值就更新为42，而启动的时候，旧的9个实例相续关闭，而新的9个实例相续还没有启动起来，那么实际每分钟能发送心跳的数为7*6=42.\r\n\r\n是否开启自我保护\r\n\r\neureka-core-1.4.12-sources.jar!/com/netflix/eureka/registry/PeerAwareInstanceRegistryImpl.java\r\n```\r\n@Override\r\n    public boolean isLeaseExpirationEnabled() {\r\n        if (!isSelfPreservationModeEnabled()) {\r\n            // The self preservation mode is disabled, hence allowing the instances to expire.\r\n            return true;\r\n        }\r\n        return numberOfRenewsPerMinThreshold > 0 && getNumOfRenewsInLastMin() > numberOfRenewsPerMinThreshold;\r\n    }\r\n```\r\n最近1分钟收到的心跳数没有大于阈值，那么这个时候，就开启自我保护了。\r\n\r\n小结\r\n\r\n这个有点类似惊群问题(thundering herd):\r\n\r\n故障后的服务恢复上线后，如果有大量其他服务正在同一个重试窗口内重试，此时很容易给系统造成巨大压力。这种情况也叫惊群效应（Thundering herd），使用随机化的重试窗口可轻松避免这种问题。如果基础架构没有实施断路开关，建议将随机化重试窗口与指数退避（Exponential backoff）配合使用以便让请求进一步分散。\r\n\r\n同理，对于使用eureka作为服务发现的应用来说，在部署生产的要十分小心，要么每次部署的实例不要太多，要么修改eureka的相关参数，比如renewalPercentThreshold或者renewalThresholdUpdateIntervalMs。\r\n\r\n',',技术,',14,0,'2017-07-12 12:29:33','2017-07-12 12:29:34',0,'',1,'https://my.oschina.net/go4it/blog/983092'),(99,1,'Raft算法','过去, Paxos一直是分布式协议的标准，但是Paxos难于理解，更难以实现，Google的分布式锁系统Chubby作为Paxos实现曾经遭遇到很多坑。','','',0,'raft动画实现\r\nhttp://thesecretlivesofdata.com/raft/\r\n\r\n过去, Paxos一直是分布式协议的标准，但是Paxos难于理解，更难以实现，Google的分布式锁系统Chubby作为Paxos实现曾经遭遇到很多坑。\r\n\r\n来自Stanford的新的分布式协议研究称为Raft，它是一个为真实世界应用建立的协议，主要注重协议的落地性和可理解性。\r\n\r\n　　在了解Raft之前，我们先了解Consensus一致性这个概念，它是指多个服务器在状态达成一致，但是在一个分布式系统中，因为各种意外可能，有的服务器可能会崩溃或变得不可靠，它就不能和其他服务器达成一致状态。这样就需要一种Consensus协议，一致性协议是为了确保容错性，也就是即使系统中有一两个服务器当机，也不会影响其处理过程。\r\n\r\n　　为了以容错方式达成一致，我们不可能要求所有服务器100%都达成一致状态，只要超过半数的大多数服务器达成一致就可以了，假设有N台服务器，N/2 +1 就超过半数，代表大多数了。\r\n\r\n　　Paxos和Raft都是为了实现Consensus一致性这个目标，这个过程如同选举一样，参选者需要说服大多数选民(服务器)投票给他，一旦选定后就跟随其操作。Paxos和Raft的区别在于选举的具体过程不同。\r\n\r\n　　在Raft中，任何时候一个服务器可以扮演下面角色之一：\r\n- Leader: 处理所有客户端交互，日志复制等，一般一次只有一个Leader.\r\n- Follower: 类似选民，完全被动\r\n- Candidate候选人: 类似Proposer律师，可以被选为一个新的领导人。\r\n\r\nRaft阶段分为两个，首先是选举过程，然后在选举出来的领导人带领进行正常操作，比如日志复制等。下面用图示展示这个过程：\r\n\r\n1. 任何一个服务器都可以成为一个候选者Candidate，它向其他服务器Follower发出要求选举自己的请求：\r\n![vote for me](http://simage.jdon.com/idea/raft1.png)\r\n\r\n2. 其他服务器同意了，发出OK。\r\n![OK](http://simage.jdon.com/idea/raft2.png)\r\n\r\n注意如果在这个过程中，有一个Follower当机，没有收到请求选举的要求，因此候选者可以自己选自己，只要达到N/2 + 1 的大多数票，候选人还是可以成为Leader的。\r\n\r\n3. 这样这个候选者就成为了Leader领导人，它可以向选民也就是Follower们发出指令，比如进行日志复制。\r\n![Log entries](http://simage.jdon.com/idea/raft3.png)\r\n\r\n4. 以后通过心跳进行日志复制的通知\r\n![Heartbeats](http://simage.jdon.com/idea/raft4.png)\r\n\r\n5. 如果一旦这个Leader当机崩溃了，那么Follower中有一个成为候选者，发出邀票选举。\r\n![Vote for me](http://simage.jdon.com/idea/raft5.png)\r\n\r\n6. 别的Follower同意后，其成为Leader，继续承担日志复制等指导工作：\r\n![new leader](http://simage.jdon.com/idea/raft6.png)\r\n\r\n值得注意的是，整个选举过程是有一个时间限制的，如下图：\r\n![time out](http://simage.jdon.com/idea/raft7.png)\r\n\r\n　　Splite Vote是因为如果同时有两个候选人向大家邀票，这时通过类似加时赛来解决，两个候选者在一段timeout比如300ms互相不服气的等待以后，因为双方得到的票数是一样的，一半对一半，那么在300ms以后，再由这两个候选者发出邀票，这时同时的概率大大降低，那么首先发出邀票的的候选者得到了大多数同意，成为领导者Leader，而另外一个候选者后来发出邀票时，那些Follower选民已经投票给第一个候选者，不能再投票给它，它就成为落选者了，最后这个落选者也成为普通Follower一员了。\r\n\r\n \r\n\r\n日志复制\r\n\r\n　　下面以日志复制为例子说明Raft算法，假设Leader领导人已经选出，这时客户端发出增加一个日志的要求，比如日志是\"sally\"：\r\n\r\n\r\n\r\n2. Leader要求Followe遵从他的指令，都将这个新的日志内容追加到他们各自日志中：\r\n\r\n\r\n\r\n3.大多数follower服务器将日志写入磁盘文件后，确认追加成功，发出Commited Ok:\r\n\r\n\r\n\r\n4. 在下一个心跳heartbeat中，Leader会通知所有Follwer更新commited 项目。\r\n\r\n对于每个新的日志记录，重复上述过程。\r\n\r\n如果在这一过程中，发生了网络分区或者网络通信故障，使得Leader不能访问大多数Follwers了，那么Leader只能正常更新它能访问的那些Follower服务器，而大多数的服务器Follower因为没有了Leader，他们重新选举一个候选者作为Leader，然后这个Leader作为代表于外界打交道，如果外界要求其添加新的日志，这个新的Leader就按上述步骤通知大多数Followers，如果这时网络故障修复了，那么原先的Leader就变成Follower，在失联阶段这个老Leader的任何更新都不能算commit，都回滚，接受新的Leader的新的更新。\r\n\r\n',',技术,',19,0,'2017-07-12 22:45:08','2017-07-12 16:18:42',0,'http://simage.jdon.com/idea/raft1.png',1,'http://www.jdon.com/artichect/raft.html'),(100,1,'基于微服务和Docker容器技术的PaaS云平台架构设计','基于微服务架构和Docker容器技术的PaaS云平台建设目标是给我们的开发人员提供一套服务快速开发、部署、运维管理、持续开发持续集成的流程。平台提供基础设施、中间件、数据服务、云服务器等资源，开发人员只需要开发业务代码并提交到平台代码库，做一些必要的配置，系统会自动构建、部署，实现应用的敏捷开发、快速迭代。在系统架构上，PaaS云平台主要分为微服务架构、Docker容器技术、DveOps三部分，这篇文章重点介绍微服务架构的实施。','','',0,'基于微服务架构和Docker容器技术的PaaS云平台建设目标是给我们的开发人员提供一套服务快速开发、部署、运维管理、持续开发持续集成的流程。平台提供基础设施、中间件、数据服务、云服务器等资源，开发人员只需要开发业务代码并提交到平台代码库，做一些必要的配置，系统会自动构建、部署，实现应用的敏捷开发、快速迭代。在系统架构上，PaaS云平台主要分为微服务架构、Docker容器技术、DveOps三部分，这篇文章重点介绍微服务架构的实施。\r\n实施微服务需要投入大量的技术力量来开发基础设施，这对很多公司来说显然是不现实的，别担心，业界已经有非常优秀的开源框架供我们参考使用。目前业界比较成熟的微服务框架有Netflix、Spring Cloud和阿里的Dubbo等。\r\nSpring Cloud是基于Spring Boot的一整套实现微服务的框架，它提供了开发微服务所需的组件，跟Spring Boot一起使用的话开发微服务架构的云服务会变的很方便。Spring Cloud包含很多子框架，其中Spring Cloud Netflix是其中的一套框架，在我们的微服务架构设计中，就使用了很多Spring Cloud Netflix框架的组件。\r\nSpring Cloud Netflix项目的时间还不长，相关的文档资料很少，博主当时研究这套框架啃了很多英文文档，简直痛苦不堪。对于刚开始接触这套框架的同学，要搭建一套微服务应用架构，可能会不知道如何下手，接下来介绍我们的微服务架构搭建过程以及需要那些框架或组件来支持微服务架构。\r\n为了直接明了的展示微服务架构的组成及原理，博主画了一张系统架构图，如下：\r\n\r\n![微服务架构](http://img.mp.itc.cn/upload/20170627/79f7eaef18e04e339cdfba1e3962e401_th.jpg)\r\n\r\n从上图可以看出，微服务访问大致路径为：外部请求 → 负载均衡(https转http) → 服务网关（GateWay）→ 微服务 → 数据服务/消息服务。服务网关和微服务都会用到服务注册和发现来调用依赖的其他服务，各服务集群都能通过配置中心服务来获得配置信息。\r\n服务网关（GateWay）\r\n网关是外界系统（如：客户端浏览器、移动设备等）和企业内部系统之间的一道门，所有的客户端请求通过网关访问后台服务。为了应对高并发访问，服务网关以集群形式部署，这就意味着需要做负载均衡，我们采用了亚马逊EC2作为虚拟云服务器，采用ELB（Elastic Load Balancing）做负载均衡。\r\nEC2具有自动配置容量功能，当用户流量达到尖峰，EC2可以自动增加更多的容量以维持虚拟主机的性能。ELB弹性负载均衡，在多个实例间自动分配应用的传入流量。为了保证安全性，客户端请求需要使用https加密保护，这就需要我们进行SSL卸载,使用Nginx对加密请求进行卸载处理。外部请求经过ELB负载均衡后路由到GateWay集群中的某个GateWay服务，由GateWay服务转发到微服务。服务网关作为内部系统的边界，它有以下基本能力：\r\n动态路由：动态的将请求路由到所需要的后端服务集群。虽然内部是复杂的分布式微服务网状结构，但是外部系统从网关看就像是一个整体服务，网关屏蔽了后端服务的复杂性。\r\n限流和容错：为每种类型的请求分配容量，当请求数量超过阀值时抛掉外部请求，限制流量，保护后台服务不被大流量冲垮；党内部服务出现故障时直接在边界创建一些响应，集中做容错处理，而不是将请求转发到内部集群，保证用户良好的体验。\r\n身份认证和安全性控制：对每个外部请求进行用户认证，拒绝没有通过认证的请求，还能通过访问模式分析，实现反爬虫功能。\r\n监控：网关可以收集有意义的数据和统计，为后台服务优化提供数据支持。\r\n访问日志：网关可以收集访问日志信息，比如访问的是哪个服务？处理过程（出现什么异常）和结果？花费多少时间？通过分析日志内容，对后台系统做进一步优化。\r\n我们采用Spring Cloud Netflix框架的开源组件Zuul来实现网关服务。Zuul使用一系列不同类型的过滤器（Filter），通过重写过滤器，使我们能够灵活的实现网关（GateWay）的各种功能。\r\n服务注册与发现\r\n由于微服务架构是由一系列职责单一的细粒度服务构成的网状结构，服务之间通过轻量机制进行通信，这就引入了服务注册与发现的问题，服务的提供方要注册报告服务地址，服务调用放要能发现目标服务。我们的微服务架构中使用了Eureka组件来实现服务的注册与发现。\r\n所有的微服务（通过配置Eureka服务信息）到Eureka服务器中进行注册，并定时发送心跳进行健康检查，Eureka默认配置是30秒发送一次心跳，表明服务仍然处于存活状态，发送心跳的时间间隔可以通过Eureka的配置参数自行配置，Eureka服务器在接收到服务实例的最后一次心跳后，需要等待90秒（默认配置90秒，可以通过配置参数进行修改）后，才认定服务已经死亡（即连续3次没有接收到心跳），在Eureka自我保护模式关闭的情况下会清除该服务的注册信息。\r\n所谓的自我保护模式是指，出现网络分区、Eureka在短时间内丢失过多的服务时，会进入自我保护模式，即一个服务长时间没有发送心跳，Eureka也不会将其删除。自我保护模式默认为开启，可以通过配置参数将其设置为关闭状态。\r\nEureka服务以集群的方式部署（在博主的另一篇文章中详细介绍了Eureka集群的部署方式，http://t.cn/RItpiej），集群内的所有Eureka节点会定时自动同步微服务的注册信息，这样就能保证所有的Eureka服务注册信息保持一致。那么在Eureka集群里，Eureka节点是如何发现其他节点的呢？我们通过DNS服务器来建立所有Eureka节点的关联，在部署Eureka集群之外还需要搭建DNS服务器。\r\n当网关服务转发外部请求或者是后台微服务之间相互调用时，会去Eureka服务器上查找目标服务的注册信息，发现目标服务并进行调用，这样就形成了服务注册与发现的整个流程。Eureka的配置参数数量很多，多达上百个，博主会在另外的文章里详细说明。\r\n微服务部署\r\n微服务是一系列职责单一、细粒度的服务，是将我们的业务进行拆分为独立的服务单元，伸缩性好，耦合度低，不同的微服务可以用不同的语言开发，每一个服务处理的单一的业务。微服务可以划分为前端服务（也叫边缘服务）和后端服务（也叫中间服务），前端服务是对后端服务做必要的聚合和剪裁后暴露给外部不同的设备（PC、Phone等），所有的服务启动时都会到Eureka服务器进行注册，服务之间会有错综复杂的依赖关系。\r\n当网关服务转发外部请求调用前端服务时，通过查询服务注册表就可以发现目标服务进行调用，前端服务调用后端服务时也是同样的道理，一次请求可能涉及到多个服务之间的相互调用。由于每个微服务都是以集群的形式部署，服务之间相互调用的时候需要做负载均衡，因此每个服务中都有一个LB组件用来实现负载均衡。\r\n微服务以镜像的形式，运行在Docker容器中。Docker容器技术让我们的服务部署变得简单、高效。传统的部署方式，需要在每台服务器上安装运行环境，如果我们的服务器数量庞大，在每台服务器上安装运行环境将是一项无比繁重的工作，一旦运行环境发生改变，就不得不重新安装，这简直是灾难性的。\r\n而使用Docker容器技术，我们只需要将所需的基础镜像（jdk等）和微服务生成一个新的镜像，将这个最终的镜像部署在Docker容器中运行，这种方式简单、高效，能够快速部署服务。每个Docker容器中可以运行多个微服务，Docker容器以集群的方式部署，使用Docker Swarm对这些容器进行管理。我们创建一个镜像仓库用来存放所有的基础镜像以及生成的最终交付镜像，在镜像仓库中对所有镜像进行管理。\r\n服务容错\r\n微服务之间存在错综复杂的依赖关系，一次请求可能会依赖多个后端服务，在实际生产中这些服务可能会产生故障或者延迟，在一个高流量的系统中，一旦某个服务产生延迟，可能会在短时间内耗尽系统资源，将整个系统拖垮，因此一个服务如果不能对其故障进行隔离和容错，这本身就是灾难性的。我们的微服务架构中使用了Hystrix组件来进行容错处理。Hystrix是Netflix的一款开源组件，它通过熔断模式、隔离模式、回退（fallback）和限流等机制对服务进行弹性容错保护，保证系统的稳定性。\r\n熔断模式：熔断模式原理类似于电路熔断器，当电路发生短路时，熔断器熔断，保护电路避免遭受灾难性损失。当服务异常或者大量延时，满足熔断条件时服务调用方会主动启动熔断，执行fallback逻辑直接返回，不会继续调用服务进一步拖垮系统。熔断器默认配置服务调用错误率阀值为50%，超过阀值将自动启动熔断模式。服务隔离一段时间以后，熔断器会进入半熔断状态，即允许少量请求进行尝试，如果仍然调用失败，则回到熔断状态，如果调用成功，则关闭熔断模式。\r\n\r\n**隔离模式**：Hystrix默认采用线程隔离，不同的服务使用不同的线程池，彼此之间不受影响，当一个服务出现故障耗尽它的线程池资源，其他的服务正常运行不受影响，达到隔离的效果。例如我们通过andThreadPoolKey配置某个服务使用命名为TestThreadPool的线程池，实现与其他命名的线程池隔离。\r\n\r\n**回退（fallback）**：fallback机制其实是一种服务故障时的容错方式，原理类似Java中的异常处理。只需要继承HystixCommand并重写getFallBack()方法，在此方法中编写处理逻辑，比如可以直接抛异常（快速失败），可以返回空值或缺省值，也可以返回备份数据等。当服务调用出现异常时，会转向执行getFallBack()。有以下几种情况会触发fallback：\r\n程序抛出非HystrixBadRequestExcepption异常，当抛出HystrixBadRequestExcepption异常时，调用程序可以捕获异常，没有触发fallback，当抛出其他异常时，会触发fallback；\r\n程序运行超时；\r\n熔断启动；\r\n线程池已满。\r\n\r\n限流： 限流是指对服务的并发访问量进行限制，设置单位时间内的并发数，超出限制的请求拒绝并fallback，防止后台服务被冲垮。\r\nHystix使用命令模式HystrixCommand包装依赖调用逻辑，这样相关的调用就自动处于Hystrix的弹性容错保护之下。调用程序需要继承HystrixCommand并将调用逻辑写在run()中，使用execute()（同步阻塞）或queue()（异步非阻塞）来触发执行run()。\r\n动态配置中心\r\n微服务有很多依赖配置，某些配置参数在服务运行期间可能还要动态修改，比如：根据访问流量动态调整熔断阀值。传统的实现信息配置的方法，比如放在xml、yml等配置文件中，和应用一起打包，每次修改都要重新提交代码、打包构建、生成新的镜像、重新启动服务，效率太低，这样显然是不合理的，因此我们需要搭建一个动态配置中心服务支持微服务动态配置。\r\n我们使用Spring Cloud的configserver服务帮我们实现动态配置中心的搭建。我们开发的微服务代码都存放在Git服务器私有仓库里面，所有需要动态配置的配置文件存放在Git服务器下的configserver（配置中心，也是一个微服务）服务中，部署到Docker容器中的微服务从Git服务器动态读取配置文件的信息。\r\n当本地Git仓库修改代码后push到Git服务器仓库，Git服务端hooks(post-receive，在服务端完成代码更新后会自动调用)自动检测是否有配置文件更新，如果有，Git服务端通过消息队列给配置中心（configserver，一个部署在容器中的微服务）发消息，通知配置中心刷新对应的配置文件。这样微服务就能获取到最新的配置文件信息，实现动态配置。\r\n以上这些框架或组件是支撑实施微服务架构的核心，在实际生产中，我们还会用到很多其他的组件，比如日志服务组件、消息服务组件等等，根据业务需要自行选择使用。在我们的微服务架构实施案例中，参考使用了很多Spring Cloud Netflix框架的开源组件，主要包括Zuul（服务网关）、Eureka（服务注册与发现）、Hystrix（服务容错）、Ribbon（客户端负载均衡）等。这些优秀的开源组件，为我们实施微服务架构提供了捷径。\r\n以上篇幅主要介绍了微服务架构的基本原理，其中有些比较细节的东西，比如Eureka的各项参数配置说明、动态配置中心搭建过程等，博主会在其他的文章中做出详细的说明，供大家参考。\r\n原文链接：http://www.cnblogs.com/fangfuhai/p/7065847.html\r\n3 天烧脑式容器存储网络训练营\r\n本次培训以容器存储和网络为主题，包括：Docker Plugin、Docker storage driver、Docker Volume Pulgin、Kubernetes Storage机制、容器网络实现原理和模型、Docker网络实现、网络插件、Calico、Contiv Netplugin、开源企业级镜像仓库Harbor原理及实现等。\r\n',',技术,',16,0,'2017-07-13 09:37:25','2017-07-12 18:27:12',0,'http://img.mp.itc.cn/upload/20170627/79f7eaef18e04e339cdfba1e3962e401_th.jpg',1,'http://www.sohu.com/a/152360962_198222'),(101,1,'name','','','',0,'Colin	 	希腊语	胜利\r\nAnker	 	希腊语	男子气概的\r\n\r\nhttp://bbs.pcbaby.com.cn/topic-1229980.html\r\n',',生活,',16,0,'2017-07-14 03:22:44','2017-07-13 11:28:19',0,'',0,''),(102,1,'为什么不用ZK来做服务发现？','本文作者通过ZooKeeper与Eureka作为 Service发现服务(注：WebServices 体系中的UDDI就是个发现服务)的优劣对比，分享了Knewton在云计算平台部署服务的经验。本文虽然略显偏激，但是看得出Knewton在云平台方面是非常有经验的，这篇文章从实践角度出发分别从云平台特点、CAP原理以及运维三个方面对比了ZooKeeper与Eureka两个系统作为发布服务的优劣，并提出了在云平台构建发现服务的方法论。','','',0,'本文作者通过ZooKeeper与Eureka作为 Service发现服务(注：WebServices 体系中的UDDI就是个发现服务)的优劣对比，分享了Knewton在云计算平台部署服务的经验。本文虽然略显偏激，但是看得出Knewton在云平台方面是非常有经验的，这篇文章从实践角度出发分别从云平台特点、CAP原理以及运维三个方面对比了ZooKeeper与Eureka两个系统作为发布服务的优劣，并提出了在云平台构建发现服务的方法论。\r\n\r\n背景\r\n\r\n很多公司选择使用 ZooKeeper作为Service发现服务(Service Discovery)，但是在构建 Knewton(Knewton 是一个提供个性化教育平台的公司、学校和出版商可以通过Knewton平台为学生提供自适应的学习材料)平台时，我们发现这是个根本性的错误。在这边文章 中，我们将用我们在实践中遇到的问题来说明，为什么使用ZooKeeper做Service发现服务是个错误。\r\n\r\n请留意服务部署环境\r\n\r\n让我们从头开始梳理。我们在部署服务的时候，应该首先考虑服务部署的平台(平台环境)，然后才能考虑平台上跑的软件 系统或者如何在选定的平台上自己构建一套系统。例如，对于云部署平台来说，平台在硬件层面的伸缩(注：作者应该指的是系统的冗余性设计，即系统遇到单点失 效问题，能够快速切换到其他节点完成任务)与如何应对网络故障是首先要考虑的。当你的服务运行在大量服务器构建的集群之上时(注：原话为大量可替换设 备)，则肯定会出现单点故障的问题。对于knewton来说，我们虽然是部署在AWS上的，但是在过往的运维中，我们也遇到过形形色色的故障;所以，你应 该把系统设计成“故障开放型”(expecting failure)的。其实有很多同样使用AWS的 公司跟我们遇到了(同时有很多 书是介绍这方面的)相似的问题。你必须能够提前预料到平台可能会出现的问题如：意外故障(注：原文为box failure，只能意会到作者指的是意外弹出的错误提示框)，高延迟与 网络分割问题(注：原文为network partitions。意思是当网络交换机出故障会导致不同子网间通讯中断)——同时我们要能构建足够弹性的系统来应对它们的发生。\r\n\r\n永远不要期望你部署服务的平台跟其他人是一样的!当然，如果你在独自运维一个数据中心，你可能会花很多时间与钱来避免硬件故障与网络分割问题，这 是另一种情况了;但是在云计算平台中，如AWS，会产生不同的问题以及不同的解决方式。当你实际使用时你就会明白，但是，你最好提前应对它们(注：指的是 上一节说的意外故障、高延迟与网络分割问题)的发生。\r\n\r\nZooKeeper作为发现服务的问题\r\n\r\nZooKeeper(注：ZooKeeper是著名Hadoop的一个子项目，旨在解决大规模分 布式应用场景下，服务协调同步(Coordinate Service)的问题;它可以为同在一个分布式系统中的其他服务提供：统一命名服务、配置管理、分布式锁服务、集群管理等功能)是个伟大的开源项目，它 很成熟，有相当大的社区来支持它的发展，而且在生产环境得到了广泛的使用;但是用它来做Service发现服务解决方案则是个错误。\r\n\r\n在分布式系统领域有个著名的 CAP定理(C– 数据一致性;A-服务可用性;P-服务对网络分区故障的容错性，这三个特性在任何分布式系统中不能同时满足，最多同时满足两个);ZooKeeper是个 CP的，即任何时刻对ZooKeeper的访问请求能得到一致的数据结果，同时系统对网络分割具备容错性;但是它不能保证每次服务请求的可用性(注：也就 是在极端环境下，ZooKeeper可能会丢弃一些请求，消费者程序需要重新请求才能获得结果)。但是别忘了，ZooKeeper是分布式协调服务，它的 职责是保证数据(注：配置数据，状态数据)在其管辖下的所有服务之间保持同步、一致;所以就不难理解为什么ZooKeeper被设计成CP而不是AP特性 的了，如果是AP的，那么将会带来恐怖的后果(注：ZooKeeper就像交叉路口的信号灯一样，你能想象在交通要道突然信号灯失灵的情况吗?)。而且， 作为ZooKeeper的核心实现算法 Zab，就是解决了分布式系统下数据如何在多个服务之间保持同步问题的。\r\n\r\n**作为一个分布式协同服务，ZooKeeper非常好，但是对于Service发现服务来说就不合适了**;因为对于Service发现服务来说就算是 返回了包含不实的信息的结果也比什么都不返回要好;再者，对于Service发现服务而言，宁可返回某服务5分钟之前在哪几个服务器上可用的信息，也不能 因为暂时的网络故障而找不到可用的服务器，而不返回任何结果。所以说，用ZooKeeper来做Service发现服务是肯定错误的，如果你这么用就惨 了!\r\n\r\n而且更何况，如果被用作Service发现服务，ZooKeeper本身并没有正确的处理网络分割的问题;而在云端，网络分割问题跟其他类型的故障一样的确会发生;所以最好提前对这个问题做好100%的准备。就像 Jepsen在 ZooKeeper网站上发布的博客中所说：在ZooKeeper中，如果在同一个网络分区(partition)的节点数(nodes)数达不到 ZooKeeper选取Leader节点的“法定人数”时，它们就会从ZooKeeper中断开，当然同时也就不能提供Service发现服务了。\r\n\r\n如果给ZooKeeper加上客户端缓存(注：给ZooKeeper节点配上本地缓存)或者其他类似技术的话可以缓解ZooKeeper因为网络故障造成节点同步信息错误的问题。 Pinterest与 Airbnb公 司就使用了这个方法来防止ZooKeeper故障发生。这种方式可以从表面上解决这个问题，具体地说，当部分或者所有节点跟ZooKeeper断开的情况 下，每个节点还可以从本地缓存中获取到数据;但是，即便如此，ZooKeeper下所有节点不可能保证任何时候都能缓存所有的服务注册信息。如果 ZooKeeper下所有节点都断开了，或者集群中出现了网络分割的故障(注：由于交换机故障导致交换机底下的子网间不能互访);那么ZooKeeper 会将它们都从自己管理范围中剔除出去，外界就不能访问到这些节点了，即便这些节点本身是“健康”的，可以正常提供服务的;所以导致到达这些节点的服务请求 被丢失了。(注：这也是为什么ZooKeeper不满足CAP中A的原因)\r\n\r\n更深层次的原因是，ZooKeeper是按照CP原则构建的，也就是说它能保证每个节点的数据保持一致，而为ZooKeeper加上缓存的做法的 目的是为了让ZooKeeper变得更加可靠(available);但是，ZooKeeper设计的本意是保持节点的数据一致，也就是CP。所以，这样 一来，你可能既得不到一个数据一致的(CP)也得不到一个高可用的(AP)的Service发现服务了;因为，这相当于你在一个已有的CP系统上强制栓了 一个AP的系统，这在本质上就行不通的!一个Service发现服务应该从一开始就被设计成高可用的才行!\r\n\r\n如果抛开CAP原理不管，正确的设置与维护ZooKeeper服务就非常的困难;错误会 经常发生， 导致很多工程被建立只是为了减轻维护ZooKeeper的难度。这些错误不仅存在与客户端而且还存在于ZooKeeper服务器本身。Knewton平台 很多故障就是由于ZooKeeper使用不当而导致的。那些看似简单的操作，如：正确的重建观察者(reestablishing watcher)、客户端Session与异常的处理与在ZK窗口中管理内存都是非常容易导致ZooKeeper出错的。同时，我们确实也遇到过 ZooKeeper的一些经典bug： ZooKeeper-1159 与 ZooKeeper-1576; 我们甚至在生产环境中遇到过ZooKeeper选举Leader节点失败的情况。这些问题之所以会出现，在于ZooKeeper需要管理与保障所管辖服务 群的Session与网络连接资源(注：这些资源的管理在分布式系统环境下是极其困难的);但是它不负责管理服务的发现，所以使用ZooKeeper当 Service发现服务得不偿失。\r\n\r\n做出正确的选择：Eureka的成功\r\n\r\n我们把Service发现服务从ZooKeeper切换到了Eureka平台，它是一个开 源的服务发现解决方案，由Netflix公司开发。(注：Eureka由两个组件组成：Eureka服务器和Eureka客户端。Eureka服务器用作 服务注册服务器。Eureka客户端是一个Java客户端，用来简化与服务器的交互、作为轮询负载均衡器，并提供服务的故障切换支持。)Eureka一开 始就被设计成高可用与可伸缩的Service发现服务，这两个特点也是Netflix公司开发所有平台的两个特色。( 他们都在讨论Eureka)。自从切换工作开始到现在，我们实现了在生产环境中所有依赖于Eureka的产品没有下线维护的记录。我们也被告知过，在云平台做服务迁移注定要遇到失败;但是我们从这个例子中得到的经验是，一个优秀的Service发现服务在其中发挥了至关重要的作用!\r\n\r\n首先，在Eureka平台中，如果某台服务器宕机，Eureka不会有类似于ZooKeeper的选举leader的过程;客户端请求会自动切换 到新的Eureka节点;当宕机的服务器重新恢复后，Eureka会再次将其纳入到服务器集群管理之中;而对于它来说，所有要做的无非是同步一些新的服务 注册信息而已。所以，再也不用担心有“掉队”的服务器恢复以后，会从Eureka服务器集群中剔除出去的风险了。Eureka甚至被设计用来应付范围更广 的网络分割故障，并实现“0”宕机维护需求。当网络分割故障发生时，每个Eureka节点，会持续的对外提供服务(注：ZooKeeper不会)：接收新 的服务注册同时将它们提供给下游的服务发现请求。这样一来，就可以实现在同一个子网中(same side of partition)，新发布的服务仍然可以被发现与访问。\r\n\r\n但是，Eureka做到的不止这些。正常配置下，Eureka内置了心跳服务，用于淘汰一些“濒死”的服务器;如果在Eureka中注册的服务， 它的“心跳”变得迟缓时，Eureka会将其整个剔除出管理范围(这点有点像ZooKeeper的做法)。这是个很好的功能，但是当网络分割故障发生时， 这也是非常危险的;因为，那些因为网络问题(注：心跳慢被剔除了)而被剔除出去的服务器本身是很”健康“的，只是因为网络分割故障把Eureka集群分割 成了独立的子网而不能互访而已。\r\n\r\n幸运的是，Netflix考虑到了这个缺陷。如果Eureka服务节点在短时间里丢失了大量的心跳连接(注：可能发生了网络故障)，那么这个 Eureka节点会进入”自我保护模式“，同时保留那些“心跳死亡“的服务注册信息不过期。此时，这个Eureka节点对于新的服务还能提供注册服务，对 于”死亡“的仍然保留，以防还有客户端向其发起请求。当网络故障恢复后，这个Eureka节点会退出”自我保护模式“。所以Eureka的哲学是，同时保 留”好数据“与”坏数据“总比丢掉任何”好数据“要更好，所以这种模式在实践中非常有效。\r\n\r\n最后，Eureka还有客户端缓存功能(注：Eureka分为客户端程序与服务器端程序两个部分，客户端程序负责向外提供注册与发现服务接口)。 所以即便Eureka集群中所有节点都失效，或者发生网络分割故障导致客户端不能访问任何一台Eureka服务器;Eureka服务的消费者仍然可以通过 Eureka客户端缓存来获取现有的服务注册信息。甚至最极端的环境下，所有正常的Eureka节点都不对请求产生相应，也没有更好的服务器解决方案来解 决这种问题时;得益于Eureka的客户端缓存技术，消费者服务仍然可以通过Eureka客户端查询与获取注册服务信息，这点很重要。\r\n\r\nEureka的构架保证了它能够成为Service发现服务。它相对与ZooKeeper来说剔除了Leader节点的选取或者事务日志机制，这 样做有利于减少使用者维护的难度也保证了Eureka的在运行时的健壮性。而且Eureka就是为发现服务所设计的，它有独立的客户端程序库，同时提供心 跳服务、服务健康监测、自动发布服务与自动刷新缓存的功能。但是，如果使用ZooKeeper你必须自己来实现这些功能。Eureka的所有库都是开源 的，所有人都能看到与使用这些源代码，这比那些只有一两个人能看或者维护的客户端库要好。\r\n\r\n维护Eureka服务器也非常的简单，比如，切换一个节点只需要在现有EIP下移除一个现有的节点然后添加一个新的就行。Eureka提供了一个 web-based的图形化的运维界面，在这个界面中可以查看Eureka所管理的注册服务的运行状态信息：是否健康，运行日志等。Eureka甚至提供 了Restful-API接口，方便第三方程序集成Eureka的功能。\r\n\r\n结论\r\n\r\n关于Service发现服务通过本文我们想说明两点：1、留意服务运行的硬件平台;2、时刻关注你要解决的问题，然后决定 使用什么平台。Knewton就是从这两个方面考虑使用Eureka替换ZooKeeper来作为service发现服务的。云部署平台是充满不可靠性 的，Eureka可以应对这些缺陷;同时Service发现服务必须同时具备高可靠性与高弹性，Eureke就是我们想要的!\r\n\r\nhttp://www.chinacloud.cn/show.aspx?id=19979&cid=16 \r\nhttps://my.oschina.net/qiangzigege/blog/680973\r\n',',技术,',10,0,'2017-07-13 20:26:27','2017-07-13 12:27:37',0,'',0,''),(103,1,'微服务系统中的服务发现机制','本文来自Nginx官方博客，这是微服务架构序系列的第四篇文章。作者总共发布了七篇关于微服务的系列文章，在第一文章中介绍了传统的单体式应用的不足，以及微服务架构的优势与挑战。在第二和第三骗文章中描述了微服务内部通信方面的内容。在这篇文章中，主要探讨微服务系统的服务发现的相关问题。','','',0,'#为什么要使用服务发现？\r\n\r\n我们可以想象一下，当我们需要远程的访问REST API或者Thrift API时，我们必须得知道服务的网络地址（IP Address和port）。传统的应用程序都是运行在固定的物理机器上，IP Address和端口号都是相对固定的。可以通过配置文件方式来实现不定期更新的Ip Address和端口号。但是，在基于云的微服务应用中，这是一个非常难以解决的问题。如下图所示：\r\n\r\n![1.png](http://upload-images.jianshu.io/upload_images/1797486-708d66b79bac74af.png?imageMogr2/auto-orient/strip%7CimageView2/2)\r\n\r\n\r\n在基于云的微服务应用中，服务实例的网络地址（IP Address和Port）是动态分配的，并且由于系统的auto-scaling, failures 和 upgrades等因数，一些服务运行的实例数量也是动态变化的。因此，客户端代码需要使用一个非常精细和准确的服务发现机制。\r\n有两种主要的服务发现方式：客户端发现（client-side discovery）和服务器端发现（server-side discovery）。\r\n\r\n#客户端发现方式\r\n\r\n在使用客户端发现方式时，客户端通过查询服务注册中心，获取可用的服务的实际网络地址（IP Adress 和 端口号）。然后通过负载均衡算法来选择一个可用的服务实例，并将请求发送至该服务。下图显示了客户端发现方式的结构图：\r\n\r\n\r\n![](http://upload-images.jianshu.io/upload_images/1797486-333fc5ebef0576fb.png?imageMogr2/auto-orient/strip%7CimageView2/2)\r\n\r\n在服务启动的时候，向服务注册中心注册服务；在服务停止的时候，向服务注册中心注销服务。服务注册的一个典型的实现方式就是通过heartbeat机制定时刷新。Netflix OSS 就是使用客户端发现方式的一个很好的例子。 Netflix Eureka是一个服务注册中心。它提供了一个管理和查询可用服务的 REST API。 负载均衡功能是通过Netflix Ribbon（是一个IPC客户端）和Eureka一起共同实现的。在文章的后面将深入的介绍Eureka。\r\n\r\n客户端发现方式的优缺点。由于客户端知道所有可用的服务的实际网络地址，所以可以非常方便的实现负载均衡功能（比如：一致性哈希）。但是这种方式有一个非常明显的缺点就是具有非常强的耦合性。针对不同的语言，每个服务的客户端都得实现一套服务发现的功能。\r\n\r\n#服务端发现方式\r\n\r\n另外一种服务发现的方式就是Server-Side Discovery Pattern，下图展示了这种方式的架构示例图:\r\n\r\n![](http://upload-images.jianshu.io/upload_images/1797486-4cb0821938a1161f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n客户端向load balancer 发送请求。load balancer 查询服务注册中心找到可用的服务，然后转发请求到该服务上。和客户端发现一样，服务都要到注册中心进行服务注册和注销。AWS的弹性负载均衡（Elastic Load Balancer–ELB）就是服务端发现的一个例子。ELB通常是用于为外网服务提供负载平衡的。当然你也可以使用ELB为内部虚拟私有云（VPC）提供负载均衡服务。客户端通过使用DNS名称，发送HTTP或TCP请求到ELB。ELB为EC2或ECS集群提供负载均衡服务。AWS并没有提供单独的服务注册中心。而是通过ELB实现EC2实例和ECS容器的注册的。\r\n\r\nNGINX不仅可以作为HTTP反向代理服务器和负载均衡器，也可以用来作为一个服务发现的负载均衡器。例如，这篇博客（Scalable Architecture DR CoN: Docker, Registrator, Consul, Consul Template and Nginx）介绍如何使用Consul Template 动态的配置NGINX功能。\r\n\r\nKubernetes 和 Marathon 是在通过集群中每个节点都运行一个代理来实现服务发现的功能的，代理的角色就是server-side discovery,客户端通过使用主机的IP Address和Port向Proxy发送请求，Proxy再将请求转发到集群中任何一个可用的服务上。\r\n\r\n服务器端发现方式的优点是，服务的发现逻辑对客户端是透明的。客户只需简单的向load balancer发送请求就可以了。这就避免了为每种不同语言的客户端实现一套发现的逻辑。此外，许多软件都内置实现了这种功能。这种方式的一个最大的缺点是，你必须得关心该组件的高可用性。\r\n\r\n#服务注册中心\r\n\r\n服务注册中心是服务发现的核心。它保存了各个可用服务实例的网络地址（IP Address和Port）。服务注册中心必须要有高可用性和实时更新功能。\r\n\r\n上面提到的 Netflix Eureka 就是一个服务注册中心。它提供了服务注册和查询服务信息的REST API。服务通过使用POST请求注册自己的IP Address和Port。每30秒发送一个PUT请求刷新注册信息。通过DELETE请求注销服务。客户端通过GET请求获取可用的服务实例信息。\r\n\r\nNetflix的高可用（Netflix achieves high availability ）是通过在Amazon EC2运行多个实例来实现的,每一个Eureka服务都有一个弹性IP Address。当Eureka服务启动时，有DNS服务器动态的分配。Eureka客户端通过查询 DNS来获取Eureka的网络地址（IP Address和Port）。一般情况下，都是返回和客户端在同一个可用区Eureka服务器地址。\r\n\r\n其他能够作为服务注册中心的有：\r\n\r\n- etcd ----- 高可用，分布式，强一致性的，key-value，Kubernetes和Cloud Foundry都是使用了- - etcd。\r\n- consul -----一个用于discovering和 configuring的工具。它提供了允许客户端注册和发现服务的API。Consul可以进行服务健康检查，以确定服务的可用性。\r\n- zookeeper ------ 在分布式应用中被广泛使用，高性能的协调服务。 Apache Zookeeper 最初为Hadoop的一个子项目，但现在是一个顶级项目。\r\n\r\n我们已经了解了服务注册中心的概念，接下来我们看看服务是如果注册到注册中心的。有两种不同的方式来处理服务的注册和注销。一种是服务自己主动注册-自己注册（self-registration）。另一种是通过其他组件来管理服务的注册-第三方注册（third-party registration）。\r\n\r\n#Self-Registration\r\n\r\n使用Self-Registration的方式注册，服务实例必须自己主动的到注册中心注册和注销。比如可以使用heartbeat机制了实现。下图为这种方式的示意图：\r\n\r\n![](http://upload-images.jianshu.io/upload_images/1797486-83d6f72863e3f7e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\nNetflix OSS Eureka client就是使用这种方式进行服务注册的。Eureka的客户端处理了服务注册和注销的所有工作。\r\n\r\nSelf-Registration方式的优缺点：一个明显的优点就是，非常简单，不需要任何其它辅助组件。而缺点也是比较明显的，使得各个服务和注册中心的耦合度比较高。服务的不同语言的客户端都得实现注册和注销的逻辑。另一种服务注册方式，可以达到解耦的功能，就是third-party registration方式。\r\n\r\n#Third-Party Registration\r\n\r\n使用Third-Party方式进行服务注册时，服务本身不必关心注册和注销功能。而是通过其他组件（service registrarhandles）来实现服务注册功能。可以通过如事件订阅等方式来监控服务的状态，如果发现一个新的服务实例运行，就向注册中心注册该服务，如果监控到某一服务停止了，就向注册中心注销该服务。下图显示了这种方式的结构图示意图：\r\n\r\n![](http://upload-images.jianshu.io/upload_images/1797486-30d5428f334e2b60.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\nthird-party Registration方式的优点是使服务和注册中心解耦，不用为每种语言实现服务注册的逻辑。这种方式的缺点就是必须得考虑该组件的高可用性。\r\n\r\n#总结\r\n\r\n在微服务的应用系统中，服务实例的数量是动态变化。各服务实例动态分配网络地址（IP Address 和Port）。因此，为了为客户端能够访问到服务，就必须要有一种服务的发现机制。\r\n\r\n服务发现的核心是服务注册中心。服务注册中心保存了各个服务可用的实例的相关信息。服务注册中心提供了管理API和查询API。使用管理API进行服务注册、注销。系统的其他组件可以通过查询API来获得当前可用的服务实例信息。\r\n\r\n有两种主要的服务发现方式：客户端发现（client-side service discovery）和服务端发现（ server-side discovery）。在使用客户端服务发现的方式中，客户通过查询服务注册中心，选择一个可用的服务实例。在使用服务器端发现系统中，客户访问Router/load balancer，通过Router/load balancer查询服务注册中心，并将请求转发到一个可用服务实例上。\r\n\r\n服务注册和注销的方式也有两种。一种是服务自己主动的将自己注册到服务注册中心，称为self-registration。另一种是通过其他组件来处理服务的注册和注销，称为third-party registration。\r\n在有些环境中，服务发现功能需要自己通过服务注册中心（比如：Netflix Eureka, etcd, Apache Zookeeper）实现，而有些环境中，服务发现功能是内置的。例如，Kubernetes和Marathon。\r\n\r\nNginx可以作为HTTP反向代理和负载平衡器，也可以用来作为一个服务发现的负载均衡器。通过向nginx推送routing information来修改nginx的配置，比如使用：Consul Template动态修改NGINX的配置. NGINX Plus 也支持动态修改配置功能。\r\n\r\n在今后的文章中，我们将继续深入分析微服务的其他方面的内容。\r\n\r\n原文作者发布的关于微服务系列文章的地址：（点击译文链接查看）\r\nIntroduction to Microservices\r\nBuilding Microservices: Using an API Gateway\r\nBuilding Microservices: Inter-Process Communication in a Microservices Architecture\r\nService Discovery in a Microservices Architecture\r\nEvent-Driven Data Management for Microservices\r\nChoosing a Microservices Deployment Strategy\r\nRefactoring a Monolith into Microservices\r\n\r\n【作者信息】\r\n原文作者：Chris Richardson，他是早期基于Java的Amazonite EC2\r\nPaaS平台CloudFoundry.com的创始人。现在他为企业提供如何开发和部署应用的咨询服务\r\n查看原文链接\r\n翻译自MaxLeap团队_云服务研发成员：Lam Yu\r\n【注】原文解释链接过多，放置于译文处，如需查考，请点击译文查看\r\n点击查看译文链接\r\n\r\n 微服务\r\n\r\n作者：力谱宿云_LeapCloud\r\n链接：http://www.jianshu.com/p/ece3e0ffc70c\r\n來源：简书\r\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n#服务发现和注册\r\n我们有了两个服务。服务A的IP地址是192.168.0.1，端口9001,服务B的IP地址192.168.0.2，端口9002。我们的客户端需要调用服务A和服务B，我们只需要在配置文件中写上服务A和服务B的IP地址即可。\r\n\r\n此时，服务A的服务器负载有点高，我们需要临时增加服务A的实例，IP192.168.0.3，端口9001。但是我们的客户端要怎么才能调用新的实例？\r\n\r\n常规来说，我们可以有以下几种方法：\r\n\r\n###网络代理方式\r\n如果是http方式通信的服务，可以增加一个nginx做反向代理，转发到两个服务A的实例上。\r\n如果是RPC服务则可以增加一个LVS或HAProxy或者ESB之类的网络代理，客户端配置网络代理地址。\r\n服务B我们再来一套一样的配置，这时候又来了服务C、服务D、服务E...，好吧我们好还要再多维护同样多的网络代理。此外，所有的服务调用服务调用都必须经过网络代理，我们还必须保证代理的高可用。最后，陷入运维灾难。\r\n\r\n###DNS方式\r\n给服务A配置一个域名,然后通过配置两个A记录分别指向两个服务A的实例，客户端只要配置服务A的域名即可。\r\n这种方式也存在问题，首先DNS没有办法管理端口，我们的端口还是只能写在每个客户端的配置文件中。此外DNS轮询负载均衡能力太弱，可能会导致客户端负载的不均衡。\r\n\r\n现在有了服务发现和注册机制，我们可以更合理的解决这个问题。\r\n\r\n服务发现和注册，参考字面意思很容易理解，其核心部分可以理解为一个服务注册表。服务启动时，将自己的信息注册到注册表中。注册表需要每一定时间访问下已经注册的服务，将没有响应的服务从注册表中删除。最终让客户端拿到正常运行的服务地址。\r\n\r\n此时，我们的服务注册表必须具备分布式、高可用、强一致性等特点。\r\n\r\n目前，业界开源的服务发现和注册产品有很多，比较流行的主要有：ZooKeeper,Etcd,Consul,Eureka等。',',技术,',24,0,'2017-07-15 20:38:21','2017-07-13 19:05:41',0,'http://upload-images.jianshu.io/upload_images/1797486-708d66b79bac74af.png?imageMogr2/auto-orient/strip%7CimageView2/2',1,'http://www.jianshu.com/p/ece3e0ffc70c'),(104,1,'关于架构优化和设计，架构师必须知道的事情','没有最好的架构，只有最合适的架构。一个好的架构师，可以根据具体的需求、所拥有的资源等因素综合考虑而设计出最优的架构方案。特别是现在，业务的飞速变化、数据无处不在等这些因素的影响下，技术和框架也需要在变化的过程中不断地打磨和提升以适应新的业务需要。可能当时是最好的架构，但是后来我们还是要跟着业务的变化去做改进。这并不是一件坏事情，我们只要做好应对变化的准备即可。','','',0,'#概述\r\n\r\n这篇译文最早发布在infoQ下面的一个微信公众号：“聊聊架构”上，想着我在园子几乎沉寂了接近两年之久，于是借机复活。哈哈哈，这是一篇关于架构的译文，会介绍比较多的一些工具、以及框架，给对架构感兴趣的同学一个知识扩充。\r\n\r\n近几年来随着互联网的飞速发展，新的架构实践方式不断涌现，但是有一件事情是永恒不变的，那就是－“架构之道”；关于如何设计出灵活、高可用性以及能够快速适应变化的系统架构，我们依旧还有很大的发挥空间。本文会介绍关于如何构建前沿的、易维护的、安全的架构的几个要点，同时你也可以把它当作系统设计的准则或者用它来验证现有的架构是否合理。\r\n\r\n就像我们经常所说的：没有最好的架构，只有最合适的架构。一个好的架构师，可以根据具体的需求、所拥有的资源等因素综合考虑而设计出最优的架构方案。特别是现在，业务的飞速变化、数据无处不在等这些因素的影响下，技术和框架也需要在变化的过程中不断地打磨和提升以适应新的业务需要。可能当时是最好的架构，但是后来我们还是要跟着业务的变化去做改进。这并不是一件坏事情，我们只要做好应对变化的准备即可。\r\n\r\n#与代码无关\r\n\r\n架构师这个词的意义非常广泛，有些架构师是指在公司负责编写软件的某些模块的人。当然多数公司并没有这样的职位，他们会有一些技术leader来负责具体的功能。我们这里所要讲的架构师不会太过于关注代码的细节，而是更关注系统各个模块之间如何协同、交互等一些更全局的一些事情。他们主要关注一些可能经常会被人遗忘但是又会为系统带来恶劣影响的部分，职责是确保所有的功能都能够以较好的质量及时被交付。这种人对于软件产品的成功有着举足轻重的地位，当然他们往往在一个公司里面可能同时负责好几个项目。\r\n\r\n想象一下，两个不同的架构师来建造一艘太空飞船。第一个选择用纸来糊一个样子比较好看的，然后把这艘飞船放到一个漂亮、大小合适的玻璃橱窗里面保护起来。飞般看起来可能像下面的这个样子：\r\n![1](http://images2015.cnblogs.com/blog/554526/201605/554526-20160509195531562-870159738.jpg)\r\n第二个架构师决定用乐高模型来拼一个太空飞船，它们可以随意组合并且比较坚固，所以并不需要额外的特殊保护。\r\n\r\n![2](http://images2015.cnblogs.com/blog/554526/201605/554526-20160509195540171-596549853.jpg)\r\n\r\n两艘飞船看起来都是挺不错的，但是第一个用了较长的时间来完成并且后来当他们需要对这艘飞船做改进的时候，问题就暴露出来了。\r\n\r\n第一位架构师几乎炸了，因为每一次的改动时候，他们必须要移除那个保护罩，并且需要重新再造一艘完整的飞船。虽然他们已经有了所有的模型，再加上造飞船对他来说已经很熟悉，但是他们还是花了很长的时间去完成每一次改造，另外还需要再做一个新的保护罩才能装的下那艘新的飞船。\r\n\r\n但是对于第二位架构师来说，这一切都是不需要的。他只需要对产生影响的一些组件进行改造，制作新的组件，当一切准备就绪再添加到原来的飞船即可。\r\n\r\n再后来，第二位架构师希望能更进一步的优化他们的制作过程，因为他们现在投入了很多的时间在上面。在经过一段时间的研究之后，他们决定尝试用一种新的材料和方法来制作这艘飞船。也就是3D打印，他们申请了一台3D打印机，制作了所有的模型，这样他们就可将一些常规的任何通过3D打印机自动完成了。\r\n\r\n当然，这只是一个很简单的例子。但是我们能从中学到什么呢？虽然两位架构师在最开始的时候都能成功的完成最初始的功能，但是他们都面临着变化所带来的系统的调整。在集成阶段，复杂性开始显现出来，和最开始的目标无关，最终整个设计是否足够灵活、可调整、以及模块化起着至关重要的作用。\r\n\r\n软件的架构至关重要，仅仅有较好的代码来完成功能不足以成为一个优秀的解决方案。因为它不仅仅涉及到代码，还有我们所写的各个模块之间如果交互和集成、数据如何存储、我们怎么样来进行开发和测试、以及在引进变动的时候的难易程度等等。\r\n\r\n这些事情都是和编写代码无关，但是需要我们来花时间考虑， 并且是整个系统最后是否成功的决定性因素。\r\n\r\n#需要考虑的细节\r\n\r\n还有一些原则比如：模块化、轻耦合、**无共享架构**；减少各个组件之前的依懒、注意服务之间依懒所有造成的链式失败及影响等。\r\n\r\nDDD给我们提供了在不同的特定领域上下文以及业务功能的基础上拆分组件的指导方法。\r\n\r\n把服务独立出来提供特定的功能，同时方便在应对变化的时候能够不影响其它的服务。\r\n\r\n在大多数情况下，如果需要同步更新很多个服务则说明系统的耦合还不够低。当然，再完美的原则也会有例外的时候。比如当你想把系统部署在一些IoT设备上的时候，你可能要一次性部署所有的组件。这是允许的，但是，请尽量考虑服务之间的耦合及灵活性以应对将系统部署在不同平台上的需求。\r\n\r\n即便如此，我们也不可能完全避免耦合，它总是会出现在某些场景下。这就需要我们提取一些抽象层将服务之间的交互定在契约上来避免复杂，提升灵活性。这就需要我们有一种辨别能力，能够找到那些必须放在一起来做处理而不能拆解的功能。如果这些功能是值得放在一起的，那我们就可以将它独立成一个微服务，遵循高聚合的设计原因。\r\n\r\n我们要记住的是，系统的设计要做到比较容易地增加或者修改原来的组件。无状态的架构是系统高扩展性的基石。\r\n\r\n特别需要注意服务和组件之间如何交互，了解不同的协议的优缺点，包括速度以及可用性，来帮助我们来决定哪一种是最适合我们的。\r\n\r\n#基础设施、配置、测试、开发、运维\r\n\r\n为配置管理定义策略，因为同时发生的配置变化对系统所有造成的影响也是很重要的，所以需要由全局层面的的自动化更新方案来完成。\r\n\r\n在如今，对于一个数据敏感的大型解决方案来说如果没有自动化的一些基础设施和稳固的开发、测试和部署流程，那就和自杀无异。我们需要花费一定时间来计划和准备开发、测试、生产环境，可能还需要一些额外的环境以备不时之需。\r\n\r\n测试流程和策略也是非常重要的。一些最佳实践使用Blue-Green开发、金丝雀部署、A/B测试等。尽量保持测试环境与生产环境是一致的，至少硬件结构上来说应该是一样的。一定要做压力和负载测试，并且尽可能快的在生产上进行这样的测试，这样能够更快速、精确的帮我们找到线上的问题。\r\n\r\n可调整的架构同时也意味着服务要可以被灵活独立的部署以及简单的基础运维操作。\r\n\r\n#利用不可变基础设施的优势\r\n\r\n不可变基础架构，就是说系统一旦部署，就不再更变升级。当服务/应用需要升级时，只要部署一个新版系统，摧毁旧版就好了。在这个过程中，系统对外服务是几乎是持续的。（译者注）\r\n\r\n保证打包/持续集成进程是基于统一的途径，并且不会对正在运行的服务进行任何更改（比如 禁用ssh)，所有的更新都应该通过定义好的自动化配置和打包操作将它们应用到所有的对应的系统上，来避免配置遗漏。比如手工某个环境上修改配置，可能会漏掉其它环境的配置。\r\n\r\n开发团队不应该过度关注基础设施，因为有一天可能基础设施也会发生改变，所以与业务相关的开发不要和基础设施有过重的绑定。\r\n\r\n#代码之间的东西（in-between the code）\r\n\r\n\"in-between the code\" 可以统一的概括为一些基础设施所提供的功能，比如：服务发现、请求路由、网络通迅层、代理、负载均衡等等。很多生产上的错误并不是因为代码的业务逻辑错误或者每个独立组件本身的问题，而是由于这些把各个组件协调起来的一些通用基础设施。\r\n\r\n随着系统的变化越来越快，更要注意我们所更改的一些组件，考虑可用性和扩展性。制定最小风险的计划来应对出现的问题。\r\n\r\n无处不在的坑\r\n\r\n做一个偏执狂。**为失败而设计架构 - 列举所有可能失败的地方**。和团队头脑风暴对所有可能失败的地方进行质疑然后提出保护方案。\r\n\r\n- 如果连接建立失败怎么办？\r\n- 如果花费的时间超出预计怎么办？\r\n- 如果请求返回不清楚的数据或者不正确的答案怎么办？\r\n- 如果请求返回的数据不是约定好的怎么办？\r\n- 如果出现很高的并发能应对吗？\r\n- 如果服务挂、机组、整个数据中心挂掉了怎么办？\r\n- 如果数据库损坏了怎么办？\r\n- 如果部署的时候失败了怎么办？\r\n- 如果在部署成功之后生产环境上某些功能失败了怎么办？\r\n- 集成性这方面的错误可以有千万种可能，那么我们应该如何来避免？\r\n\r\n使用一些技术比如：熔断（circuit breaker）、超时设定（timeouts）、握手信号（handshaking）、舱壁（bulkheads）来帮助我们保护这些系统集成之前的问题。\r\n\r\n**熔断模式（circuit breaker）**可以参考电路熔断，如果一条线路电压过高，保险丝会熔断，防止火灾。放到我们的系统中，如果某个目标服务调用慢或者有大量超时，此时，熔断该服务的调用，对于后续调用请求，不在继续调用目标服务，直接返回，快速释放资源。如果目标服务情况好转则恢复调用。\r\n\r\n**舱壁模式（bulkheads）**该模式像舱壁一样对资源或失败单元进行隔离，如果一个船舱破了进水，只损失一个船舱。比如采用微服务是首选，比如Docker。Docker是进程隔离的，单个 Docker失效不会影响其他Docker容器。或者把大的并行处理工作，由多个线程池来负荷分担。\r\n\r\n当然，如果当它开始工作的时候，说明我们的系统出现了比较大的问题，需要我们去调查分析。\r\n\r\n注意那些不能看到代码的组件、依懒项以及共享的资源。除了有正确的开发和测试流程以外，还应该尽量使用和真实生产环境一样的数据、以及硬件网络配置来进行测试。\r\n\r\n跟踪系统的响应来防止一些比较常见的问题比如服务不可用的情况，留意系统的平均响应时间，当它有异常的时候需要寻找原因以及采取相应的行动。\r\n\r\n搭建日志、监控、以及系统操作的自动化操作平台。由于微服务相对来说较独立，可以更方便检测失败 所以监控起来会更容易一些。一些比较不错的方式是在收集和分析日志的时候使用关联ID、通用日志数据格式等。注意日志数据可能会非常庞大，所以要考虑日志的时间周期，定义对日志进行归档。另外还有一些不错的工具可以将数据可视化在页面中，可以更直观的看到一些重要的进程。\r\n\r\n为了保证服务的更新不会影响客户端的使用，对于服务的版本控制也是非常重要的。有些情况下同时运行不同版本的服务也是很常见的情形，我们要做好长期向后兼容的准备。\r\n\r\n#务必要记住的事情\r\n\r\n大多数情况下我们并不是从零开始去构建，而是在现有的系统上继续添砖加瓦，而原有的系统在开发、运维、以及架构灵活性上都存在一些问题。想必很多优秀的开发人员在经历这样的情况的时候，都会想去拆解、重构整个系统，但是我们需要谨慎地来完成这个事情。当系统以错误的方式成拆分成组件或者服务单元之后也是一件很危险的事情 。\r\n\r\n大多数系统在一开始的时候都是一个单体应用，后来不断地被拆解成为微服务。下面有一些基本的理念可以在我们做拆解地时候当作参考：\r\n\r\n- 在开始拆分前了解具体的业务需求和业务领域\r\n- 注意一些和其它业务共享的功能和数据，它们需要被正确地模块化\r\n- 这种迁移和升级适合一步一步、一点一点地来完成，仅仅做当前最合适的事情\r\n- 在开始之前很好地理解业务领域的范围及边界，因为对边界的调整将是非常昂贵的\r\n- 对于改造有清晰的结构此次会涉及到哪些团队的调整\r\n\r\n#人、团队、和组织的影响\r\n\r\n这个话题太大，大到我们需要专门写一篇文章来细述。在这里简单地概括一下，在本文中我们所提到的架构的灵活性以及稳健的开发、测试、运维等流程都会影响企业的组织结构。合适的组织结构能够给团队更大的灵活性并且更有机会持续地创新，在这种组织结构下，团队可以根据自己的节奏来工作。\r\n\r\n组织不应该按技术来拆分团队，比如前端团队、移动端团队、后端团队或者根据不同的技术语言拆分团队等，而是应该按照微服务来拆分团队（也可以理解为按独立的业务单元来拆分)。这样在一个团队里面就会包含各种不同的技术，可以用不同的语言来实现服务，这也给团队更多的自由和自主权。\r\n\r\n#如何实践？\r\n\r\n###容器化和集群工具\r\n\r\n- Docker\r\n- Docker Swarm\r\n- Kubernetes\r\n- Mesos\r\n- Serf\r\n- Nomad\r\n\r\n###基础设施自动化/部署\r\nJenkins\r\nTerraform\r\nVagrant\r\nPacker\r\nOtto\r\nChef、Puppet、 Ansible\r\n###配置\r\nEdda\r\nArchaius\r\nDecider\r\nZooKeeper\r\n###服务发现\r\nEureka\r\nPrana\r\nFinagle\r\nZooKeeper\r\nConsul\r\n###路由和负载均衡\r\nDenominator\r\nZuul\r\nNetty\r\nRibbon\r\nHAProxy\r\nnginx\r\n###监控、跟踪、日志\r\nHystrix\r\nConsul health checks\r\nZipkin\r\nPytheus\r\nSALP\r\nElasticsearch logstash\r\n###数据协议\r\nProtocol Buffers\r\nThrift\r\nJSON/XML/Other text\r\n \r\n\r\n一些关于以上工具的介绍\r\n\r\n \r\n\r\n由于本文涉及到大量的开源组件，下面简单列举一些以供参考（部分内容来自于互联网）。\r\n\r\n**Docker Swarm**\r\n\r\nSwarm发布于2014年12月的DockerCon，用以管理Docker集群，并将其抽象为一个虚拟整体暴露给用户。其架构以及命令比较简单，同时也为希望管理Docker集群的Docker爱好者降低了学习和使用门槛。\r\n\r\n**Kubernetes**\r\n\r\nKubernetes是Google开源的容器集群管理系统，其提供应用部署、维护、 扩展机制等功能，利用Kubernetes能方便地管理跨机器运行容器化的应用。\r\n\r\n**Apache Mesos**\r\n\r\nApache Mesos是由加州大学伯克利分校的AMPLab首先开发的一款开源群集管理软件，支持Hadoop、ElasticSearch、Spark、Storm 和Kafka等应用架构。\r\n\r\n**Mesos Aurora**\r\n\r\nAurora 也是Apache的开源项目之一，是长期运行服务和计划作业的 Mesos 框架。Aurora 通过一个共享机器池运行应用和服务，并且负责保持它们的运行，直到永远。当机器失效的时候，Aurora 会智能的重新规划这些作业到健康的机器上。\r\n\r\n**Vagrant**\r\n\r\nVagrant是一个基于Ruby的工具，用于创建和部署虚拟化开发环境。它使用Oracle的开源VirtualBox虚拟化系统，使用 Chef创建自动化虚拟环境。\r\n\r\n**Packer**\r\n\r\nPacker是一个开源工具，用于从单一配置来源为多平台创建相同的机器映像。目前支持的平台包括Amazon EC2、DigitalOcean、OpenStack、VirtualBox和VMware。\r\n\r\n**Terraform**\r\n\r\nTerraform 是一个安全和高效的用来构建、更改和合并基础架构的工具。采用 Go 语言开发。Terraform 可管理已有的流行的服务，并提供自定义解决方案。\r\n\r\n**Consul**\r\n\r\nConsul是HashiCorp公司推出的开源工具，用于实现分布式系统的服务发现与配置。与其他分布式服务注册与发现的方案，Consul的方案更\"一站式\"，内置了服务注册与发现框架、分布一致性协议实现、健康检查、Key/Value存储、多数据中心方案，不再需要依赖其他工具（比如ZooKeeper等）。使用起来也较为简单。Consul用Golang实现，因此具有天然可移植性（支持Linux、windows和Mac OS X）；安装包仅包含一个可执行文件，方便部署，与Docker等轻量级容器可无缝配合。\r\n\r\n**Eureka**\r\n\r\nEureka 是一个基于 REST 的服务，它主要是用于定位服务，以实现 AWS 云端的负载均衡和中间层服务器的故障转移。\r\n\r\n**Ribbon**\r\n\r\nRibbon 是 Netflix 发布的云中间层服务开源项目，其主要功能是提供客户侧软件负载均衡算法。\r\n\r\n**Zuul**\r\n\r\nZuul 是提供动态路由，监控，弹性，安全等的边缘服务。Zuul 相当于是设备和 Netflix 流应用的 Web 网站后端所有请求的前门。Zuul 可以适当的对多个 Amazon Auto Scaling Groups 进行路由请求。\r\n\r\n**Finagle**\r\n\r\nFinagle是Twitter基于Netty开发的支持容错的、协议无关的RPC框架，该框架支撑了Twitter的核心服务。\r\n\r\n**Zipkin**\r\n\r\nZipkin 是 Twitter 的一个开源项目，允许开发者收集 Twitter 各个服务上的监控数据，并提供查询接口。该系统让开发者可通过一个 Web 前端轻松的收集和分析数据，例如用户每次请求服务的处理时间等，可方便的监测系统中存在的瓶颈。\r\n\r\n**Hystrix**\r\n\r\nHystrix旨在通过控制那些访问远程系统、服务和第三方库的节点，从而对延迟和故障提供更强大的容错能力。Hystrix具备拥有回退机制和断路器功能的线程和信号隔离，请求缓存和请求打包（request collapsing，即自动批处理，译者注），以及监控和配置等功能。Hystrix源于Netflix API团队在2011年启动的弹性工程工作，而目前它在Netflix每天处理着数百亿的隔离线程以及数千亿的隔离信号调用。Hystrix是基于Apache License 2.0协议的开源的程序库，目前托管在GitHub上。\r\n\r\n**ZooKeeper**\r\n\r\nZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。\r\n\r\n**etcd**\r\n\r\netcd是一个高可用的键值存储系统，主要用于共享配置和服务发现。etcd是由CoreOS开发并维护的，灵感来自于 ZooKeeper 和 Doozer，它使用Go语言编写，并通过Raft一致性算法处理日志复制以保证强一致性。Raft是一个来自Stanford的新的一致性算法，适用于分布式系统的日志复制，Raft通过选举的方式来实现一致性，在Raft中，任何一个节点都可能成为Leader。Google的容器集群管理系统Kubernetes、开源PaaS平台Cloud Foundry和CoreOS的Fleet都广泛使用了etcd。\r\n\r\n**Protocol Buffers**\r\n\r\nProtocol Buffers是Google公司开发的一种数据描述语言，类似于XML能够将结构化数据序列化，可用于数据存储、通信协议等方面。它不依赖于语言和平台并且可扩展性极强。现阶段官方支持C++、JAVA、Python等三种编程语言，但可以找到大量的几乎涵盖所有语言的第三方拓展包。\r\n\r\n通过它，你可以定义你的数据的结构，并生成基于各种语言的代码。这些你定义的数据流可以轻松地在传递并不破坏你已有的程序。并且你也可以更新这些数据而现有的程序也不会受到任何的影响。\r\n\r\n**Thrift**\r\n\r\nThrift是一种可伸缩的跨语言服务的发展软件框架。它结合了功能强大的软件堆栈的代码生成引擎，以建设服务，工作效率和无缝地与C + +，C#，Java，Python和PHP和Ruby结合。thrift是facebook开发的，我们现在把它作为开源软件使用。thrift允许你定义一个简单的定义文件中的数据类型和服务接口。以作为输入文件，编译器生成代码用来方便地生成RPC客户端和服务器通信的无缝跨编程语言。\r\n\r\n原文地址 http://lenadroid.github.io/posts/adjustable-flexible-architecture.html',',技术,',32,0,'2017-07-14 22:37:10','2017-07-13 19:21:30',0,'http://images2015.cnblogs.com/blog/554526/201605/554526-20160509195531562-870159738.jpg',1,'http://www.cnblogs.com/jesse2013/p/things-architect-must-know.html'),(105,1,'consul实现的raft算法选举过程解析','consul是用来做服务注册和发现用的组件，它会布置多个节点提供服务，基于raft算法选举leader来管理别的节点，当一个节点挂了，会选出新的leader来继续管理。本文就是实际测试下此算法的选举流程。','','',0,'consul是用来做服务注册和发现用的组件，它会布置多个节点提供服务，基于raft算法选举leader来管理别的节点，当一个节点挂了，会选出新的leader来继续管理。本文就是实际测试下此算法的选举流程。\r\n\r\nraft分为两个过程：选举和日志同步。选举是选出谁当leader，然后在leader的带领下，做日志同步等工作。我们研究怎么选举。\r\n\r\n#环境\r\n操作系统：ubuntu 16.04\r\n\r\n#开始\r\n首先需要安装docker用来搭建Consul群集 ，获取consul镜像\r\n```\r\napt-get install docker docker.io -y\r\nservice docker start\r\ndocker pull progrium/consul\r\n```\r\n其中安装的软件版本为\r\ndocker_1.5-1_amd64.deb\r\n\r\n####1、分别启动三个server节点\r\n用bootstrap-expect 3 来启动三个服务节点，并且绑定到容器的同一个ip\r\n```\r\ndocker run -d --name node1 -h node1 progrium/consul -server -bootstrap-expect 3\r\nJOIN_IP=\"$(docker inspect -f \'{{ .NetworkSettings.IPAddress }}\' node1)\"\r\ndocker run -d --name node2 -h node2 progrium/consul -server -join $JOIN_IP\r\ndocker run -d --name node3 -h node3 progrium/consul -server -join $JOIN_IP\r\n```\r\nconsul后跟的参数解析：\r\n- -data-dir\r\n作用：指定agent储存状态的数据目录\r\n这是所有agent都必须的\r\n对于server尤其重要，因为他们必须持久化集群的状态\r\n- -config-dir\r\n作用：指定service的配置文件和检查定义所在的位置\r\n通常会指定为\"某一个路径/consul.d\"（通常情况下，.d表示一系列配置文件存放的目录）\r\n- -config-file\r\n作用：指定一个要装载的配置文件\r\n该选项可以配置多次，进而配置多个配置文件（后边的会合并前边的，相同的值覆盖）\r\n- -dev\r\n作用：创建一个开发环境下的server节点\r\n该参数配置下，不会有任何持久化操作，即不会有任何数据写入到磁盘\r\n这种模式不能用于生产环境（因为第二条）\r\n- -bootstrap-expect\r\n作用：该命令通知consul server我们现在准备加入的server节点个数，该参数是为了延迟日志复制的启动直到我们指定数量的server节点成功的加入后启动。\r\n- -node\r\n作用：指定节点在集群中的名称\r\n该名称在集群中必须是唯一的（默认采用机器的host）\r\n推荐：直接采用机器的IP\r\n- -bind\r\n作用：指明节点的IP地址\r\n- -server\r\n作用：指定节点为server\r\n每个数据中心（DC）的server数推荐为3或5（理想的是，最多不要超过5）\r\n所有的server都采用raft一致性算法来确保事务的一致性和线性化，事务修改了集群的状态，且集群的状态保存在每一台server上保证可用性\r\nserver也是与其他DC交互的门面（gateway）\r\n- -client\r\n作用：指定节点为client\r\n若不指定为-server，其实就是-client\r\n- -join\r\n作用：将节点加入到集群\r\n- -domain\r\n- -dc\r\n作用：指定机器加入到哪一个dc中\r\n\r\n####2、启动client节点\r\n```\r\ndocker run -d --name client1 -h client1 -p 8400:8400 -p 8500:8500 -p 8600:53/udp progrium/consul -join $JOIN_IP\r\n```\r\n\r\n查看以上启动结果\r\n```\r\nroot@shouchaozheng-VirtualBox:~# docker ps\r\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                                                                        NAMES\r\n00a5497eca7c        progrium/consul     \"/bin/start -join 172\"   11 seconds ago      Up 10 seconds       53/tcp, 0.0.0.0:8400->8400/tcp, 8300-8302/tcp, 8301-8302/udp, 0.0.0.0:8500->8500/tcp, 0.0.0.0:8600->53/udp   client1\r\na4f68b899800        progrium/consul     \"/bin/start -server -\"   27 seconds ago      Up 26 seconds       53/tcp, 53/udp, 8300-8302/tcp, 8400/tcp, 8500/tcp, 8301-8302/udp                                             node3\r\nba74d78a26e9        progrium/consul     \"/bin/start -server -\"   36 seconds ago      Up 35 seconds       53/tcp, 53/udp, 8300-8302/tcp, 8400/tcp, 8500/tcp, 8301-8302/udp                                             node2\r\na041050cb8c4        progrium/consul     \"/bin/start -server -\"   50 seconds ago      Up 49 seconds       53/tcp, 53/udp, 8300-8302/tcp, 8400/tcp, 8500/tcp, 8301-8302/udp                                             node1\r\n```\r\n可以看到，NAMES为node1、node2和node3节点的consul server和NAMES为client1的客户端节点都已经启动了。\r\n\r\n\r\n# 测试\r\n进入node3，从上面结果看，该节点的container为a4f68b899800\r\n```\r\nroot@shouchaozheng-VirtualBox:~# docker attach a4f68b899800\r\n    2017/07/17 02:53:50 [WARN] raft: Rejecting vote from 172.17.0.4:8300 since we have a leader: 172.17.0.4:8300\r\n    2017/07/17 02:53:50 [WARN] raft: Heartbeat timeout reached, starting election\r\n    2017/07/17 02:53:50 [INFO] raft: Node at 172.17.0.2:8300 [Candidate] entering Candidate state\r\n    2017/07/17 02:53:51 [INFO] raft: Duplicate RequestVote for same term: 10\r\n    2017/07/17 02:53:51 [INFO] raft: Node at 172.17.0.2:8300 [Follower] entering Follower state\r\n    2017/07/17 02:53:51 [INFO] consul: New leader elected: node1\r\n    2017/07/17 02:53:53 [INFO] agent: Synced service \'consul\'\r\n```\r\n可以看到选举了node1作为leader，其IP为172.17.0.4。另外启动一个terminal窗口，同样的方式查看node2，这里不列出了。\r\n\r\n####1.关闭一个节点\r\n再启动一个terminal窗口，关闭node1\r\n```\r\ndocker stop node1\r\n```\r\n再回来观察node3的情况\r\n```\r\n    2017/07/17 02:54:48 [WARN] raft: Rejecting vote from 172.17.0.3:8300 since we have a leader: 172.17.0.4:8300 #拒绝了node2发起的投票请求，因为我们已有leader node1\r\n    2017/07/17 02:54:49 [WARN] raft: Heartbeat timeout reached, starting election #心跳超时，认为leader node1已经挂了，开始发起投票选举新leader\r\n    2017/07/17 02:54:49 [INFO] raft: Node at 172.17.0.2:8300 [Candidate] entering Candidate state #先推举自己，进入候选人状态\r\n    2017/07/17 02:54:49 [ERR] raft: Failed to make RequestVote RPC to 172.17.0.4:8300: EOF #无法向node1发送投票请求，node1此时还没恢复呢，连不上。看来向node2发请求是成功了的，因为没有报这个错误。\r\n    2017/07/17 02:54:49 [INFO] raft: Node at 172.17.0.2:8300 [Follower] entering Follower state #投票结束，node3回归到选民(追随者状态)\r\n    2017/07/17 02:54:49 [INFO] consul: New leader elected: node2 #选出的新leader是node2\r\n    2017/07/17 02:54:51 [INFO] memberlist: Suspect node1 has failed, no acks received #猜测node1已结挂了，无回应\r\n    2017/07/17 02:54:53 [INFO] memberlist: Marking node1 as failed, suspect timeout reached #认定node1已结挂了\r\n    2017/07/17 02:54:53 [INFO] serf: EventMemberFailed: node1 172.17.0.4 #自报一个事件告警：node1挂了\r\n    2017/07/17 02:54:53 [INFO] consul: removing server node1 (Addr: 172.17.0.4:8300) (DC: dc1) #consul集群将node1移除\r\n    2017/07/17 02:55:12 [INFO] serf: attempting reconnect to node1 172.17.0.4:8301 #尝试重连node1，一直重试下去\r\n    2017/07/17 02:58:52 [INFO] serf: attempting reconnect to node1 172.17.0.4:8301\r\n    2017/07/17 02:59:32 [INFO] serf: attempting reconnect to node1 172.17.0.4:8301\r\n    ......\r\n```\r\nnode1关闭后，node3 (IP为172.17.0.2) 收到了来自node2 (IP为172.17.0.3) 的投票请求，node2心跳超时先到了，先感知到原来的leader node1 关闭了，所以它发起新的投票，而此时node3还未感知到。\r\n选出新leader后，依然尝试重连node1，当然这个时间相比于下面看到的node2的重试间隔，要长的多。\r\n\r\n同时，我们观察到node2的情况\r\n```\r\nroot@shouchaozheng-VirtualBox:~# docker attach ba74d78a26e9\r\n    2017/07/17 02:54:48 [WARN] raft: Heartbeat timeout reached, starting election #心跳超时，认为leader node1已经挂了，开始发起投票选举新leader\r\n    2017/07/17 02:54:48 [INFO] raft: Node at 172.17.0.3:8300 [Candidate] entering Candidate state #先推举自己，进入候选人状态\r\n    2017/07/17 02:54:48 [ERR] raft: Failed to make RequestVote RPC to 172.17.0.4:8300: EOF #无法向node1发送投票请求，node1此时还没恢复呢，连不上。看来向node3发请求是成功了的，因为没有报这个错误。\r\n    2017/07/17 02:54:49 [INFO] raft: Duplicate RequestVote for same term: 12 #本轮投票周期是term: 12\r\n    2017/07/17 02:54:49 [WARN] raft: Election timeout reached, restarting election #选举超时，重选\r\n    2017/07/17 02:54:49 [INFO] raft: Node at 172.17.0.3:8300 [Candidate] entering Candidate state #先推举自己，进入候选人状态\r\n    2017/07/17 02:54:49 [INFO] raft: Election won. Tally: 2 #赢得选举，得票数:2。\r\n    2017/07/17 02:54:49 [INFO] raft: Node at 172.17.0.3:8300 [Leader] entering Leader state #node2进入leader状态\r\n    2017/07/17 02:54:49 [INFO] consul: cluster leadership acquired #集群得知新的leader信息\r\n    2017/07/17 02:54:49 [INFO] consul: New leader elected: node2 #集群播报，新leader是node2\r\n    2017/07/17 02:54:49 [INFO] raft: pipelining replication to peer 172.17.0.2:8300 #同步消息到node3\r\n    2017/07/17 02:54:50 [WARN] raft: Failed to contact 172.17.0.4:8300 in 503.738347ms #node1连不上，接下来就一直重试连接node1，这个重试的间隔时间很短，比上面node3的重试要间隔小很多，可能因为node2是新leader吧，它要肩负的责任更大而已。\r\n    2017/07/17 02:54:50 [WARN] raft: Failed to contact 172.17.0.4:8300 in 991.02307ms\r\n    2017/07/17 02:54:51 [WARN] raft: Failed to contact 172.17.0.4:8300 in 1.466285225s\r\n    2017/07/17 02:54:51 [INFO] memberlist: Suspect node1 has failed, no acks received\r\n    2017/07/17 02:54:53 [INFO] serf: EventMemberFailed: node1 172.17.0.4\r\n    2017/07/17 02:54:53 [INFO] consul: removing server node1 (Addr: 172.17.0.4:8300) (DC: dc1)\r\n    2017/07/17 02:54:53 [INFO] consul: member \'node1\' failed, marking health critical #node1健康检查设为不可用\r\n    2017/07/17 02:54:54 [INFO] memberlist: Suspect node1 has failed, no acks received\r\n    2017/07/17 02:54:59 [ERR] raft: Failed to make RequestVote RPC to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: i/o timeout\r\n    2017/07/17 02:54:59 [ERR] raft: Failed to AppendEntries to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: i/o timeout\r\n    2017/07/17 02:54:59 [ERR] raft: Failed to heartbeat to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: i/o timeout\r\n    2017/07/17 02:55:09 [ERR] raft: Failed to AppendEntries to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: i/o timeout\r\n    2017/07/17 02:55:10 [ERR] raft: Failed to heartbeat to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: i/o timeout\r\n    2017/07/17 02:55:15 [INFO] serf: attempting reconnect to node1 172.17.0.4:8301\r\n    2017/07/17 02:55:18 [ERR] raft: Failed to heartbeat to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    2017/07/17 02:55:18 [ERR] raft: Failed to AppendEntries to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    2017/07/17 02:55:21 [ERR] raft: Failed to heartbeat to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    2017/07/17 02:55:21 [ERR] raft: Failed to AppendEntries to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    2017/07/17 02:55:24 [ERR] raft: Failed to heartbeat to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    2017/07/17 02:55:24 [ERR] raft: Failed to AppendEntries to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    2017/07/17 02:55:27 [ERR] raft: Failed to heartbeat to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    2017/07/17 02:55:27 [ERR] raft: Failed to AppendEntries to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    ......\r\n```\r\n####2.恢复节点\r\n\r\n现在我们启动node1\r\n```\r\ndocker start node1\r\n```\r\n此时观察node3\r\n```\r\n    2017/07/17 03:01:12 [INFO] serf: attempting reconnect to node1 172.17.0.4:8301\r\n    2017/07/17 03:02:01 [INFO] serf: EventMemberJoin: node1 172.17.0.4 #自己感知，加入了新节点node1\r\n    2017/07/17 03:02:01 [INFO] consul: adding server node1 (Addr: 172.17.0.4:8300) (DC: dc1) #集群通知，加入了新节点node1\r\n```\r\nnode1被添加入集群了\r\n\r\nnode2观察\r\n```\r\n    2017/07/17 03:01:52 [ERR] raft: Failed to heartbeat to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    2017/07/17 03:01:52 [ERR] raft: Failed to AppendEntries to 172.17.0.4:8300: dial tcp 172.17.0.4:8300: no route to host\r\n    2017/07/17 03:02:01 [INFO] serf: EventMemberJoin: node1 172.17.0.4 #自己感知，加入了新节点node1\r\n    2017/07/17 03:02:01 [INFO] consul: adding server node1 (Addr: 172.17.0.4:8300) (DC: dc1)#集群通知，加入了新节点node1\r\n    2017/07/17 03:02:01 [INFO] consul: member \'node1\' joined, marking health alive #node1健康检查设置为在线\r\n    2017/07/17 03:02:02 [INFO] raft: pipelining replication to peer 172.17.0.4:8300 #同步信息到node1\r\n```\r\nnode1被添加入集群了。\r\n\r\n以上大家可能发现client节点没什么用，没错，它是不参与选举的，只是遇到有消息了，就转发到leader节点而已，所以这里我们可以忽略了。\r\n\r\n#raft算法选举流程解析\r\n以上的操作流程，可能并不直观，虽然我写了很多注释。那么让我们先具体了解下raft算法原理吧，可以看看其动画实现\r\nhttp://thesecretlivesofdata.com/raft/\r\n\r\n每个节点node都有三个状态\r\n- Follower 跟随者，也就是选民\r\n- Candidate 候选人\r\n- Leader 领导者\r\n\r\n根据动画中所描述的算法原理，我们上面的实验对应下流程：\r\n1.首先node1、node2、node3启动的时候，大家都是Follower状态(灰色)。\r\n```mermaid\r\ngraph TB\r\n    node1((node1</br>Follower))\r\n	node2((node2</br>Follower))\r\n	node3((node3</br>Follower))\r\n```\r\n2.每个Follower都没感知到有leader存在，所以大家都先等等，看没有别的节点来召唤自己。等多长时间呢，这个时间(election timeout)每个节点都是随机分配的，范围在150ms到300ms之间，每个人节点都是不一样的，所以谁先超时，谁后超时是未知的。\r\n```mermaid\r\ngraph TB\r\n    node1((node1</br>Follower))\r\n	node2((node2</br>Follower))\r\n	node3((node3</br>Follower))\r\n	\r\n	node1 -.150ms.-> node1\r\n	node2 -.200ms.-> node2\r\n	node3 -.300ms.-> node3\r\n```\r\n3.这里我们假设node1的时间短，计时150ms后率先等待超时了。则node1第一个发起选举，自然当仁不让，先选自己啊。所以它的Follower先转为Candidate候选人状态(红色)，另外两个节点还有50ms和150ms才能超时。\r\n```mermaid\r\ngraph TB\r\n    node1((node1</br>Candidate))\r\n	style node1 fill:#76EE00;\r\n	node2((node2</br>Follower))\r\n	node3((node3</br>Follower))\r\n	\r\n	node2 -.50ms.-> node2\r\n	node3 -.150ms.-> node3\r\n```\r\n4.然后node1发送Request Vote请求node2和node3投自己一票，假设这个过程花了10ms时间通信，则新的图：\r\n```mermaid\r\ngraph TB\r\n    node1((node1</br>Candidate))\r\n	style node1 fill:#76EE00;\r\n	node2((node2</br>Follower))\r\n	node3((node3</br>Follower))\r\n	\r\n	node1 --Request Vote--> node2\r\n	node1 --Request Vote--> node3\r\n	\r\n	node2 -.40ms.-> node2\r\n	node3 -.140ms.-> node3\r\n```\r\n5.node2和node3由于还未超时，所以此时都是Follower状态，则回应node1的投票请求，并且重置超时时间(election timeout)，假设重置后node2和node3的超时时间分别是210ms和180ms。\r\n```mermaid\r\ngraph BT\r\n    node1((node1</br>Candidate))\r\n	style node1 fill:#76EE00;\r\n	node2((node2</br>Follower))\r\n	node3((node3</br>Follower))\r\n	\r\n	node2 --Vote you--> node1\r\n	node3 --No vote you--> node1\r\n	\r\n	node2 -.210ms.-> node2\r\n	node3 -.180ms.-> node3\r\n```\r\n6.node1收到所有回应后\r\n- 如果发现得票数超过半数了，自己就选上leader(红色)，把自己设置成leader，选举完成。我们把这个流程的时期叫做term 1。\r\n- 如果发现得票数没有超过半数，本次选举完成，自己未当选。\r\n\r\n耗时10ms\r\n```mermaid\r\ngraph BT\r\n    node1((node1</br>Leader))\r\n	style node1 fill:#f9f;\r\n	node2((node2</br>Follower))\r\n	node3((node3</br>Follower))\r\n	\r\n	node2 -.200ms.-> node2\r\n	node3 -.170ms.-> node3\r\n```\r\n7.选上leader之后，leader向别的节点发送Append Entries请求，而每个节点也对该请求予以回应，这就是心跳包heart beat。然后重置自己的超时时间。这个行为一直重复进行，以检测节点在线状态。\r\n\r\n```mermaid\r\ngraph TB\r\n    node1((node1</br>Leader))\r\n	style node1 fill:#f9f;\r\n	node2((node2</br>Follower))\r\n	node3((node3</br>Follower))\r\n	\r\n	node1 --Append Entries--> node2\r\n	node1 --Append Entries--> node3\r\n	node2 --ack--> node1\r\n	node3 --ack--> node1\r\n	\r\n	node2 -.190ms.-> node2\r\n	node3 -.220ms.-> node3\r\n```\r\n8.以后客户端就连接到leader节点上了上了，所有消息走这里，然后以日志同步方式使得别的节点达到一致性。\r\n\r\n```mermaid\r\ngraph TB\r\n    node1((node1</br>Leader))\r\n	style node1 fill:#f9f;\r\n	node2((node2</br>Follower))\r\n	node3((node3</br>Follower))\r\n	client((client))\r\n	style client fill:#fff;\r\n	\r\n	client --set value 5--> node1\r\n	node1 --set value 5--> node2\r\n	node1 --set value 5--> node3\r\n```\r\n\r\n9.假如node2和node3，任何一个节点在心跳超时后还没收到leader的心跳请求，则会认为leader挂了(黑色)，(可能leader并没有挂，只是网络不通而已)，也会开始重复上面node1的步骤。我们上面实验，将leader node1关闭，其实就是这样，发生了重选，node2当选为新的leader。那么这一次重选的时期，我们叫term 2.每次重选都会进入新的term时期，前一个term就结束了。\r\n```mermaid\r\ngraph TB\r\n    node1((node1</br>Leader))\r\n    style node1 fill:#8A8A8A;\r\n    node2((node2</br>Candidate))\r\n    style node2 fill:#76EE00;\r\n    node3((node3</br>Follower))\r\n    \r\n    node3 -.20ms.-> node3\r\n    \r\n    subgraph availiable node\r\n        node2\r\n        node3\r\n    end\r\n    subgraph not availiable node\r\n        node1\r\n    end\r\n```\r\n```mermaid\r\ngraph TB\r\n    node1((node1</br>Leader))\r\n    style node1 fill:#8A8A8A;\r\n    node2((node2</br>Leader))\r\n    style node2 fill:#f9f;\r\n    node3((node3</br>Follower))\r\n    \r\n    node3 -.250ms.-> node3\r\n    \r\n    subgraph availiable node\r\n        node2\r\n        node3\r\n    end\r\n    subgraph not availiable node\r\n        node1\r\n    end\r\n```\r\n上面这个流程还有个问题，如果有某个Follower状态的节点，因为网络延迟而错过心跳；同时另外一个节点在同一时间和它类似的情况，则两个节点都超时了。此时他们都认为leader挂了(可能leader并没有挂，只是网络不通而已)，然后都发起新投票。导致同一时间段有两个以上的节点在发起投票，这种叫Splite Vote.\r\n```mermaid\r\ngraph TB\r\n    node1((node1</br>Leader))\r\n    style node1 fill:#8A8A8A;\r\n    node2((node2</br>Candidate))\r\n    style node2 fill:#76EE00;\r\n    node3((node3</br>Candidate))\r\n    style node3 fill:#76EE00;\r\n    \r\n    subgraph Splite Vote\r\n        node2\r\n        node3\r\n    end\r\n    subgraph not availiable node\r\n        node1\r\n    end\r\n```\r\n在投票分离的情况下，当别的未发起投票的节点收到两个以上投票请求的时候，则不回应，所有的节点都自行等待超时，等待下一轮重新发起投票。因为每个节点的timout时间不是定死的，而是随机在150ms和300ms之间分配的，所以这种时间差会使得新的一轮投票，可能只有一个节点发起投票，那就走到正常的投票流程了；也可能新的一轮依然有两个节点在同时投票(概率很小)，那则继续超时，等待下一轮，直到某一轮投票只有一个节点在发起投票才走入正常流程。\r\n\r\n针对上面正常选举到leader的流程，绘制一个时序图，加深理解下\r\n\r\n```mermaid\r\nsequenceDiagram\r\n　　　participant node1\r\n　　　participant node2\r\n   participant node3\r\n   \r\n   Note left of node1:Follower State\r\n   loop election time\r\n       node1->node1:wait to timeout\r\n   end\r\n   Note left of node2:Follower State\r\n   loop election time\r\n       node2->node2:wait to timeout\r\n   end\r\n   Note left of node3:Follower State\r\n   loop election time\r\n       node3->node3:wait to timeout\r\n   end\r\n   \r\n   Note left of node1:Election timeout <br/>Candidate State\r\n   \r\n   node1->>node2:Request Vote\r\n   node2-->>node1:Vote you\r\n   \r\n   node1->>node3:Request Vote\r\n   node3-->>node1:Not vote you\r\n   \r\n   Note left of node1:Be selected <br/> Leader State\r\n   \r\n   loop Health check node2\r\n      node1->>node2:Append Entries\r\n      node2-->>node1:ack\r\n   end\r\n   \r\n   loop Health check node3\r\n      node1->>node3:Append Entries\r\n      node3-->>node1:ack\r\n   end\r\n```\r\n\r\n以上理解都是在终端执行的，不够直观，也可以访问本机的localhost:8500 端口，在浏览器上查看consul服务的注册情况。\r\n\r\n\r\n',',技术,',123,0,'2017-07-23 03:17:58','2017-07-24 17:19:50',0,'',0,'');
INSERT INTO `tb_post` VALUES (106,1,'使用Docker、Registrator、Consul、Consul Template和Nginx实现高可扩展的Web框','使用Docker、Registrator、Consul、Consul Template和Nginx实现高可扩展的Web框架','','',0,'服务发现\r\n\r\n服务发现的项目已经有不少，包括之前介绍的 consul，以及 skydns、serf、以及主要关注一致性的强大的 zookeeper 等。\r\n\r\n这些项目各有优缺点，功能上大同小异，都是要通过某种机制来获取服务信息，然后通过维护一套（分布式）数据库来存储服务的信息。这也是为什么 etcd 受到大家关注和集成。\r\n\r\n在这里，选用 HashiCorp 公司的 consul 作为服务发现的管理端，它的简介可以参考 这里。\r\n\r\n服务注册\r\n\r\n服务注册的手段有很多，当然，从发起方是谁可以分为两大类，主动注册还是被动探测。\r\n\r\n主动注册，顾名思义，服务启动后，向指定的服务发现管理端的 API 发送请求，给出自身的相关信息。这样做，对管理端的要求简单了很多，但意味着服务自身要完成注册工作，并且极端情况下，管理端比较难探测出真正存活的服务。\r\n\r\n被动探测，则是服务发现管理端通过某种机制来探测存活的服务。这样可以获取真实的服务情况，但如何探测是个很难设计的点，特别当服务类型比较复杂的时候。\r\n\r\n以上两种，都对网络连通性要求较高。从短期看，主动注册方式会比较容易实现一些，应用情形更广泛；但长期维护上，被动探测方式应该是更高效的设计。\r\n\r\n这里，我们选用 gliderlabs 的 registrator，它可以通过跟本地的 docker 引擎通信，来获取本地启动的容器信息，并且注册到指定的服务发现管理端。\r\n\r\n配置更新\r\n\r\n服务被调整后，负载均衡器要想动态重新分配负载，就需要通过配置来获取更新。这样的方案也有不少，基本上都是要安装一些本地 agent 来监听服务发现管理端的信息，生成新的配置，并执行更新命令。\r\n\r\nHashiCorp 公司 的consul-template，可以通过监听 consul 的注册信息，来完成本地应用的配置更新。\r\n\r\n\r\n\r\n2 Consul+OpenResty\r\n使用Consul注册服务，使用OpenResty balancer_by_lua实现无reload动态负载均衡，架构如下所示。\r\n\r\n![](http://img.mp.itc.cn/upload/20170327/84e9ab83b89841618885dbc09ac44417_th.jpeg)\r\n\r\n1．通过upstream server启动/停止时注册服务，或者通过Consul管理后台注册服务。\r\n2．Nginx启动时会调用init_by_lua，启动时拉取配置，并更新到共享字典来存储upstream列表；然后通过init_worker_by_lua启动定时器，定期去Consul拉取配置并实时更新到共享字典。\r\n3．balancer_by_lua使用共享字典存储的upstream列表进行动态负载均衡。\r\ndyna_upstreams.lua模块\r\nlocal http = require(\"socket.http\")\r\nlocal ltn12 = require(\"ltn12\")\r\nlocal cjson = require \"cjson\"\r\nlocal function update_upstreams()\r\nlocal resp = {}\r\nhttp.request{\r\nurl=\"http://192.168.61.129:8500/v1/catalog/service/item_jd_tomcat\",\r\nsink = ltn12.sink.table(resp)\r\n}\r\nresp = table.concat(resp)\r\nresp =cjson.decode(resp)\r\nlocal upstreams = {{ip=\"127.0.0.1\", port=1111}}\r\nfor i, vin ipairs(resp) do\r\nupstreams[i+1] = {ip=v.Address, port=v.ServicePort}\r\nend\r\nngx.shared.upstream_list:set(\"item_jd_tomcat\", cjson.encode (upstreams))\r\nend\r\nlocal function get_upstreams()\r\nlocal upstreams_str = ngx.shared.upstream_list:get(\"item_jd_tomcat\")\r\nend\r\nlocal _M = {\r\nupdate_upstreams = update_upstreams,\r\nget_upstreams = get_upstreams\r\n}\r\n通过luasockets查询Consul来发现服务，update_upstreams用于更新upstream列表，get_upstreams用于返回upstream列表，此处可以考虑worker进程级别的缓存，减少因为json的反序列化造成的性能开销。\r\n还要注意我们使用的luasocket是阻塞API，因为截至本书出版时，OpenResty在init_by_lua和init_worker_by_lua不支持Cosocket（未来会添加支持），所以我们只能使用luasocket，但是，注意这可能会阻塞我们的服务，使用时要慎重。\r\ninit_*_by_lua配置\r\n#存储upstream列表的共享字典\r\nlua_shared_dict upstream_list 10m;\r\n#Nginx Master进程加载配置文件时执行，用于第一次初始化配置\r\ninit_by_lua_block {\r\nlocaldyna_upstreams = require \"dyna_upstreams\";\r\ndyna_upstreams.update_upstreams();\r\n}\r\n#Nginx Worker进程调度，使用ngx.timer.at定时拉取配置\r\ninit_worker_by_lua_block {\r\nlocal dyna_upstreams = require\"dyna_upstreams\";\r\nlocal handle = nil;\r\nhandle =function ()\r\n--TODO:控制每次只有一个worker执行\r\ndyna_upstreams.update_upstreams();\r\nngx.timer.at(5, handle);\r\nend\r\nngx.timer.at(5, handle);\r\n}\r\ninit_worker_by_lua是每个Nginx Worker进程都会执行的代码，所以实际实现时可考虑使用锁机制，保证一次只有一个人处理配置拉取。另外ngx.timer.at是定时轮询，不是走的长轮询，有一定的时延。有个解决方案，是在Nginx上暴露HTTP API，通过主动推送的方式解决。\r\n\r\n![](http://img.mp.itc.cn/upload/20170327/04dcf2ab28154b448a79de98f1b652c5_th.jpeg)\r\n\r\nAgent可以长轮询拉取，然后调用HTTPAPI推送到Nginx上，Agent可以部署在Nginx本机或者远程。\r\n对于拉取的配置，除了放在内存里，请考虑在本地文件系统中存储一份，在网络出问题时作为托底。\r\nupstream配置\r\nupstream item_jd_tomcat {\r\nserver 0.0.0.1; #占位server\r\nbalancer_by_lua_block {\r\nlocal balancer = require \"ngx.balancer\"\r\nlocal dyna_upstreams = require \"dyna_upstreams\";\r\nlocal upstreams = dyna_upstreams.get_upstreams();\r\nlocal ip_port = upstreams[math.random(1,table.getn(upstreams)) ]\r\nngx.log(ngx.ERR, \"current :=============\", math.random(1,table.getn (upstreams)))\r\nbalancer.set_current_peer(ip_port.ip, ip_port.port)\r\n}\r\n}\r\n获取upstream列表，实现自己的负载均衡算法，通过ngx.balancer API进行动态设置本次upstream server。通过balancer_by_lua除可以实现动态负载均衡外，还可以实现个性化负载均衡算法。\r\n最后，记得使用lua-resty-upstream-healthcheck模块进行健康检查。\r\n未完。\r\n\r\n\r\nconsul参数\r\n```\r\n-advertise：通知展现地址用来改变我们给集群中的其他节点展现的地址，一般情况下-bind地址就是展现地址  \r\n-bootstrap：用来控制一个server是否在bootstrap模式，在一个datacenter中只能有一个server处于bootstrap模式，当一个server处于bootstrap模式时，可以自己选举为raft leader。  \r\n-bootstrap-expect：在一个datacenter中期望提供的server节点数目，当该值提供的时候，consul一直等到达到指定sever数目的时候才会引导整个集群，该标记不能和bootstrap公用  \r\n-bind：该地址用来在集群内部的通讯，集群内的所有节点到地址都必须是可达的，默认是0.0.0.0  \r\n-client：consul绑定在哪个client地址上，这个地址提供HTTP、DNS、RPC等服务，默认是127.0.0.1  \r\n-config-file：明确的指定要加载哪个配置文件  \r\n-config-dir：配置文件目录，里面所有以.json结尾的文件都会被加载  \r\n-data-dir：提供一个目录用来存放agent的状态，所有的agent允许都需要该目录，该目录必须是稳定的，系统重启后都继续存在  \r\n-dc：该标记控制agent允许的datacenter的名称，默认是dc1  \r\n-encrypt：指定secret key，使consul在通讯时进行加密，key可以通过consul keygen生成，同一个集群中的节点必须使用相同的key  \r\n-join：加入一个已经启动的agent的ip地址，可以多次指定多个agent的地址。如果consul不能加入任何指定的地址中，则agent会启动失败，默认agent启动时不会加入任何节点。  \r\n-retry-join：和join类似，但是允许你在第一次失败后进行尝试。  \r\n-retry-interval：两次join之间的时间间隔，默认是30s  \r\n-retry-max：尝试重复join的次数，默认是0，也就是无限次尝试  \r\n-log-level：consul agent启动后显示的日志信息级别。默认是info，可选：trace、debug、info、warn、err。  \r\n-node：节点在集群中的名称，在一个集群中必须是唯一的，默认是该节点的主机名  \r\n-protocol：consul使用的协议版本  \r\n-rejoin：使consul忽略先前的离开，在再次启动后仍旧尝试加入集群中。  \r\n-server：定义agent运行在server模式，每个集群至少有一个server，建议每个集群的server不要超过5个  \r\n-syslog：开启系统日志功能，只在linux/osx上生效  \r\n-ui-dir: 提供存放web ui资源的路径，该目录必须是可读的  \r\n-pid-file: 提供一个路径来存放pid文件，可以使用该文件进行SIGINT/SIGHUP(关闭/更新)agent  \r\n```\r\n\r\n\r\n\r\n\r\n#registrator\r\n\r\nStart Registrator\r\n\r\n启动 registrator, 因为需要调用docker api， 所以需要把docker.sock 映射到容器内部，如果你使用了tcp， 那么需要设置对应的url。\r\n\r\n如果你希望上报容器内部ip:port, 那么需要在启动参数中加入 -internal=true, 这样注册的 Service, 都是容器内部的ip, 而port对于同一个service而言，一般是固定的，例如 一个hello服务的两个实例分别为 10.10.1.12:9090, 10.10.1.13:9090. 这样的话，就需要配置一个容器跨host的网络方案，例如 flannel, 等。 可以参考上一篇 Flannel with Docker\r\n\r\n为了简便测试，这里就不配置flannel了。-ip是指定注册service时候使用的ip，建议要指定，选取当前机器的内网 private ip即可。我这里是 172.28.128.3.\r\n\r\nsudo docker run -d --name=registrator --volume=/var/run/docker.sock:/tmp/docker.sock gliderlabs/registrator:latest -ip=172.28.128.3 consul://172.28.128.3:8500\r\n\r\nStart service\r\n启动服务，这里需要注意的是这些环境变量，作用是 override Registrator的默认值，见名知意，在 registrator 文档中有详细介绍。例如 SERVICE_9090_NAME 就是指 端口为 9090 的service 的 name。\r\n\r\n需要注意的是 tags 这个字段，urlprefix-/foo,hello, 这里 urlprefix- 是 gateway 的一种配置，意思为 把访问 /foo 为前缀的请求转发到当前应用来。他能够匹配到例如 /foo/bar, footest, 等。如果你想加上域名的限制，可以这样 urlprefix-mysite.com/foo。 后面还有一个 hello, 作用是给这个service打一个标记，可以用作查询用。\r\n\r\nsudo docker run -d -P -e SERVICE_9090_CHECK_HTTP=/foo/healthcheck -e SERVICE_9090_NAME=hello -e SERVICE_CHECK_INTERVAL=10s -e SERVICE_CHECK_TIMEOUT=5s -e SERVICE_TAGS=urlprefix-/foo,hello silentred/alpine-hello:v2\r\n\r\ncurl 172.28.128.3:8500/v1/catalog/services\r\n//现在应该能看到刚启动的hello服务了\r\n{\"consul\":[],\"hello\":[\"urlprefix-mysite.com/foo\",\"hello\",\"urlprefix-/foo\"]}\r\n\r\n\r\n\r\n\r\n\r\n```mermaid\r\ngraph TB\r\n    注册中心\r\n    style 注册中心 fill:#f9f,stroke:#333,stroke-width:4px;\r\n	服务提供者((服务提供者))\r\n	服务消费者((服务消费者))\r\n\r\n    服务提供者 --1.注册--> 注册中心\r\n    服务消费者 --2.订阅服务--> 注册中心\r\n    服务消费者 -.3.缓存.-> 服务消费者\r\n    服务消费者 --4.服务消费--> 服务提供者\r\n    注册中心 --5.变更通知--> 服务消费者\r\n```\r\n\r\n\r\n```mermaid\r\n\r\n%% Example code\r\ngraph BT\r\n	consul(consul)\r\n    style consul fill:#f9f,stroke:#333,stroke-width:4px;\r\n	nginx{nginx}\r\n	style nginx fill:#f90,stroke:#555,stroke-width:4px;\r\n	style consul-template fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray:5,5;\r\n	user((外部用户))\r\n	style user fill:#f0f;\r\n	\r\n    user --request--> nginx\r\n	nginx --response--> user\r\n\r\n	\r\n	nginx --转发--> my-web-server-1\r\n	nginx --转发--> my-web-server-2\r\n	nginx --转发--> my-web-server-3\r\n	nginx --转发--> my-web-server-4\r\n	nginx --转发--> my-web-server-5\r\n	nginx --转发--> my-web-server-6\r\n	\r\n	registrator-1 -.监控.- my-web-server-1\r\n	registrator-1 -.监控.- my-web-server-2\r\n	registrator-1 -.监控.- my-web-server-3\r\n	registrator-1 --注册--> consul\r\n	registrator-2 -.监控.- my-web-server-4\r\n	registrator-2 -.监控.- my-web-server-5\r\n	registrator-2 -.监控.- my-web-server-6\r\n	registrator-2 --注册--> consul\r\n	\r\n    consul -.变更通知.-> consul-template\r\n	consul-template --订阅服务--> consul\r\n	consul-template -.更新路由.-> nginx\r\n    \r\n		\r\n    subgraph 物理主机-1\r\n		registrator-1\r\n        my-web-server-1\r\n		my-web-server-2\r\n		my-web-server-3\r\n    end\r\n	\r\n	subgraph 物理主机-2\r\n		registrator-2\r\n        my-web-server-4\r\n		my-web-server-5\r\n		my-web-server-6\r\n    end\r\n\r\n```\r\n\r\n\r\n',',技术,',50,0,'2017-07-24 16:03:41','2017-07-28 20:00:38',0,'http://img.mp.itc.cn/upload/20170327/84e9ab83b89841618885dbc09ac44417_th.jpeg',0,''),(107,1,'生活','经验分享','','',0,'# 能寄电动车的物流公司\r\n\r\n这个按照规定是不可以的.因为首先电车就一定有电池,会在运输途中出现放电的现象,有引发火灾的危险,所以一般的整柜物流公司不会接电动车.有的物流公司会要求你把电完全放完才会接(完全放电对电池寿命有致命的影响),所以是可以走物流的. 我之前做物流的时候会交给客人一个方法,就是把电池跟车分开托运.把电池包装好,(前提是要绝对做好绝缘的安全措施)保证不漏电的情况下托运.物流公司问是什么东西,就说是工艺品或者其他的什么东西都行,轻拿轻放,再画上一个禁止倒置的标识,一般都会没有问题的. 此方案仅供参考,个人的一点经验.(风险自负)\r\n\r\n\r\n最早的电滑将电池放在踏板底盘内，踏板电池方案最大的优点就车架易于批量生产,踏板是长方体,外观和谐；\r\n但是低成本和低调外观的代价是非常巨大的，这种车型的缺陷是无法解决的:\r\n1）无法实现完全防水，锂电池容易过水损坏；\r\n2）底盘安放电池，承受人体重量，在复杂颠簸路面，容易引起电池短路起火；\r\n3）为保护底盘电池承载人体重量，需要增加底盘的材料厚度和结构，导致整车重量过大，无法实现轻量化；\r\n4）为保护底盘电池不受到复杂路面的撞击，所以底盘离地面过高，导致整车重心偏高，人体在危急时刻，脚无法快速安全着地（不符合人体平衡力学结构），人体容易失衡而出现意外，安全系数降低。\r\n5）由于底盘电池模块结构一体，导致整车底盘无法实现最大化减震，产生路面共振，舒适度降低。\r\n6）更多此类车型为了降低共振，采用双充气轮胎来实现减震，导致轮胎爆胎几率大大增加。\r\n\r\n\r\n有些电动滑板车内置前后避震系统，另一些则主要是靠车的轮胎来避震，这主要是针对空气轮胎的电动滑板车，但空气轮胎会存在爆胎的危险，实心胎避震效果相对不如空气轮胎，但优点是不会爆胎\r\n\r\n反正买的时候就明说了50个电池，每个版本都写清楚啥容量电池有几个。比起其他只写公里数不写电池的好多了。\r\n\r\n\r\n没减震的骑着不难受嘛，反正我无法忍受，颠簸能难受死，虽然这并不是好到哪去的减震，但好歹还能缓冲的\r\n\r\n但我一开始买低配的选择还是正确的，电池在店家那买真贵，自己配只要七八百成本，店家那买要一千三，很明显电池才是盈利重点。但得有动手能力和钻研精神的人才可以省这笔钱。\r\n\r\n最近想买一辆通勤，看到不少人说避震很重要，也有人说10寸充气胎的话没必要有避震\r\n笑看没有减震的10寸充气胎来辩\r\n\r\n是减震好还是充气轮更舒服？求解法\r\n当然充气胎，减震再牛也比充气胎硬。\r\n\r\n8寸的，前轮充气，后轮实心，其实充气胎和实心胎没什么区别\r\n\r\n想想做10寸电动滑板车的厂家，有几家是在10寸上加了减震的？并不是说加了多少成本卖不上价格去，而且基本上用充气胎了，减震就没有必要了，本身充气胎有减震的效果，再加减震，没有大的必要，当然你玩极速的那种又是另外一回事了！\r\n\r\n减震还是很有必要的！你可以去卖电动车的地方体验下没避震单车型的车子，轮子比这个大得多吧，一样颠得不要不要的！！\r\n\r\n\r\n减震这东西 有比没有强 不然也就没有存在的价值了 但是对于铺砖的道路 有减震也避免不了震动 只不过是把震动变得柔和 减震最初的目的是舒适 对于车辆本身来说 减震是要车轮更加贴合地面 但是滑板车的减震只能说叫做弹簧缓冲 并没有阻尼功能 所以多半这种道路有减震的车还会捎带有点弹跳感 落差大的障碍才与没减震的车有较大差距 所以对于骑烂路 10寸+减震最合适 城市道路 可有可无 倒是充气轮胎肯定比实心的骑着舒服就是了\r\n\r\n这种路面最好的方法就是10寸气，胎压降低点就很舒服了，我就用10寸没减震的，气压少点车已经很舒服了，但是气压少阻力会大大增加，你的电池续航有比较大的影响\r\n\r\n10寸车充气胎的避震效果比8寸加避震效果要好得多。滑板车因为重量太轻和车型的限制，对避震要求很高。一对真正有效果的避震不便宜。所以一般滑板车上的避震差不多都是摆设。使劲往下压看似还有点效果，真正用起来没鸟用。\r\n\r\n寸带避震都是渣渣，一震就到底，摆设而已\r\n\r\n前面有避震，后头没得，实心胎，略抖\r\n\r\n我的经验，8寸车充气轮容易爆胎，建议上实心胎，减震很重要。10寸车充气胎感觉不错，一般道路足以应付，带避震的在通过减速带等复杂路面时更加有优势。顺便说一声，10寸车真重。\r\n\r\n我的车是10寸充气胎，没减震，骑这种路感觉还能接受，要带减震就更好了。千万别买带减震的实心胎，震死你\r\n\r\n我骑下图这种5寸多点的滑板车，这路上去，整个麻麻的，很尴尬。\r\n\r\n说10不用减震的估计都是没骑过有减震车，或蛋蛋已经被震掉了的，所以这类人是不需要减震的。\r\n\r\n\r\n\r\n\r\n我是玩摩托车的，经验协助之下我选购滑板车才选了这个。\r\n\r\n\r\n第一是要买刹车时候尾灯能亮的，前面也必须有个灯，中国并不是每条路都有贼亮的路灯，安全第一。在买这个之前我就经常遇到电瓶车前灯不开，在漆黑路段是很容易出危险的，不是车主遇到路上有坑，而是别人超车和逆行的时候看不见你就会撞到（中国还有大晚上不开前灯逆行的电瓶车）。尾灯在你刹车时候可以防止追尾，毕竟比没好，转向灯就别想了，滑板车还没那么高端。（不能照亮路但好歹还是个灯啊）\r\n\r\n\r\n第二是必须碟刹，鼓刹一开始效果是可以的，但鼓刹是易耗品，碟刹是耐用品，鼓刹用久了（天天骑大约3个月）会开始松，你紧一下刹车也只是治标不治本，再熬两个月左右就彻底刹不住了，骑过鼓刹电瓶车的人应该最有这感悟吧。我们玩摩托车的刚性要求就是必须碟刹，不然这车一定不买。\r\n\r\n\r\n第三是必须有前后减震，只有前减震是马甲产品，就像显卡所谓的2G大显存和4G大显存，只是为了显存而显存，只有前减震的滑板车是为了有减震而有，但并没起到减震该有的效果。该有的效果就是必须前后减震，不然你就只能在平坦的公园里遛弯不可以上路，中国的路况颠簸一下不稀奇，还有小区学校附近或者毫无征兆的路上的减速带来让你咯噔一下。为了车车的寿命和自己的舒适（也为了车架焊接处的寿命），减震的缓冲必须有啊。我上面看到充气胎说法（胎毕竟只是胎，气打满了跑的快但不能减震），骑自行车的人都骑过经典版无减震的和山地车吧，区别你自己有感觉，如果轮胎可以代替减震的效果，汽车摩托车电动车为啥非得有个减震，特别电动车各个都有，再差的也好歹是个减震。\r\n\r\n\r\n上路的东西，上面3个要求是必须有的，不能具备的就是玩具，具备了之后再尽可能轻便才好。\r\n\r\n\r\n我这个值得吐槽的地方也不是没，有个我很难受的缺点\r\n\r\n![](https://imgsa.baidu.com/forum/w%3D580/sign=9211d3b9bb315c6043956be7bdb3cbe6/fb7ebfb7d0a20cf44342817371094b36aeaf994c.jpg)\r\n\r\n就这减震的位置，不是正三角的，没把缓冲效果最大化，我估计这应该是最小的减震了，没再小的了，不然一定会再小一些，然后来做到和车架位置正三角。\r\n\r\n\r\n这个斜三角还是把咯噔一下的7成的劲留在焊接处上了，顶多起到了三成四成的缓冲效果，而正三角能起到6成7成8成的缓冲效果，具体看减震好和不好。\r\n\r\n\r\n\r\n\r\n',',生活,',9,0,'2017-07-24 01:43:53','2017-07-23 23:48:56',0,'https://imgsa.baidu.com/forum/w%3D580/sign=9211d3b9bb315c6043956be7bdb3cbe6/fb7ebfb7d0a20cf44342817371094b36aeaf994c.jpg',0,''),(108,1,'beego时区问题','','','',0,'今天开发，在我本地mac机器上启动了一个libertyblog进程，localhost入口访问，更新文章。\r\n\r\n然后发布到远程linux服务器，在www.liberalman.cn 这个网站在线去修改文章的时候，发现和在mac上localhost更新的同一个远程数据库(两者连接了同一个数据库，远程Linux上的)，但是时区却相差8个小时。导致我一直改来改去，后来发现是两个机器时区相差的问题。\r\n\r\n所以还是以远程Linux服务器为准。 ',',技术,',7,0,'2017-07-29 13:09:55','2017-07-25 22:17:27',0,'',0,''),(109,1,'现有系统如何集成Consul服务发现','Consul 四大特性\r\n\r\nService Discovery (服务发现)\r\nHealth Check (健康检查)\r\nMulti Datacenter (多数据中心)\r\nKey/Value Storage\r\nConsul Glossary(术语)','','',0,'Consul 简介\r\n\r\n# Consul 四大特性\r\n\r\n1. Service Discovery (服务发现)\r\n2. Health Check (健康检查)\r\n3. Multi Datacenter (多数据中心)\r\n4. Key/Value Storage\r\n\r\n# Consul Glossary(术语)\r\n\r\n#### Agent\r\n\r\nAgent 是一个守护进程\r\n运行在Consul集群的每个成员上\r\n有Client 和 Server 两种模式\r\n所有Agent都可以被调用DNS或者HTTP API,并负责检查和维护同步\r\n#### Client\r\n\r\nClient 将所有RPC请求转发至Server\r\nClient 是相对无状态的\r\nClient 唯一做的就是参与LAN Gossip Pool\r\nClient 只消耗少量的资源和少量的网络带宽\r\n#### Server\r\n\r\n参与 Raft quorum(一致性判断)\r\n响应RPC查询请求\r\n维护集群的状态\r\n转发查询到Leader 或 远程数据中心\r\n#### Datacenter\r\n\r\n顾名思义其为数据中心, 如何定义数据中心呢? 需要以下三点\r\n\r\n私有的\r\n低延迟\r\n高带宽\r\n故: 可以简单的理解为同属一个内网环境, 如北京机房和香港机房就不一定满足以上三个条件\r\n#### Consensus (一致性)\r\n\r\nConsul 使用consensus protocol 来提供CAP(一致性,高可用,分区容错性)\r\n\r\n#### Gossip\r\n\r\n一种协议: 用来保证 最终一致性 , 即: 无法保证在某个时刻, 所有节点状态一致, 但可以保证”最终”一致。P2P应用常用这种协议。\r\n\r\n#### LAN Gossip\r\n\r\nLocal Area Network Gossip, 位于同一个局域网或者数据中心的节点\r\n\r\n#### WAN Gossip\r\n\r\nWide Area Network Gossip, 只用于Server之间, 分部在不同的数据中心或广域网\r\n\r\n\r\n# Consul Architecture 架构图\r\n\r\n![](http://upload-images.jianshu.io/upload_images/96681-82229e2c44b6e6ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n官网上盗一张图来，可以看出\r\n\r\n1. Client和Client之间的LAN Gossip\r\n2. Client将RPC请求发至Server, Follower Server将请求转发至Leader节点\r\n3. Server之间的选举行为\r\n4. Datacenter之间的WAN Gossip\r\n\r\n# Consul 与应用集成的几种姿势\r\n\r\n首先来说说完整集成服务发现需要做哪些事:\r\n\r\n1. 应用启动时需要向Consul 注册服务\r\n2. 定时上报当前服务的状态\r\n3. 应用销毁时需要De-Register 注销自身服务\r\n4. 当Consul数据变化时需要修改本地配置\r\n\r\n看上去很麻烦, 那么下面我们具体介绍三种姿势\r\n\r\n1. 应用本身作为一个Agent , 适用于SDK相对完善的语言, 如有Spring-Cloud-Consul 的Java\r\n2. 与应用同一台主机跑一个Client Agent\r\n3. 使用Docker registrator\r\n\r\n以上三种方式该如何选择呢?\r\n\r\n1. 使用了Docker的话, 就用Docker registrator, 优点: 不用修改程序代码\r\n2. 如果没有用Docker的话, 尽量选择同一台主机下起一个Client模式的Consul agent, 程序本身集成的话, 可能会造成一些不良的反应, 同时有可能还得为服务宕掉背黑锅\r\n\r\n# Docker registrator详解\r\n\r\n下面来说说Docker registrator 是怎么一回事, registrator 自身为一个Container, 运行在其他容器身边(可以理解为同一台主机)\r\n\r\n首先是运行时有这么三个步骤:\r\n\r\n1. 启动Consul Server集群\r\n2. 启动registrator container\r\n3. 启动应用container\r\n\r\n#### Docker Registrator 原理\r\n\r\n1. Registrator is designed to be run once on every host, 也就是说同一台主机上只需要运行一个registrator即可, 并不用为每一个container起一个registrator\r\n2. Registrator 会向consul集群register,deregister等操作\r\n3. Registrator 通过读取同主机其他container的环境变量进行服务注册, 健康检查定义等操作\r\n\r\n#### Docker Registrator 使用\r\n\r\n集成方式很简单, 就是为你的应用添加需要的环境变量, 注意不是Registrator 的环境变量哦\r\n\r\n**Service Definition (服务定义)**\r\n\r\n环境变量Key|环境变量Value|说明\r\n---|---|---\r\nSERVICE_ID|web-001|可以为GUID或者可读性更强变量, 保证不重复\r\nSERVICE_NAME|web|如果ID没有设置, Consul会将name作为id, 则有可能注册失败\r\nSERVICE_TAGS|nodejs,web|服务的标签, 用逗号分隔,开发者可以根据标签来查询一些信息\r\nSERVICE_IP|内网IP|要使用Consul 可访问的IP\r\nSERVICE_PORT|50001|应用的IP, 如果应用监听了多个端口, 理应被视为多个应用\r\nSERVICE_IGNORE|Boolean|是否忽略本Container, 可以为一些不需要注册的Container添加此属性\r\n\r\n**Health Check Definition (健康检查定义)**\r\n\r\n配置原则为: ```SERVICE_XX_*``` , 如果你的应用监听的是5000端口, 则改为SERVICE_5000_CHECK_HTTP, 其他变量同理\r\n\r\n环境变量Key|环境变量Value|说明\r\n---|---|---\r\n--- 以下为HTTP模式|---|---\r\nSERVICE_80_CHECK_HTTP|/path_to_health_check|你的健康状态检查的路径如 /status\r\nSERVICE_80_CHECK_INTERVAL|15s|15秒检查一次\r\nSERVICE_80_CHECK_TIMEOUT|2s|状态检查超时时间\r\n--- 以下为HTTPS模式|---|---\r\nSERVICE_443_CHECK_HTTPS|/path_to_health_check|你的健康状态检查的路径如 /status\r\nSERVICE_443_CHECK_INTERVAL|15s|15秒检查一次\r\nSERVICE_443_CHECK_TIMEOUT|2s|状态检查超时时间\r\n--- 以下为TCP模式|---|---\r\nSERVICE_443_CHECK_TCP|/path_to_health_check|你的健康状态检查的路径如 /status\r\nSERVICE_443_CHECK_INTERVAL|15s|15秒检查一次\r\nSERVICE_443_CHECK_TIMEOUT|2s|状态检查超时时间\r\n--- 使用脚本检查|---|---\r\nSERVICE_CHECK_SCRIPT|curl --silent --fail example.com|如官方例子中的check_redis.py\r\n-- 其他|---|---\r\nSERVICE_CHECK_INITIAL_STATUS|passing|Consul默认注册后的服务为failed\r\n\r\n# Consul 与 Nginx集成的几种姿势\r\n\r\n目标: 添加 或移除 后端实例时, 不需要运维人员再去手动去修改Nginx.conf文件\r\n\r\nDNS\r\nconsul-template\r\nnginx-upsync-module\r\nLua实现\r\n\r\n#### 1. DNS模式\r\n\r\n如你的应用name=myweb, 再次强调 如果id不配置, consu会将name作为默认id, 所以定义服务时id务必要设置\r\n```\r\nupstream backend {\r\n server myweb.service.consul:20000;  #Service Name为myweb, 端口为20000\r\n}\r\nserver {\r\n resolver consul_host:8600;  # 告诉Nginx DNS解析使用consul的DNS查询\r\n listen 80;\r\n location / {\r\n   proxy_pass http://myweb/;\r\n }\r\n}\r\n```\r\n> DNS模式配置简单, 但在运行时会损耗一定性能\r\n\r\n#### 2. consul-template\r\n\r\n首先consul-template是一个可执行程序, 而不是简单的模板,consul-template的特点\r\n- 读取使用HCL(HashiCorp Configuration Language)语法的配置模板生成应用的配置\r\n- 可监听consul的事件, 当已注册service列表或key/value 发生变化时, consul-template会修改配置文件同时可执行一段shell, 如 nginx reload\r\n\r\n如下模板文件:\r\n```\r\n {{range services}}     \r\n   upstream {{.Name}} {\r\n     least_conn;{{range service .Name}}\r\n     server {{.Address}}:{{.Port}};{{end}}\r\n   }\r\n {{end}}\r\n```\r\n如下执行consul-template命令\r\n```\r\nconsul-template \\\r\n   -template \"/tmp/nginx.hcl:/var/nginx/nginx.conf:service nginx reload\" \\\r\n```\r\nconsul-template模式配置相对复杂, 性能相对较好, 仅需要reload nginx, 如果连接量小的话, 不会造成性能影响\r\n\r\n#### 3. 使用 nginx-upsync-module\r\n\r\nnginx-upsync-module 可以同步consul的服务列表或key/value存储\r\n\r\n安装步骤如下, 需要重新编译nginx\r\n```\r\nwget \'http://nginx.org/download/nginx-1.8.0.tar.gz\'\r\ntar -xzvf nginx-1.8.0.tar.gz\r\ncd nginx-1.8.0/\r\n\r\n./configure --add-module=/path/to/nginx-upsync-module\r\nmake\r\nmake install\r\n```\r\n完成以上步骤后, nginx配置如下\r\n```\r\nhttp {\r\n   upstream test {\r\n       # 先占个位子, 否则nginx在启动时会报错\r\n       server 127.0.0.1:11111;\r\n\r\n       # 所有的后端服务列表会从consul拉取, 并删除上面的占位server\r\n       upsync 127.0.0.1:8500/v1/catelog/service/test upsync_timeout=6m upsync_interval=500ms upsync_type=consul strong_dependency=off;\r\n       # 备份的地址, 保证nginx不强依赖consul\r\n       upsync_dump_path /usr/local/nginx/conf/servers/servers_test.conf;\r\n   }\r\n\r\n   server {\r\n       listen 8080;\r\n\r\n       location = /proxy_test {\r\n           proxy_pass http://test;\r\n       }\r\n\r\n       # 输出目前指定的所有后端服务\r\n       location = /upstream_show {\r\n           upstream_show;\r\n       }\r\n\r\n   }\r\n}\r\n```\r\n使用nginx-upsync-module 不需要reload nginx, 所以性能有保障, 同时配置相比consul-template相对简单\r\n#### 4. Lua实现\r\n\r\n此方式适合熟悉openresty的同学, 相对nginx-upsync-module, 可以加入更多自己的逻辑, 毕竟lua语法普通程序员学习一两天就可以写, 具体步骤如下:\r\n\r\n1. init_*_by_lua 阶段通过http api 获取服务列表载入Nginx 内存, 并设置timer轮训更新列表\r\n2. balancer_by_lua 阶段 读取内存的列表, 设置后端服务器\r\n\r\nLua实现 同样可以不reload nginx, 相比nginx-upsync-module 来说更加可扩展, 但缺点就是目前的版本的openresty中init_by_lua 和 init_worker_by_lua只能使用luasocket(阻塞), 不能使用cosocket, 所以在timer轮训时, 会造成一定性能下降\r\n\r\n# Consul 搭建配置中心\r\n\r\n目标: 配置统一管理, 无需运维人员手动修改应用配置\r\n\r\n方式: Consul + consul-template\r\n\r\n第一步: 将应用配置分类\r\n\r\n1.调用其他服务的URL,如内部短信接口API, 配置为Service列表,这里还需要分两种情况\r\n\r\n- 有API网关(如Nginx), consul-template 应配置为网关service\r\n- 无API网关, 则需要程序内随机访问service列表\r\n\r\n2.应用自身配置参数, 如七牛key, 每天找回密码限制次数等\r\n\r\n- 利用consul 的key/value 作为存储\r\n\r\n第二步: 另外程序本身需要提供一个url, 用来刷新配置\r\n\r\n如应用的配置为json文件, 则模板类似如下:\r\n```\r\n  {\r\n    sms_url: [\r\n      {{range service \"myweb\"}} \r\n        \"{{.Address}}: {{ .Port }}\",\r\n      {{end}}\r\n    ,\r\n    app: {{ key \"myweb\" }}\r\n  }\r\n```\r\n可利用consul提供的web ui 来管理配置, 可自由控制配置的颗粒度, 可以按需要将整个配置文件作为value或者某个单独的配置项作为value, 如下图:\r\n\r\n![](http://upload-images.jianshu.io/upload_images/96681-e11aa19ca19995a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n作者：RavenZZ\r\n链接：http://www.jianshu.com/p/28c6bd590ca0\r\n來源：简书\r\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。',',技术,',20,0,'2017-07-27 23:00:10','2017-07-25 23:24:30',0,'http://upload-images.jianshu.io/upload_images/96681-82229e2c44b6e6ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240',1,'http://www.jianshu.com/p/28c6bd590ca0'),(110,1,'每次push到github远程库都要输入用户名和密码问题','每次push到github远程库都要输入用户名和密码问题','','',0,'原因是使用了https方式 push\r\n\r\n在termail里边 输入```git remote -v```\r\n\r\n可以看到形如一下的返回结果\r\n```\r\norigin https://github.com/yuquan0821/demo.git (fetch)\r\norigin https://github.com/yuquan0821/demo.git (push)\r\n```\r\n下面把它换成ssh方式的。\r\n\r\n#### 方法一\r\n```\r\ngit remote rm origin\r\ngit remote add origin git@github.com:yuquan0821/demo.git\r\ngit push origin\r\n```\r\n然后就可以直接push了。\r\n\r\n#### 方法二\r\n```\r\ngit config --global credential.helper store\r\n```\r\n配置好后在 .gitconfig 文件中可以看到credential.helper已经设置为\"store\"了。然后再push，输入一次用户名和密码，以后就不用输入了，会存下来。\r\n',',技术,',7,0,'2017-07-26 16:06:47','2017-07-26 00:08:39',0,'',0,''),(111,1,'卖驾照的','','','',0,'本人一直做驾校！刚才看到吧里有个卖驾照的帖子！现在来给大家科普一下驾照里的潜规则！人不去是挺方便的！这样的驾照不能说是假证！但是我可以告诉大家的是，你没有参加考试是不可能有电子档案的，电子档案是由你在考试的时候监控以随机方式抓拍20张照片里面选三张清晰面部特征的照片和五秒钟考试视频组成的！每个科目都要有！然后再来跟大家科普下没有电子档案的驾照的危害性！首先正规渠道出的驾照必须是关联你汽车驾照的！没有电子档案的驾照碰到路查是没有一点问题的！因为警务通调取的只是你的驾照电子信息不会调取电子档案！但是一旦你骑摩托车遇到事故……各位注意了！首先交警出现场先收走双方驾照然后现场判责！出具事故现场责任书！回到交警队第一道程序就是从94年启用的驾照倒追责……就是核查你考取驾照的所有流程是否合法！你连考试都没参加……你哪来的驾照？   而且CD一体……一注销你刘赤裸裸了！各位可以具体的百度驾照倒追责和驾照电子档案',',生活,',17,0,'2017-07-27 07:44:13','2017-07-27 07:44:14',0,'',0,''),(112,1,'微服务注册发现集群搭建——Registrator + Consul + Consul-template + nginx','在互联网应用领域，服务的动态性需求十分常见，这就对服务的自动发现和可动态扩展提出了很高的要求。\r\n\r\n微服务系统动辄上万个服务，而且还要动态伸缩。以人工写好的IP、Port 硬编码脚本的方式无法做到大规模自动化，稍微多点服务运维就傻了。微服务必然要做到ip和port自动分配，减少人工干预。我们需要让每个服务能动态的创建地址，同时调用方要能感知地址变化。\r\n\r\n这就需要有一个服务注册与发现的机制，这篇文件就是讨论如何实现这个机制。','','',0,'在互联网应用领域，服务的动态性需求十分常见，这就对服务的自动发现和可动态扩展提出了很高的要求。\r\n\r\n微服务系统动辄上万个服务，而且还要动态伸缩。以人工写好的IP、Port 硬编码脚本的方式无法做到大规模自动化，稍微多点服务运维就傻了。微服务必然要做到ip和port自动分配，减少人工干预。我们需要让每个服务能动态的创建地址，同时调用方要能感知地址变化。\r\n\r\n这就需要有一个服务注册与发现的机制，这篇文件就是讨论如何实现这个机制。\r\n\r\n# 1. 服务注册发现的流程\r\n\r\n我们做这个事情要达到的目的是：\r\n\r\n注册发现模式|传统模式\r\n--- | ---\r\n服务启动后自动被发现 | 手动注册\r\n动态变更负载均衡 | 人工写入静态配置\r\n自动伸缩规模 | 运维较长时间的手动调整\r\n\r\n## 1.1 服务 “自注册” 与 “第三方注册”。\r\n\r\n按注册源分\r\n\r\n1.自注册：服务内部启动客户端，连接注册中心，写入服务信息。\r\n\r\n好处：\r\n\r\n- 没有引入第三方，进程数量少，少依赖。\r\n\r\n问题：\r\n\r\n- 服务代码对注册中心进行了硬编码，若更换了注册中心，服务代码也必须跟着调整；\r\n- 注册中心必须与每个服务都保持通信，来做心跳检测。如果服务很多时，对注册中心也是一种额外的开销；\r\n\r\n2.第三方注册（本文采用方式）：采用协同进程的方式，监听服务进程的变化，将服务信息写入注册中心。\r\n\r\n- 好处：做到了服务与注册中心的解耦，对服务而言，完成了服务的自动化注册；\r\n- 问题：协同进程本身也要考虑高可用，否则将成为单点故障的风险点；\r\n\r\n## 1.2 自注册的实现\r\n\r\n自注册不是我们本篇要讨论的，可以自己写代码实现，我们讨论第三方注册的实现。\r\n\r\n## 1.3 第三方注册的实现\r\n\r\nDocker 的出现，以及微服务架构的兴起，让众多开源项目开始关注在松耦合的架构前提下，如何基于 Docker 实现一套真正可动态扩展的服务架构。\r\n\r\n这里我们使用 Registrator + Consul + Consul-template + Nginx 这几个开源组件来实现可动态扩展的服务注册与发现机制，当然，毫无疑问他们都跑在docker上。\r\n\r\n首先看看流程：\r\n\r\n![这里写图片描述](http://img.blog.csdn.net/20170727173023209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n服务注册中心：作为整个架构中的核心，要支持分布式、持久化存储，注册信息变动实时通知消费者。\r\n\r\n服务提供者：服务以 docker 容器化方式部署（实现服务端口的动态生成），并以 docker-compose 的方式来管理，通过 Registrator 可以检测到docker进程信息以完成服务的自动注册。\r\n\r\n服务消费者：要使用服务提供者提供的服务，和服务提供者往往是动态相互转位置的。\r\n\r\n1. 服务注册：服务提供者到注册中心注册；\r\n2. 服务订阅：服务消费者到注册中心订阅服务信息，对其进行监听；\r\n3. 缓存：本地缓存服务列表，减少与注册中心的网络通信；\r\n4. 服务调用：先查找本地缓存，找不到再去注册中心拉取服务地址，然后发送服务请求；\r\n5. 变更通知：服务节点变动时（新增、删除等），注册中心将通知监听节点，更新服务信息。\r\n\r\n# 2. 工具介绍\r\n## 2.1 Registrator\r\nRegistrator：一个由Go语言编写的，针对docker使用的，通过检查本机容器进程在线或者停止运行状态，去注册服务的工具。所以我们要做的实验，所有的工具都是在docker上运行的，就是因为registrator是通过检查docker容器的状态来判断服务状态的，这样就和我们的代码实现完全解耦了，对上层透明化，无感知。它有如下特点\r\n\r\n- 通过docker socket直接监听容器event，根据容器启动/停止等event来注册/注销服务\r\n- 每个容器的每个exposed端口对应不同的服务\r\n- 支持可插拔的registry backend，默认支持Consul, etcd and SkyDNS\r\n- 自身也是docker化的，可以容器方式启动\r\n- 用户可自定义配置，如服务TTL（time-to-live）、服务名称、服务tag等\r\n\r\n## 2.1 consul\r\n我们上图所说的服务注册中心，就是这玩意。Consul 是一个分布式高可用的服务发现和配置共享的软件。由 HashiCorp 公司用 Go 语言开发。\r\n\r\nConsul在这里用来做 docker 实例的注册与配置共享。\r\n\r\n特点：\r\n\r\n- 一致性协议采用 Raft 算法，比Paxos算法好用. 使用 GOSSIP 协议管理成员和广播消息, 并且支持 ACL 访问控制.\r\n- 支持多数据中心以避免单点故障，内外网的服务采用不同的端口进行监听。而其部署则需要考虑网络延迟, 分片等情况等.zookeeper 和 etcd 均不提供多数据中心功能的支持.\r\n- 健康检查. etcd 没有的.\r\n- 支持 http 和 dns 协议接口. zookeeper 的集成较为复杂, etcd 只支持 http 协议.\r\n- 还有一个web管理界面。\r\n\r\n## 2.3 consul-template\r\n一开始构建服务发现，大多采用的是zookeeper/etcd+confd。但是复杂难用。consul-template，大概取代了confd的位置，以后可以这样etcd+confd或者consul+consul-template。\r\n\r\nconsul template的使用场景：consul template可以查询consul中的服务目录、key、key-values等。这种强大的抽象功能和查询语言模板可以使consul template特别适合动态的创建配置文件。例如：创建apache/nginx proxy balancers、haproxy backends、varnish servers、application configurations。\r\n\r\nconsul-template提供了一个便捷的方式从consul中获取存储的值，consul-template守护进程会查询consul服务，来更新系统上指定的任何模板，当更新完成后，模板可以选择运行一些任意的命令，比如我们这里用它来更新nginx.conf这个配置文件，然后执行nginx -s reload命令，以更新路由，达到动态调节负载均衡的目的。\r\n\r\n> consul-template和nginx必须装到一台机器，因为consul-template需要动态修改nginx配置文件\r\n\r\n## 2.4 nginx\r\n这个耳熟能详的名字，不用过多介绍了，它在这里就是做负载均衡，转发请求用的。当然最擅长负载均衡的是直接用硬件，软件做性能比不上。但软件成本低、维护方便。\r\n\r\n# 3. 单机实验\r\n\r\n首先看一个简单的传统负载均衡web服务\r\n\r\n![load balance web servers](http://img.blog.csdn.net/20170726184320855?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n这个很好理解吧，client访问nginx，然后被转发到后端某一个web server上，传统的负载均衡。如果后端有添加/删除web server，运维手动改下nginx.conf，然后重新载入配置，就可以调整负载均衡了。\r\n\r\n再看看我们基于微服务自动注册和发现模式下的负载均衡：\r\n\r\n![Servies register and find](http://img.blog.csdn.net/20170726184628328?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n负载均衡的方式没有变，只是多了一些外围的组件，当然这些组件对client是不可见的，client依然只能看到nginx入口，访问方式也没变化。\r\n\r\n其中，我们用registrator来监控每个web server的状态。当有新的web server启动的时候，registrator会把它注册到consul这个注册中心上。由于consul_template已经订阅了该注册中心上的服务消息，此时consul注册中心会将新的web server信息推送给consul_template，consul_template则会去修改nginx.conf的配置文件，然后让nginx重新载入配置以达到自动修改负载均衡的目的。同样当一个web server挂了，registrator也能感知到，进而通知consul做出响应。\r\n\r\n整个过程不需要运维人工的干预，自动完成。接下来我们找一台机器上实践下这个方案\r\n\r\n## 3.1 环境\r\nheader | header\r\n--- | ---\r\n操作系统 | ubuntu：16.04 x86_64，内核：4.8.0-58-generic\r\n主机ip | 10.111.152.136\r\ndocker | Docker version 1.12.6, build 78d1802\r\ndocker-compose | docker-compose version 1.8.0, build unknown\r\n\r\n首先安装 docker 和 docker-compose\r\n```\r\n$ apt-get install docker docker-compose -y\r\n```\r\n随便找个目录，创建模板文件 docker-compose.yml\r\n```\r\n#backend web application, scale this with docker-compose scale web=3\r\nweb:\r\n  image: liberalman/helloworld:latest\r\n  environment:\r\n    SERVICE_80_NAME: my-web-server\r\n    SERVICE_TAGS: backend-1\r\n    MY_HOST: host-1\r\n  ports:\r\n  - \"80\"\r\n\r\n#load balancer will automatically update the config using consul-template\r\nlb:\r\n  image: liberalman/nginx-consul-template:latest\r\n  hostname: lb\r\n  links:\r\n  - consulserver:consul\r\n  ports:\r\n  - \"80:80\"\r\n\r\nconsulserver:\r\n  image: progrium/consul:latest\r\n  environment:\r\n    SERVICE_TAGS: consul servers\r\n  hostname: consulserver\r\n  ports:\r\n  - \"8300\"\r\n  - \"8400\"\r\n  - \"8500:8500\"\r\n  - \"53\"\r\n  command: -server -ui-dir /ui -data-dir /tmp/consul -bootstrap-expect 1\r\n\r\n# listen on local docker sock to register the container with public ports to the consul service\r\nregistrator:\r\n  image: gliderlabs/registrator:master\r\n  hostname: registrator\r\n  links:\r\n  - consulserver:consul\r\n  volumes:\r\n  - \"/var/run/docker.sock:/tmp/docker.sock\"\r\n  command: -internal consul://consul:8500\r\n```\r\n> **注意：** liberalman/helloworld和liberalman/nginx-consul-template这两个镜像我已经实现了，可以pull下来，大家可以直接使用。想要看他们怎么写的，访问https://github.com/liberalman\r\n\r\n## 3.2 启动\r\n进入模板所在目录，执行\r\n```\r\n$ docker-compose up\r\n```\r\n没问题的话就启动成功了，其中的镜像自动被下。访问 http://localhost 可以看到一个 web 页面：\r\n\r\nHello World! I\'m <font color=blue>host-1</font> <font color=red>addr:172.17.0.2</font>. I saw that you are 172.17.0.6:35612.\r\n\r\n这个内容实际是后端web服务器helloworld所反馈的页面，它告诉我们它自己的地址是172.17.0.2(docker的内网地址)，它所看到的前端访问过来的ip是172.17.0.6，实际上这个前端是我们的nginx的负载均衡的代理转发的，所以它看到的实际是nginx的地址。\r\n\r\n这里的host-1是我自己设置的物理机的名称，注释不是操作系统那hostname，纯粹是为了在页面上好显示，以及后期多个物理机实验的时候好区分不同物理机器，所以自定义了一个临时名称。它对应docker-compose.yml中的MY_HOST环境变量，会通过docker容器传递到helloworld的运行环境中。\r\n\r\n要停止服务Ctrl + C就行了，如果有些没有停止，则\r\n```\r\n$ docker-compose down\r\n```\r\n如果要在后台运行\r\n```\r\n$ docker-compose up -d\r\n```\r\n## 3.3 负载均衡\r\n回到正题，在浏览器上多次刷新，可以看到后端地址没有变化，这是因为只有一个 web 后端服务器。\r\n\r\n如果要测试一下nginx负载均衡的效果，则调整后端为 3 个服务器。先停掉服务，然后\r\n```\r\n$ docker-compose scale web=3\r\n$ docker-compose up\r\n```\r\n再次访问 http://localhost ，多次刷新，可以看到页面的实际目标地址发生了变化，有3个ip轮换。新启动的 web 后端服务器被自动注册，并且 nginx 也把新的路由添加上了：\r\n\r\nHello World! I\'m <font color=blue>host-1</font> <font color=red>addr:172.17.0.2</font>. I saw that you are 172.17.0.6:36710.\r\nHello World! I\'m <font color=blue>host-1</font> <font color=red>addr:172.17.0.3</font>. I saw that you are 172.17.0.6:35210.\r\nHello World! I\'m <font color=blue>host-1</font> <font color=red>addr:172.17.0.4</font>. I saw that you are 172.17.0.6:58678.\r\n\r\n## 3.4 查看服务状态\r\n\r\n要查看节点注册状况，到 http://localhost:8500 可以看到 consul web ui 的管理端\r\n\r\n![consul ui](http://img.blog.csdn.net/20170719193700713?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n点击SERVICES这个按钮，列出所有被注册的服务。\r\n\r\n- consul server，看到有多个是因为监听多个端口，还有udp端口的。\r\n- my-web-server就是后端web服务，这个名称是要在docker-compose模板中设置SERVICE_80_NAME这个变量的，针对80端口，详情见registrator 用户指导手册\r\nhttps://gliderlabs.com/registrator/latest/user/services/。\r\n- nginx-consul-template就是nginx和consul-template的合体服务。\r\n\r\n点击my-web-server，可以看到它右侧的服务节点数，这里只有一个，有多个的话会依次列出\r\n\r\n![host-1 my-web-server](http://img.blog.csdn.net/20170719195857208?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n# 4. 两台物理机\r\n以上都是在单台物理机上完成的，下面我们要测试下多台物理机情况下，真正分布式的效果。\r\n\r\nhost name | real ip | services\r\n--- | --- | ---\r\nhost-1| 10.111.152.136 | registrator、helloworld、consul-server、consul-template、nginx\r\nhost-2| 10.111.152.135 | registrator、helloworld\r\n\r\n第一台物理机host-1的docker-compse.yml\r\n```\r\n#backend web application, scale this with docker-compose scale web=3\r\nweb:\r\n  image: liberalman/helloworld:latest\r\n  environment:\r\n    SERVICE_80_NAME: my-web-server\r\n    SERVICE_TAGS: backend-1\r\n    MY_HOST: host-1\r\n  ports:\r\n  - \"80\"\r\n\r\n#load balancer will automatically update the config using consul-template\r\nlb:\r\n  image: liberalman/nginx-consul-template:latest\r\n  hostname: lb\r\n  links:\r\n  - consulserver:consul\r\n  ports:\r\n  - \"80:80\"\r\n\r\nconsulserver:\r\n  image: progrium/consul:latest\r\n  environment:\r\n    SERVICE_TAGS: consul servers\r\n  hostname: consulserver-node1\r\n  ports:\r\n  - \"8300\"\r\n  - \"8400\"\r\n  - \"8500:8500\"\r\n  - \"53\"\r\n  command: -server -ui-dir /ui -data-dir /tmp/consul -bootstrap-expect 1\r\n\r\n# listen on local docker sock to register the container with public ports to the consul service\r\nregistrator:\r\n  image: gliderlabs/registrator:master\r\n  hostname: registrator-1\r\n  volumes:\r\n  - \"/var/run/docker.sock:/tmp/docker.sock\"\r\n  command: -ip=10.111.152.136 consul://10.111.152.136:8500\r\n```\r\n\r\n我们第二台机器host-2的yml文件：\r\n```\r\n#backend web application, scale this with docker-compose scale web=3\r\nweb:\r\n  image: liberalman/helloworld:latest\r\n  environment:\r\n    SERVICE_80_NAME: my-web-server\r\n    SERVICE_TAGS: backend-2\r\n    MY_HOST: host-2\r\n  ports:\r\n  - \"80\"\r\n\r\n# listen on local docker sock to register the container with public ports to the consul service\r\nregistrator:\r\n  image: gliderlabs/registrator:master\r\n  hostname: registrator-2\r\n  volumes:\r\n  - \"/var/run/docker.sock:/tmp/docker.sock\"\r\n  command: -ip 10.111.152.135 consul://10.111.152.136:8500\r\n```\r\n这是我们将MY_HOST改为host-2了，以便在页面查看的时候可以直观看到。另外的重要改变就是registrator的启动参数，我们去掉了上报docker内部ip的-internal，转而使用了外部ip，将自己本机的ip 10.111.152.135上报了。同时要访问的consul服务器参数配置成host-1的ip地址 10.111.152.136。还有registrator的hostname要和第一台机器的区别开，我改成registrator-2了，这样在注册到consul中的时候，不会覆盖掉。hostname一样consul无法区分是哪个机器的，这样两个机器的registrator会相互覆盖。\r\n\r\nhost-1启动方式不变，我们现在到host-2上启动，看看效果，是否新节点被加上了。\r\n\r\nHello World! I\'m <font color=blue>host-1</font> <font color=red>addr:172.17.0.2</font>. I saw that you are 172.17.0.5:41464.\r\n\r\nHello World! I\'m <font color=blue>host-2</font> <font color=red>addr:172.17.0.2</font>. I saw that you are 10.111.152.136:41578.\r\n\r\n刷新两次，发现一会儿是host-1，一会儿是host-2，说明我们host-2物理机上的服务被添加进来了，并且被nginx路由到了。\r\n\r\n同时consul ui，看到新的节点果然被添加上了\r\n\r\n![host-2 my-web-server](http://img.blog.csdn.net/20170719195631318?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n不过发现个问题，如果在host-2上先将registrator关闭，再关闭host-2上的后端web，我们的consul服务器可以感知到，但是那个consul ui界面没更新，依然显示两个节点。\r\n\r\n# 5. Consul Cluster\r\n\r\n以上我们的实验其实是个单点的consul服务，点击consul ui页面的NODES按钮可以看到\r\n\r\n![single node](http://img.blog.csdn.net/20170719191250809?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n只有一个consul server节点，也就是在我们host-1上跑的节点consulserver，另外一个物理机上没有运行consul节点。一旦它挂了整个服务注册功能就歇菜了。既然是分布式，一定要发挥集群的优势以解决单点问题。所以，我们要建立Consul Cluster。\r\n\r\n在Consul方案中，每个提供服务的节点上都要部署和运行一个agent，所有运行Consul agent节点的集合构成Consul Cluster。\r\n\r\nConsul agent有两种运行模式：Server和Client。这里的Server和Client只是Consul集群层面的区分，与搭建在Cluster之上的应用服务无关。\r\n\r\n以Server模式运行的Consul agent节点用于维护Consul集群的状态，官方建议每个Consul Cluster至少有3个或以上的运行在Server mode的Agent，Client节点不限。\r\n\r\n![这里写图片描述](http://upload-images.jianshu.io/upload_images/96681-82229e2c44b6e6ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n每个数据中心的Consul Cluster都会在运行于server模式下的agent节点中选出一个Leader节点，这个选举过程通过Consul实现的raft协议保证，多个 server节点上的Consul数据信息是强一致的。处于client mode的Consul agent节点比较简单，无状态，仅仅负责将请求转发给Server agent节点。\r\n\r\n我们这次的架构有些调整，绘制一个服务器的逻辑上的部署图来说明下\r\n\r\n![Services register adn find, consul cluster](http://img.blog.csdn.net/20170727170455270?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n这是一张逻辑上服务部署的图，我们找3台机器来实验。每台机器上部署几个web server，一个registrator和一个consul client，这是基本需求。另外再建立一个consul cluster集群，用来当我们的注册中心。当web server启动后，被registrator感知，进而将注册信息发送给consul client，consul client则访问注册中心的leader节点，上报新加入的服务信息。consul cluster会将新的服务信息推送给已经到它这里订阅了服务消息的consul-template，consul-template再去修改和自己同一台机器上的nginx，以达到动态调整负载均衡的目的。\r\n\r\n> 注意：由于资源有限，我们没有单独使用机器去搭建consul集群，所以图中的consul client和consul server节点其实是同一个节点，因为server模式同时可以提供client的功能嘛。那个consul cluster集群其实是分布到3个host中建立起来的，我们就在3个host中分别启动一个consul进程，每个都同时担任server和client的功能。\r\n\r\n## 5.1 配置\r\n\r\nhost name | real ip | services | note\r\n--- | --- | --- | ---\r\nhost-1| 10.111.152.136 | registrator、helloworld*n、consul-server、consul-template、nginx| 放置consol web ui和nginx负载均衡\r\nhost-2| 10.111.152.135 | registrator、helloworld*n、consul-server\r\nhost-3| 10.111.152.168 | registrator、helloworld*n、consul-server\r\n\r\nhost-1作为运行负载均衡的机器，部署consul-template和nginx。每个机器上都部署了consul-server节点，也就是我们有3个节点，接下来就研究这3个节点是如何选举leader的。\r\n\r\n**host-1的docker-compose.yml文件**\r\n```\r\n#backend web application, scale this with docker-compose scale web=3\r\nweb:\r\n  image: liberalman/helloworld:latest\r\n  environment:\r\n    SERVICE_80_NAME: my-web-server\r\n    SERVICE_TAGS: backend-1\r\n    MY_HOST: host-1\r\n  ports:\r\n  - \"80\"\r\n\r\n#load balancer will automatically update the config using consul-template\r\nlb:\r\n  image: liberalman/nginx-consul-template:latest\r\n  hostname: lb\r\n  links:\r\n  - consulserver:consul\r\n  ports:\r\n  - \"80:80\"\r\n\r\nconsulserver:\r\n  image: progrium/consul:latest\r\n  environment:\r\n    SERVICE_TAGS: consul servers\r\n  hostname: consulserver-node1\r\n  ports:\r\n  - \"8300:8300\"\r\n  - \"8301:8301\"\r\n  - \"8301:8301/udp\"\r\n  - \"8302:8302\"\r\n  - \"8302:8302/udp\"\r\n  - \"8400:8400\"\r\n  - \"8500:8500\"\r\n  - \"53:53/udp\"\r\n  command: -server -ui-dir /ui -advertise 10.111.152.136 -bootstrap-expect 3\r\n\r\n# listen on local docker sock to register the container with public ports to the consul service\r\nregistrator:\r\n  image: gliderlabs/registrator:master\r\n  hostname: registrator-1\r\n  volumes:\r\n  - \"/var/run/docker.sock:/tmp/docker.sock\"\r\n  command: -ip 10.111.152.136 consul://10.111.152.136:8500\r\n```\r\n参数解释下\r\n\r\n- hostname，将来consul节点都靠这个来标识了，所以每个物理机上的节点名称都要区别开，以免冲突。\r\n- -bootstrap-expect 3，这个参数的作用是，当consulserver-node1节点启动之后，等待另外两个节点的加入，3个节点聚齐后，之后才开始选举leader。\r\n- -advertise 10.111.152.136，如果要让节点在WAN网络中被发现，就要配置这个参数，暴露出外网ip。如果只在LAN中被发现，就不用配置这个了，默认绑定内网ip。\r\n- -ui-dir /ui，这个配置是指定当前节点支持consul ui的web页面。\r\n\r\n**host-2的docker-compose.yml文件**\r\n```\r\n#backend web application, scale this with docker-compose scale web=3\r\nweb:\r\n  image: liberalman/helloworld:latest\r\n  environment:\r\n    SERVICE_80_NAME: my-web-server\r\n    SERVICE_TAGS: backend-2\r\n    MY_HOST: host-2\r\n  ports:\r\n  - \"80\"\r\n\r\nconsulserver:\r\n  image: progrium/consul:latest\r\n  environment:\r\n    SERVICE_TAGS: consul servers\r\n  hostname: consulserver-node2\r\n  ports:\r\n  - \"8300:8300\"\r\n  - \"8301:8301\"\r\n  - \"8301:8301/udp\"\r\n  - \"8302:8302\"\r\n  - \"8302:8302/udp\"\r\n  - \"8400:8400\"\r\n  - \"8500:8500\"\r\n  - \"53:53/udp\"\r\n  command: -server -advertise 10.111.152.135  -join 10.111.152.136\r\n\r\n# listen on local docker sock to register the container with public ports to the consul service\r\nregistrator:\r\n  image: gliderlabs/registrator:master\r\n  hostname: registrator-2\r\n  volumes:\r\n  - \"/var/run/docker.sock:/tmp/docker.sock\"\r\n  command:  -ip 10.111.152.135 consul://10.111.152.136:8500\r\n```\r\n与host-1不同的是，host-2使用了参数\r\n-join 10.111.152.136 意思是把本节点加入到10.111.152.136这个ip的节点中，这是consulserver-node1的地址。我们上一个host的配置中表明，consulserver-node1这个节点启动后，会等待另外两个节点的加入，我们这里就是加入它。\r\n\r\n**host-3的docker-compose.yml文件**\r\n```\r\n#backend web application, scale this with docker-compose scale web=3\r\nweb:\r\n  image: liberalman/helloworld:latest\r\n  environment:\r\n    SERVICE_80_NAME: my-web-server\r\n    SERVICE_TAGS: backend-3\r\n    MY_HOST: host-3\r\n  ports:\r\n  - \"80\"\r\n\r\nconsulserver:\r\n  image: progrium/consul:latest\r\n  environment:\r\n    SERVICE_TAGS: consul servers\r\n  hostname: consulserver-node3\r\n  ports:\r\n  - \"8300:8300\"\r\n  - \"8301:8301\"\r\n  - \"8301:8301/udp\"\r\n  - \"8302:8302\"\r\n  - \"8302:8302/udp\"\r\n  - \"8400:8400\"\r\n  - \"8500:8500\"\r\n  - \"53:53/udp\"\r\n  command: -server -advertise 10.111.152.168 -join 10.111.152.136\r\n\r\n# listen on local docker sock to register the container with public ports to the consul service\r\nregistrator:\r\n  image: gliderlabs/registrator:master\r\n  hostname: registrator-3\r\n  volumes:\r\n  - \"/var/run/docker.sock:/tmp/docker.sock\"\r\n  command: -ip 10.111.152.168 consul://10.111.152.136:8500\r\n```\r\n\r\n> 注意：到这里你可能有疑问，上文的3个节点都是server节点，那client节点哪里去了，没有client节点怎么访问集群啊？我们和集群交互可是访问client，client再转发到server节点的。\r\n\r\n> 我们前篇也提到过，其实每个server节点，本身就具有client的功能，只是多了一些把所有的信息持久化的本地以及选举leader的功能呢，这样遇到故障，信息是可以被保留的。\r\n\r\n> 所以，这里我们每个主机上部署registrator的时候，配置的访问consul服务的地址也是就近访问本机上的consul节点，把它当成一个consul client访问就可以了。当然也可以单独部署一个client节点，只是我们至少要保证有3个server节点，才能完成leader选举，如果再多一台机器我会考虑专门加一个client节点。\r\n\r\n## 5.2 启动\r\n\r\n依次在host-1、host-2和host-3上启动3个节点。注意执行docker-compose up之后，不要关闭终端，让它一直打印，后续我们还要在这里看日志，别的操作都转到新开终端上执行。访问 http://10.111.152.136:8500/ui/#/dc1/nodes 看到节点都被添加上了\r\n\r\n![这里写图片描述](http://img.blog.csdn.net/20170727151145406?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\r\n\r\n除了查看ui界面外，也可以使用命令行看看有哪些服务注册了，在新终端下执行\r\n```\r\n~# curl 10.111.152.136:8500/v1/catalog/services|jq .\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   308  100   308    0     0  54892      0 --:--:-- --:--:-- --:--:-- 61600\r\n{\r\n  \"consul\": [],\r\n  \"consul-53\": [\r\n    \"consul servers\",\r\n    \"udp\"\r\n  ],\r\n  \"consul-8300\": [\r\n    \"consul servers\"\r\n  ],\r\n  \"consul-8301\": [\r\n    \"consul servers\",\r\n    \"udp\"\r\n  ],\r\n  \"consul-8302\": [\r\n    \"consul servers\",\r\n    \"udp\"\r\n  ],\r\n  \"consul-8400\": [\r\n    \"consul servers\"\r\n  ],\r\n  \"consul-8500\": [\r\n    \"consul servers\"\r\n  ],\r\n  \"my-web-server\": [\r\n    \"backend-1\",\r\n    \"backend-2\",\r\n    \"backend-3\"\r\n  ],\r\n  \"nginx-consul-template\": []\r\n}\r\n```\r\n\r\n访问 http://10.111.152.136 查看nginx负载均衡的效果，依次刷新，得到\r\n\r\nHello World! I\'m <font color=blue>host-1</font> <font color=red>addr:172.17.0.2</font>. I saw that you are 172.17.0.1:49728.\r\nHello World! I\'m <font color=blue>host-2</font> <font color=red>addr:172.17.0.3</font>. I saw that you are 10.111.152.136:54640.\r\nHello World! I\'m <font color=blue>host-3</font> <font color=red>addr:172.17.0.3</font>. I saw that you are 10.111.152.136:58660.\r\n\r\nOK，看起来一切正常。那我们现在分析下到底哪个节点是leader，有节点退出会怎样？\r\n\r\n现在新开一个终端，在host-1上，执行\r\n```\r\ndocker ps -f name=consul\r\n```\r\n查到consul节点的容器id是4364cd41f2ba。登录这个容器\r\n```\r\ndocker exec -it 4364cd41f2ba /bin/sh\r\n```\r\n然后就进入容器的操作系统环境了，在该环境下执行\r\n```\r\n/ # consul members\r\nNode                Address              Status  Type    Build  Protocol  DC\r\nconsulserver-node3  10.111.152.168:8301  alive   server  0.5.2  2         dc1\r\nconsulserver-node1  10.111.152.136:8301  alive   server  0.5.2  2         dc1\r\nconsulserver-node2  10.111.152.135:8301  alive   server  0.5.2  2         dc1\r\n```\r\n一目了然的看到了我们的3个consul节点。查看当前节点信息\r\n```\r\n/ # consul info\r\n......\r\nconsul:\r\n        bootstrap = false\r\n        known_datacenters = 1\r\n        leader = false\r\n        server = true\r\nraft:\r\n        applied_index = 192\r\n        commit_index = 192\r\n        fsm_pending = 0\r\n        last_contact = 15.960533ms\r\n        last_log_index = 192\r\n        last_log_term = 2\r\n        last_snapshot_index = 0\r\n        last_snapshot_term = 0\r\n        num_peers = 2\r\n        state = Follower\r\n        term = 2\r\n......\r\n```\r\n输出信息很多，省略掉，只给出重要的。server = true确实是server节点。看到leader=false，说明这个节点不是leader。state = Follower，看来确实是个Follower节点哦。last_contact = 15.960533ms心跳剩余时间，term = 2说是第二个term，已经选过2回了。\r\n\r\n执行上述命令的同时，由于之前在host-1上执行docker-compose up命令的时候，日志是直接输出到屏幕上的，我们此时可以节点1输出的日志\r\n```\r\nconsulserver_1  |     2017/07/26 05:08:20 [INFO] agent.rpc: Accepted client: 127.0.0.1:47084\r\nconsulserver_1  |     2017/07/26 05:08:24 [INFO] agent.rpc: Accepted client: 127.0.0.1:47086\r\n......\r\n```\r\n我们刚才执行的命令都是客户端发到当前consul server上的。\r\n\r\n同样的方式，在节点在conserver-node3上\r\n```\r\nconsul:\r\n        bootstrap = false\r\n        known_datacenters = 1\r\n        leader = true\r\n        server = true\r\n```\r\n原来leader是节点3.\r\n\r\n## 5.3 去掉节点\r\n\r\n让一个节点挂掉，看看会发生什么。\r\n### 5.3.1 关闭一个节点\r\n在host-1上新开终端执行\r\n```\r\n docker stop 4364cd41f2ba\r\n```\r\n看到host-1的日志滚动\r\n```\r\ngocode_consulserver_1 exited with code 1\r\nlb_1            | 2017/07/26 06:02:51.211894 [WARN] (view) health.service(my-web-server|passing): Get http://consul:8500/v1/health/service/my-web-server?index=40&passing=1&stale=&wait=60000ms: dial tcp 172.17.0.4:8500: i/o timeout (retry attempt 1 after \"250ms\")\r\nex=40&passing=1&stale=&wait=60000ms: dial tcp 172.17.0.4:8500: i/o timeout (retry attempt 1 after \"250ms\")\r\nlb_1            | 2017/07/26 06:03:10.099572 [WARN] (view) health.service(my-web-server|passing): Get http://consul:8500/v1/health/service/my-web-server?index=40&passing=1&stale=&wait=60000ms: dial tcp 172.17.0.4:8500: getsockopt: no route to host (retry attempt 2 after \"500ms\")\r\n......\r\n```\r\nlb_1会不断的打印重试到http://consul:8500的健康检查。\r\n\r\n不过此时访问 http://10.111.152.136 发现nginx并没有被破坏，还是可以正常路由到后端三个节点的，后端的web server也正常可用。没有受到一个consul server节点挂掉的影响。\r\n\r\n只是consul web ui无法访问了，http://10.111.152.136:8500/ui/#/dc1/services 因为刚好把这个节点停掉了。\r\n\r\n另外两个节点的日志情况\r\n\r\nhost-2机器上，consulserver-node2节点，也是一个Follower状态的节点上\r\n```\r\nconsulserver_1  |     2017/07/26 06:02:24 [INFO] memberlist: Suspect consulserver-node1 has failed, no acks received\r\nconsulserver_1  |     2017/07/26 06:02:27 [INFO] memberlist: Suspect consulserver-node1 has failed, no acks received\r\nconsulserver_1  |     2017/07/26 06:02:27 [INFO] memberlist: Marking consulserver-node1 as failed, suspect timeout reached\r\nconsulserver_1  |     2017/07/26 06:02:27 [INFO] serf: EventMemberFailed: consulserver-node1 10.111.152.136\r\nconsulserver_1  |     2017/07/26 06:02:27 [INFO] consul: removing server consulserver-node1 (Addr: 10.111.152.136:8300) (DC: dc1)\r\nconsulserver_1  |     2017/07/26 06:03:19 [INFO] serf: attempting reconnect to consulserver-node1 10.111.152.136:8301\r\nconsulserver_1  |     2017/07/26 06:03:49 [INFO] serf: attempting reconnect to consulserver-node1 10.111.152.136:8301\r\nconsulserver_1  |     2017/07/26 06:05:19 [INFO] serf: attempting reconnect to consulserver-node1 10.111.152.136:8301\r\n......\r\n```\r\n每隔30s尝试重连node1.\r\n\r\nhost-3机器上，consulserver-node3节点，我们的leader\r\n```\r\nconsulserver_1  |     2017/07/26 06:02:21 [INFO] raft: aborting pipeline replication to peer 10.111.152.136:8300\r\nconsulserver_1  |     2017/07/26 06:02:21 [ERR] raft: Failed to AppendEntries to 10.111.152.136:8300: EOF\r\nconsulserver_1  |     2017/07/26 06:02:21 [ERR] raft: Failed to heartbeat to 10.111.152.136:8300: dial tcp 10.111.152.136:8300: connection refused\r\nconsulserver_1  |     2017/07/26 06:02:21 [ERR] raft: Failed to AppendEntries to 10.111.152.136:8300: dial tcp 10.111.152.136:8300: connection refused\r\nconsulserver_1  |     2017/07/26 06:02:21 [ERR] raft: Failed to heartbeat to 10.111.152.136:8300: dial tcp 10.111.152.136:8300: connection refused\r\nconsulserver_1  |     2017/07/26 06:02:21 [ERR] raft: Failed to AppendEntries to 10.111.152.136:8300: dial \r\n......\r\n```\r\n也在尝试重连，而且它间隔2s就尝试一次，频率上更快。由于一直连不上，后来干脆去掉node1节点了。\r\n```\r\nconsulserver_1  |     2017/07/26 06:02:27 [INFO] memberlist: Suspect consulserver-node1 has failed, no acks received\r\nconsulserver_1  |     2017/07/26 06:02:27 [INFO] memberlist: Marking consulserver-node1 as failed, suspect timeout reached\r\nconsulserver_1  |     2017/07/26 06:02:27 [INFO] serf: EventMemberFailed: consulserver-node1 10.111.152.136\r\nconsulserver_1  |     2017/07/26 06:02:27 [INFO] consul: removing server consulserver-node1 (Addr: 10.111.152.136:8300) (DC: dc1)\r\n```\r\n不过虽然去掉了node1，但是其他节点依然没有放弃尝试重连node1。重连的操作一直都在继续中。\r\n\r\n### 5.3.2 恢复节点\r\n把刚才在host-1上关闭的容器重新启动\r\n```\r\ndocker start 4364cd41f2ba\r\n```\r\n看看3个机器都会输出什么。\r\n\r\nhost-1上\r\n```\r\nconsulserver_1  | ==> Starting raft data migration...\r\nconsulserver_1  | ==> Starting Consul agent...\r\nconsulserver_1  | ==> Starting Consul agent RPC...\r\nconsulserver_1  | ==> Consul agent running!\r\nconsulserver_1  |          Node name: \'consulserver-node1\'\r\nconsulserver_1  |         Datacenter: \'dc1\'\r\nconsulserver_1  |             Server: true (bootstrap: false)\r\nconsulserver_1  |        Client Addr: 0.0.0.0 (HTTP: 8500, HTTPS: -1, DNS: 53, RPC: 8400)\r\nconsulserver_1  |       Cluster Addr: 10.111.152.136 (LAN: 8301, WAN: 8302)\r\nconsulserver_1  |     Gossip encrypt: false, RPC-TLS: false, TLS-Incoming: false\r\nconsulserver_1  |              Atlas: <disabled>\r\n\r\n......\r\n\r\nconsulserver_1  |     2017/07/26 06:23:11 [INFO] consul: New leader elected: consulserver-node2\r\n......\r\n```\r\nconsulserver-node1节点又重新启动了，并且整个集群选举了新的leader上来：consulserver-node2\r\n\r\nhost-2上\r\n```\r\nconsulserver_1  |     2017/07/26 06:23:05 [INFO] consul: adding server consulserver-node1 (Addr: 10.111.152.136:8300) (DC: dc1)\r\n\r\n......\r\n\r\nconsulserver_1  |     2017/07/26 06:23:11 [INFO] consul: New leader elected: consulserver-node2\r\n......\r\n```\r\n感知到了consulserver-node1的复活，并且也参与了选举，选出新leader，是自己，哈哈。\r\n\r\nhost-3上\r\n```\r\nconsulserver_1  |     2017/07/26 06:23:05 [INFO] consul: adding server consulserver-node1 (Addr: 10.111.152.136:8300) (DC: dc1)\r\n\r\n......\r\n\r\nconsulserver_1  |     2017/07/26 06:23:11 [INFO] consul: New leader elected: consulserver-node2\r\n......\r\n```\r\n同样感知到了consulserver-node1的复活，并且也参与了选举，选出新leader。\r\n\r\n此时ngxin依然没受影响，web服务正常。而且consul web ui也可以正常访问了。一切都恢复如初。具体这3个节点是如何选举leader和处理节点的退出和重入的，参考我另外一篇文章 [consul实现的raft算法选举过程解析](https://www.liberalman.cn/article/105)。\r\n\r\n\r\n****\r\n> 创建于 2017-07-23 北京，更新于 2017-07-27 北京\r\n\r\n>该文章在以下平台同步\r\n>- LIBERALMAN:\r\n>- CSDN:http://blog.csdn.net/socho/article/details/75434733\r\n>- 简书:\r\n\r\n- [1]  引用 http://tonybai.com/2015/07/06/implement-distributed-services-registery-and-discovery-by-consul/\r\n- [2]  引用 http://alice.blog.51cto.com/707092/1896078\r\n\r\n# 附录：\r\n文中架构图都是用graphviz绘制的，附上图源码\r\n\r\n```\r\ndigraph G {\r\n    size=\"6,6\";\r\n    label=\"services register\"\r\n    node [colorscheme=paired12, color=1, style=filled];\r\n    register_center    [label=\"注册中心\", color=5, shape=\"record\"]\r\n    consumer    [label=\"服务消费者\", color=4, shape=\"record\"]\r\n    service    [label=\"服务提供者\", color=2, shape=\"record\"]\r\n\r\n    consumer -> register_center [label=\"2.订阅\"]\r\n    register_center -> consumer [label=\"5.通知\" style=dashed]\r\n    \r\n    consumer -> service [label=\"4.调用\"]\r\n    consumer -> consumer [label=\"3.缓存\" style=dashed]\r\n    service -> register_center [label=\"1.注册\"]\r\n}\r\n\r\n\r\ndigraph G {\r\n    size=\"6,6\";\r\n    label=\"load balance web servers\"\r\n    node [colorscheme=paired12, color=1, style=filled];\r\n    nginx    [label=\"nginx\", color=3, shape=\"record\"]\r\n    my_web_server_1    [label=\"my_web_server_1\", color=4, shape=\"record\"]\r\n    my_web_server_2    [label=\"my_web_server_2\", color=4, shape=\"record\"]\r\n    my_web_server_3    [label=\"my_web_server_3\", color=4, shape=\"record\"]\r\n\r\n    {Client1 Client2 Client3} -> nginx [label=\"访问\"]\r\n    \r\n    nginx -> {my_web_server_1 my_web_server_2 my_web_server_3} [label=\"转发\"]\r\n}\r\n\r\ndigraph G {\r\n    size=\"6,6\";\r\n    label=\"Services register and find\"\r\n    node [colorscheme=paired12, color=1, style=filled];\r\n    consul     [label=\"consul\", color=1]\r\n    consul_template     [label=\"consul_template\", color=2]\r\n    nginx    [label=\"nginx\", color=3, shape=\"record\"]\r\n    registrator    [label=\"registrator\", color=5]\r\n    my_web_server_1    [label=\"my_web_server_1\", color=4, shape=\"record\"]\r\n    my_web_server_2    [label=\"my_web_server_2\", color=4, shape=\"record\"]\r\n    my_web_server_3    [label=\"my_web_server_3\", color=4, shape=\"record\"]\r\n\r\n    {Client1 Client2 Client3} -> nginx [label=\"访问\"]\r\n    nginx -> {my_web_server_1 my_web_server_2 my_web_server_3} [label=\"转发\"]\r\n    {my_web_server_1 my_web_server_2 my_web_server_3} -> registrator [color=\"red\",style=\"dashed\",label=\"监控\"]\r\n    registrator -> consul [color=\"red\",style=\"dashed\",label=\"注册\"]\r\n    consul -> consul_template [dir=both color=red style=\"dashed\" label=\"订阅服务\"]\r\n    \r\n    consul_template -> nginx [color=red,style=\"dashed\",label=\"配置更新\"]\r\n}\r\n\r\n\r\ndigraph G {\r\n    size=\"6,6\";\r\n    label=\"Services register and find, consul cluster\"\r\n    node [colorscheme=paired12, color=1, style=filled];\r\n    consul_node1     [label=\"consul_node1(leader)\", color=7]\r\n    consul_node2     [label=\"consul_node2\", color=7]\r\n    consul_node3     [label=\"consul_ndoe3\", color=7]\r\n    consul_client1     [label=\"consul_client1\", color=7]\r\n    consul_client2     [label=\"consul_client2\", color=7]\r\n    consul_client3     [label=\"consul_client3\", color=7]\r\n    consul_template     [label=\"consul_template\", color=2]\r\n    nginx    [label=\"nginx\", color=3, shape=\"record\"]\r\n    registrator_1    [label=\"registrator_1\", color=5]\r\n    registrator_2    [label=\"registrator_2\", color=5]\r\n    registrator_3    [label=\"registrator_3\", color=5]\r\n    my_web_server_1    [label=\"my_web_server_1\", color=4, shape=\"record\"]\r\n    my_web_server_2    [label=\"my_web_server_2\", color=4, shape=\"record\"]\r\n    my_web_server_3    [label=\"my_web_server_3\", color=4, shape=\"record\"]\r\n    my_web_server_4    [label=\"my_web_server_4\", color=4, shape=\"record\"]\r\n    my_web_server_5    [label=\"my_web_server_5\", color=4, shape=\"record\"]\r\n    my_web_server_6    [label=\"my_web_server_6\", color=4, shape=\"record\"]\r\n\r\n    {Client1 Client2 Client3} -> nginx [label=\"访问\"]\r\n    nginx -> {my_web_server_1 my_web_server_2 my_web_server_3 my_web_server_4 my_web_server_5 my_web_server_6} [label=\"转发\"]\r\n    {my_web_server_1 my_web_server_2} -> registrator_1 [color=\"red\",style=\"dashed\",label=\"监控\"]\r\n    {my_web_server_3 my_web_server_4} -> registrator_2 [color=\"red\",style=\"dashed\",label=\"监控\"]\r\n    {my_web_server_5 my_web_server_6} -> registrator_3 [color=\"red\",style=\"dashed\",label=\"监控\"]\r\n    registrator_1 -> consul_client1 [color=\"red\",style=\"dashed\",label=\"注册\"]\r\n    registrator_2 -> consul_client2 [color=\"red\",style=\"dashed\",label=\"注册\"]\r\n    registrator_3 -> consul_client3 [color=\"red\",style=\"dashed\",label=\"注册\"]\r\n    {consul_client1 consul_client2 consul_client3} -> consul_node1 [color=\"red\",style=\"dashed\",label=\"注册\"]\r\n    consul_node1 -> consul_node2 -> consul_node3 [dir=both style=dashed color=blue]\r\n    consul_node1 -> consul_template [dir=both color=red style=\"dashed\" label=\"订阅服务\"]\r\n   \r\n    consul_template -> nginx [color=red,style=\"dashed\",label=\"配置更新\"]\r\n    \r\n    subgraph cluster_host_1 {\r\n        label=\"host_1\"\r\n        my_web_server_1\r\n        my_web_server_2\r\n        registrator_1\r\n        consul_client1\r\n    }\r\n    subgraph cluster_host_2 {\r\n        label=\"host_2\"\r\n        my_web_server_3\r\n        my_web_server_4\r\n        registrator_2\r\n        consul_client2\r\n    }\r\n    subgraph cluster_host_3 {\r\n        label=\"host_3\"\r\n        my_web_server_5\r\n        my_web_server_6\r\n        registrator_3\r\n        consul_client3\r\n    }\r\n    subgraph cluster_clu {\r\n        label=\"consul cluster\"\r\n        consul_node1\r\n        consul_node2\r\n        consul_node3\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n',',技术,',349,0,'2017-07-28 01:52:32','2017-07-28 01:52:41',0,'http://img.blog.csdn.net/20170727173023209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc29jaG8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast',0,''),(113,1,'《我不是潘金莲》','摘录','','',0,'竟是部官场电影！围绕在李雪莲身边各级官员，从县长到北京的“首长”，再加上法院和警察系统，组成一幅中国官场现形记。淋漓尽致地展现了地方官员在两会等敏感时期求稳定求和谐的心态和作风。有态度！演员表演认真。圆形方形构图独特优美，蕴意丰富。冯导仍能追求新手法，拍敏感题材，牛逼！四星半\r\n\r\n对拦车、截访之类的表现，充分满足了老百姓（有关部门）对青天大老爷、善解民心老干部的CCTV幻想\r\n\r\n3.5。这是一部发生在另一个平行世界里的忧伤童话。在那个中国，尽管所有人也还都是一脑袋浆糊，但不同的是，人民温柔地纠缠官府，官府和蔼地劝服人民。双方谱写的是和谐美好而又戏剧化宿命悲情的诗意赞歌。对这片的政治纠察是一种短视的愚见，它其实是一曲温和的曲线救国主旋律。\r\n\r\n\r\n家庭的事你让法律让政府怎么帮你解决呢\r\n\r\n这就是一个刁民的无谓上访\r\n\r\n\r\n大领导没问题，制度没问题，对权力系统之恶没啥触碰。蠢的是底下的官员，群众上访从根上来说也是无理取闹，拦截上访群众的警察形象也很正面。有这个内核，弄再花哨的形式也无济于事。政治片的内在深度与官员级别高低没啥关系，背靠背脸对脸说的就是小衙门的事。\r\n\r\n周末人多，大家都是奔着潘金莲来的。 难怪世人都说电影是假的，吃过共产党饭的都再清楚不过，这部电影的假，假得让人慎得慌。大伙儿把这部电影当小说看看就成，而且是看完就可以忘记的那种。 那有没有真的？有!贾樟柯的《天注定》。同样是告状，天注定截然不同，正如鲁迅先生说的，直面惨淡的人生\r\n\r\n“老百姓不容易，但政府更不容易”的核心思想\r\n\r\n“深知公仆之多艰”——冯小刚这种假平民真权贵的思维还是很容易忽悠人的。\r\n\r\n表面上既嘲讽官僚又嘲讽刁民，实际上又想讨好领导又想迎合群众，我知道审查难\r\n\r\n挺心疼中国导演的，明知道有审查制度，还有那么多无脑的人攻击冯小刚为什么不拍个更惨的上访故事，可能过审吗？就像1942时，有人问为什么不拍60年饥荒，而且这种论调还有广泛支持。这是一种非常邪恶的心理，明知道前面是地雷阵，却依旧希望你去送死，不去你就是懦夫，他们就喜欢看菜市口砍脑袋\r\n\r\n为了私利亵渎婚姻，还理直气壮地说自己冤，真是无耻。告状不成，还起了杀人的念头，真是智障。\r\n\r\n一定得明白，电影局在中国是个职权很有限的主管部门，让这样的电影上映确实得有人去顶雷，而且后果很可能是审查尺度的收紧。如果不能理解这一点，也就没必要去看《潘金莲》了。\r\n\r\n\r\n一个乌托邦世界：地方官员没法阻止治下民众年复一年到京上访；民众可以一次次地向官方进行近乎无理取闹的告状，官员不做回应就会丢乌纱帽。如果你能接受这种设定，这部电影还是能逻辑自洽的。不过钢炮在中传映后交流会上喷提问学生算是喷对了：我都这么为当局说话了，你怎么还在替审查官操心？\r\n\r\n如果认为上访把官员踢下台就完了那只会没完没了，真以为有人向着你了？另外结尾我很不喜欢，为什么就不能纯粹地为了房子和钱告状了\r\n\r\n为什么里面的一把手都是县长，市长，省长..而不是县委书记、市委书记还有省委书记呢\r\n\r\n开玩笑，根本就理亏不合情理，秋菊是你想当就能当的吗，告十几年？就这点事，被冤杀的上访两三年就给关精神病院了还能由着性子一茬茬往下撸领导？最后这么主旋律也是呵呵后了，\r\n\r\n，张译贾聪明、张嘉译假发市长、范伟果园长\r\n\r\n\r\n “大事化小，小事化了”，一出啼笑皆非的上访闹剧，凸显出中国千百年来的传统思想下一个难以言表的现实\r\n\r\n找了这个长那个长，就是不找书记，不承认党对一切的绝对领导，犯了严重的右倾机会主义错误\r\n\r\n\r\n果然大多国内导演不敢触碰现实题材，只敢在爱情喜剧魔幻古装里兜兜转转，因为观众已经不习惯在银幕上接受现实了\r\n\r\n最后还是得拉计生委来背锅\r\n\r\n进阶版的主旋律教育片\r\n\r\n架空现实的电影\r\n\r\n\r\n“本地都是糊涂人 北京总该有明白人吧”冯导有用贤人政治给人民洗脑的嫌疑 官大一级更亲民智慧吗？我看只是愚民的权谋玩的更高级罢了 小范围的围追堵截是行政工作 入京排查才是截访的终极行为艺术\r\n\r\n\r\n冯小刚依然投机，能过审已是奇迹。你讲你的歪理，我谋我的私利。\r\n\r\n陆川这次说得没错：能进中国院线的批判现实主义题材，必然经历浴火重生的坎坷，都值得获得一份尊重。\r\n\r\n鲜活的天朝官场寓言：纲领永远光明正确，执行永远错误苟且。解决问题的方式就是把提出问题的人解决掉。一个刁妇告状十年，想讨回的并不是最终早已符号化的房子，而是荣誉、尊严和一种身份归属。虽为一届农妇，认知水准有限，但从本能和直觉上十分洞悉谁愿意帮她解决问题，而谁只把她当问题想速速解决。\r\n\r\n隔靴搔痒\r\n\r\n看完《我不是潘金莲》 ，就听到隔壁的师傅说：“秦玉河一定是被县长弄死的！太黑暗了～”\r\n\r\n为过审妥协从不是严重问题\r\n\r\n“领导越往上越好，都怪下边执行歪了！”\r\n\r\n我觉得一点都不写实：一个告状的农村妇女，需要院长县长和市长天天提着礼物上门说好话做工作吗？现实生活中，一个城管就搞定了吧。\r\n\r\n几乎忘了在国内单凭自己的力量要办一件事有多难。',',生活,',5,0,'2017-07-28 03:59:51','2017-07-28 03:59:51',0,'',0,''),(115,1,'elasticsearch 用处','elasticsearch 用处','','',0,'由于需要提升项目的搜索质量，最近研究了一下Elasticsearch，一款非常优秀的分布式搜索程序。\r\n\r\n首先，为什么要使用Elasticsearch？最开始的时候，我们的项目仅仅使用MySQL进行简单的搜索，然后一个不能索引的like语句，直接拉低MySQL的性能。后来，我们曾考虑过sphinx，并且sphinx也在之前的项目中成功实施过，但想想现在的数据量级，多台MySQL，以及搜索服务本身HA，还有后续扩容的问题，我们觉得sphinx并不是一个最优的选择。于是自然将目光放到了Elasticsearch上面。\r\n\r\n根据官网自己的介绍，Elasticsearch是一个分布式搜索服务，提供Restful API，底层基于Lucene，采用多shard的方式保证数据安全，并且提供自动resharding的功能，加之github等大型的站点也采用 Elasticsearch作为其搜索服务，我们决定在项目中使用Elasticsearch。\r\n对于Elasticsearch，如果要在项目中使用，需要解决如下问题：\r\n索引，对于需要搜索的数据，如何建立合适的索引，还需要根据特定的语言使用不同的analyzer等。\r\n搜索，Elasticsearch提供了非常强大的搜索功能，如何写出高效的搜索语句？\r\n数据源，我们所有的数据是存放到MySQL的，MySQL是唯一数据源，如何将MySQL的数据导入到Elasticsearch？\r\n对于1和2，因为我们的数据都是从MySQL生成，index的field是固定的，主要做的工作就是根据业务场景设计好对应的mapping以及search语句就可以了，当然实际不可能这么简单，需要我们不断的调优。\r\n而对于3，则是需要一个工具将MySQL的数据导入Elasticsearch，因为我们对搜索实时性要求很高，所以需要将MySQL的增量数据实时导入，笔者唯一能想到的就是通过row based binlog来完成。而近段时间的工作，也就是实现一个MySQL增量同步到Elasticsearch的服务。\r\nLucene\r\nElasticsearch底层是基于Lucene的，Lucene是一款优秀的搜索lib，当然，笔者以前仍然没有接触使用过。:-)\r\nLucene关键概念：\r\nDocument：用来索引和搜索的主要数据源，包含一个或者多个Field，而这些Field则包含我们跟Lucene交互的数据。\r\nField：Document的一个组成部分，有两个部分组成，name和value。\r\nTerm：不可分割的单词，搜索最小单元。\r\nToken：一个Term呈现方式，包含这个Term的内容，在文档中的起始位置，以及类型。\r\nLucene使用Inverted index来存储term在document中位置的映射关系。\r\n譬如如下文档：\r\nElasticsearch Server 1.0 （document 1）\r\nMastring Elasticsearch （document 2）\r\nApache Solr 4 Cookbook （document 3）\r\n使用inverted index存储，一个简单地映射关系：\r\nTerm\r\nCount\r\nDocuemnt\r\n1.0    1    <1>    \r\n4    1    <3>    \r\nApache    1    <3>    \r\nCookbook    1    <3>    \r\nElasticsearch    2    <1>.<2>    \r\nMastering    1    <2>    \r\nServer    1    <1>    \r\nSolr    1    <3>    \r\n对于上面例子，我们首先通过分词算法将一个文档切分成一个一个的token，再得到该token与document的映射关系，并记录token出现的总次数。这样就得到了一个简单的inverted index。\r\nElasticsearch关键概念\r\n要使用Elasticsearch，笔者认为，只需要理解几个基本概念就可以了。\r\n在数据层面，主要有：\r\nIndex：Elasticsearch用来存储数据的逻辑区域，它类似于关系型数据库中的db概念。一个index可以在一个或者多个shard上面，同时一个shard也可能会有多个replicas。\r\nDocument：Elasticsearch里面存储的实体数据，类似于关系数据中一个table里面的一行数据。\r\ndocument由多个field组成，不同的document里面同名的field一定具有相同的类型。document里面field可以重复出现，也就是一个field会有多个值，即multivalued。\r\nDocument type：为了查询需要，一个index可能会有多种document，也就是document type，但需要注意，不同document里面同名的field一定要是相同类型的。\r\nMapping：存储field的相关映射信息，不同document type会有不同的mapping。\r\n对于熟悉MySQL的童鞋，我们只需要大概认为Index就是一个db，document就是一行数据，field就是table的column，mapping就是table的定义，而document type就是一个table就可以了。\r\nDocument type这个概念其实最开始也把笔者给弄糊涂了，其实它就是为了更好的查询，举个简单的例子，一个index，可能一部分数据我们想使用一种查询方式，而另一部分数据我们想使用另一种查询方式，于是就有了两种type了。不过这种情况应该在我们的项目中不会出现，所以通常一个index下面仅会有一个 type。\r\n在服务层面，主要有：\r\nNode: 一个server实例。\r\nCluster：多个node组成cluster。\r\nShard：数据分片，一个index可能会存在于多个shards，不同shards可能在不同nodes。\r\nReplica：shard的备份，有一个primary shard，其余的叫做replica shards。\r\nElasticsearch之所以能动态resharding，主要在于它最开始就预先分配了多个shards（貌似是1024），然后以shard为单位进行数据迁移。这个做法其实在分布式领域非常的普遍，codis就是使用了1024个slot来进行数据迁移。\r\n因为任意一个index都可配置多个replica，通过冗余备份的方式保证了数据的安全性，同时replica也能分担读压力，类似于MySQL中的slave。\r\nRestful API\r\nElasticsearch提供了Restful API，使用json格式，这使得它非常利于与外部交互，虽然Elasticsearch的客户端很多，但笔者仍然很容易的就写出了一个简易客户端用于项目中，再次印证了Elasticsearch的使用真心很容易。\r\nRestful的接口很简单，一个url表示一个特定的资源，譬如/blog/article/1，就表示一个index为blog，type为aritcle，id为1的document。\r\n而我们使用http标准method来操作这些资源，POST新增，PUT更新，GET获取，DELETE删除，HEAD判断是否存在。\r\n这里，友情推荐httpie，一个非常强大的http工具，个人感觉比curl还用，几乎是命令行调试Elasticsearch的绝配。\r\n一些使用httpie的例子:\r\n# create\r\nhttp POST :9200/blog/article/1 title=\"hello elasticsearch\" tags:=\'[\"elasticsearch\"]\'\r\n# get\r\nhttp GET :9200/blog/article/1\r\n# update\r\nhttp PUT :9200/blog/article/1 title=\"hello elasticsearch\" tags:=\'[\"elasticsearch\", \"hello\"]\'\r\n# delete\r\nhttp DELETE :9200/blog/article/1\r\n# exists\r\nhttp HEAD :9200/blog/article/1\r\n索引和搜索\r\n虽然Elasticsearch能自动判断field类型并建立合适的索引，但笔者仍然推荐自己设置相关索引规则，这样才能更好为后续的搜索服务。\r\n我们通过定制mapping的方式来设置不同field的索引规则。\r\n而对于搜索，Elasticsearch提供了太多的搜索选项，就不一一概述了。\r\n索引和搜索是Elasticsearch非常重要的两个方面，直接关系到产品的搜索体验，但笔者现阶段也仅仅是大概了解了一点，后续在详细介绍。\r\n同步MySQL数据\r\nElasticsearch是很强大，但要建立在有足量数据情况下面。我们的数据都在MySQL上面，所以如何将MySQL的数据导入Elasticsearch就是笔者最近研究的东西了。\r\n虽然现在有一些实现，譬如elasticsearch-river-jdbc，或者elasticsearch-river-mysql，但笔者并不打算使用。\r\nelasticsearch-river-jdbc的功能是很强大，但并没有很好的支持增量数据更新的问题，它需要对应的表只增不减，而这个几乎在项目中是不可能办到的。\r\nelasticsearch-river-mysql倒是做的很不错，采用了python-mysql-replication来通过binlog获取变更的数据，进行增量更新，但它貌似处理MySQL dump数据导入的问题，不过这个笔者真的好好确认一下？话说，python-mysql-replication笔者还提交过pull解决了minimal row image的问题，所以对elasticsearch-river-mysql这个项目很有好感。只是笔者决定自己写一个出来。\r\n为什么笔者决定自己写一个，不是因为笔者喜欢造轮子，主要原因在于对于这种MySQL syncer服务（增量获取MySQL数据更新到相关系统），我们不光可以用到Elasticsearch上面，而且还能用到其他服务，譬如cache上面。所以笔者其实想实现的是一个通用MySQL syncer组件，只是现在主要关注Elasticsearch罢了。\r\n项目代码在这里go-mysql-elasticsearch，现已完成第一阶段开发，内部对接测试中。\r\ngo-mysql-elasticsearch的原理很简单，首先使用mysqldump获取当前MySQL的数据，然后在通过此时binlog的name和position获取增量数据。\r\n一些限制：\r\nbinlog一定要变成row-based format格式，其实我们并不需要担心这种格式的binlog占用太多的硬盘空间，MySQL 5.6之后GTID模式都推荐使用row-based format了，而且通常我们都会把控SQL语句质量，不允许一次性更改过多行数据的。\r\n需要同步的table最好是innodb引擎，这样mysqldump的时候才不会阻碍写操作。\r\n需要同步的table一定要有主键，好吧，如果一个table没有主键，笔者真心会怀疑设计这个table的同学编程水平了。多列主键也是不推荐的，笔者现阶段不打算支持。\r\n一定别动态更改需要同步的table结构，Elasticsearch只能支持动态增加field，并不支持动态删除和更改field。通常来说，如果涉及到alter table，很多时候已经证明前期设计的不合理以及对于未来扩展的预估不足了。\r\n更详细的说明，等到笔者完成了go-mysql-elasticsearch的开发，并通过生产环境中测试了，再进行补充。\r\n总结\r\n最近一周，笔者花了不少时间在Elasticsearch上面，现在算是基本入门了。其实笔者觉得，对于一门不懂的技术，找一份靠谱的资料（官方文档或者入门书籍），蛋疼的对着资料敲一遍代码，不懂的再问google，最后在将其用到实际项目，这门技术就算是初步掌握了，当然精通还得在下点功夫。\r\n现在笔者只是觉得Elasticsearch很美好，上线之后铁定会有坑的，那时候只能慢慢填了。话说，笔者是不是要学习下java了，省的到时候看不懂代码就惨了。:-)\r\n',',技术,',4,0,'2017-07-29 10:30:00','2017-07-28 18:30:31',0,'',1,'https://zhidao.baidu.com/question/1670990590638379267.html'),(116,1,'linux 命令','常用linux命令汇总','','',0,'```free -mh``` 查看剩余内存是否足够\r\n',',技术,',2,0,'2017-07-28 19:42:10','2017-07-28 19:42:11',0,'',0,'');
/*!40000 ALTER TABLE `tb_post` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`socho`@`%`*/ /*!50003 TRIGGER `tg_post_insert` AFTER INSERT ON `tb_post` FOR EACH ROW begin
	update tb_user set post_count=(select count(id) from tb_post where userid=new.userid) where id=new.userid;
end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`socho`@`%`*/ /*!50003 TRIGGER `tg_post_delete` AFTER DELETE ON `tb_post` FOR EACH ROW begin
	update tb_user set post_count=(select count(id) from tb_post where userid=old.userid) where id=old.userid;
end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `tb_statistics`
--

DROP TABLE IF EXISTS `tb_statistics`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_statistics` (
  `id` mediumint(9) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_count` int(10) unsigned DEFAULT '0' COMMENT '用户数',
  `post_count` int(10) unsigned DEFAULT '0' COMMENT '文章数量',
  `tag_count` int(10) unsigned DEFAULT '0' COMMENT '标签数量',
  `dau` int(10) unsigned DEFAULT '0' COMMENT '日活跃数量',
  `tags` varchar(128) DEFAULT NULL COMMENT '标签的统计数据',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=109 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_statistics`
--

LOCK TABLES `tb_statistics` WRITE;
/*!40000 ALTER TABLE `tb_statistics` DISABLE KEYS */;
INSERT INTO `tb_statistics` VALUES (1,3,39,4,2,NULL,'2016-08-17 12:56:09'),(2,3,39,4,2,NULL,'2016-08-18 00:00:00'),(3,3,39,4,1,NULL,'2016-08-19 00:00:00'),(4,3,41,4,2,NULL,'2016-08-20 00:00:00'),(5,3,41,4,0,NULL,'2016-08-21 00:00:00'),(6,3,41,4,0,NULL,'2016-08-22 00:00:00'),(7,3,41,4,0,NULL,'2016-08-23 00:00:00'),(8,3,44,4,1,NULL,'2016-08-24 00:00:00'),(9,3,44,4,1,NULL,'2016-08-25 00:00:00'),(10,3,44,4,2,NULL,'2016-08-26 00:00:00'),(11,3,44,4,0,NULL,'2016-08-27 00:00:00'),(12,3,44,4,0,NULL,'2016-08-28 00:00:00'),(13,3,44,4,0,NULL,'2016-08-29 00:00:00'),(14,3,44,4,0,NULL,'2016-08-30 00:00:00'),(15,3,44,4,0,NULL,'2016-08-31 00:00:00'),(16,3,44,4,1,NULL,'2016-09-01 00:00:00'),(17,3,44,4,1,NULL,'2016-09-02 00:00:00'),(18,3,45,4,1,NULL,'2016-09-03 00:00:00'),(19,3,45,4,0,NULL,'2016-09-04 00:00:00'),(20,3,46,4,1,NULL,'2016-09-05 00:00:00'),(21,3,46,4,0,NULL,'2016-09-06 00:00:00'),(22,3,47,4,1,NULL,'2016-09-07 00:00:00'),(23,3,48,4,1,NULL,'2016-09-08 00:00:00'),(24,3,48,4,1,NULL,'2016-09-09 00:00:00'),(25,3,49,4,1,NULL,'2016-09-10 00:00:00'),(26,3,52,4,1,'{\"total\":54,\"list\":[ {\"name\":\"技术\",\"count\":33},{\"name\":\"思想\",\"count\":19},{\"name\":\"历史\",\"count\":1}]}','2016-09-11 00:00:00'),(30,3,53,4,1,NULL,'2016-09-13 00:00:00'),(31,3,54,4,1,NULL,'2016-09-14 00:00:00'),(29,3,53,4,1,NULL,'2016-09-12 00:00:00'),(32,3,54,4,0,NULL,'2016-09-15 00:00:00'),(33,3,54,4,0,NULL,'2016-09-16 00:00:00'),(34,3,54,4,0,NULL,'2016-09-17 00:00:00'),(35,3,54,4,1,NULL,'2016-09-18 00:00:00'),(36,3,54,4,0,NULL,'2016-09-19 00:00:00'),(37,3,54,4,0,NULL,'2016-09-20 00:00:00'),(38,3,54,4,1,NULL,'2016-09-21 00:00:00'),(39,3,54,4,0,NULL,'2016-09-22 00:00:00'),(40,3,54,4,0,NULL,'2016-09-23 00:00:00'),(41,3,54,4,0,NULL,'2016-09-24 00:00:00'),(42,3,54,4,0,NULL,'2016-09-25 00:00:00'),(43,3,54,4,0,NULL,'2016-09-26 00:00:00'),(44,3,54,4,0,NULL,'2016-09-27 00:00:00'),(45,3,54,4,0,NULL,'2016-09-28 00:00:00'),(46,3,54,4,0,NULL,'2016-09-29 00:00:00'),(47,3,54,4,0,NULL,'2016-09-30 00:00:00'),(48,3,54,4,0,NULL,'2016-10-01 00:00:00'),(49,3,54,4,0,NULL,'2016-10-02 00:00:00'),(50,3,54,4,0,NULL,'2016-10-03 00:00:00'),(51,3,54,4,0,NULL,'2016-10-04 00:00:00'),(52,3,54,4,0,NULL,'2016-10-05 00:00:00'),(53,3,54,4,0,NULL,'2016-10-06 00:00:00'),(54,3,54,4,0,NULL,'2016-10-07 00:00:00'),(55,3,54,4,0,NULL,'2016-10-08 00:00:00'),(56,3,54,4,0,NULL,'2016-10-09 00:00:00'),(57,3,55,5,1,NULL,'2016-10-10 00:00:00'),(58,3,55,5,0,NULL,'2016-10-11 00:00:00'),(59,3,55,5,1,NULL,'2016-10-12 00:00:00'),(60,3,55,5,0,NULL,'2016-10-13 00:00:00'),(61,3,55,5,0,NULL,'2016-10-14 00:00:00'),(62,3,55,5,0,NULL,'2016-10-15 00:00:00'),(63,3,55,5,0,NULL,'2016-10-16 00:00:00'),(64,3,55,5,0,NULL,'2016-10-17 00:00:00'),(65,3,55,5,0,NULL,'2016-10-18 00:00:00'),(66,3,55,5,0,NULL,'2016-10-19 00:00:00'),(67,3,55,5,0,NULL,'2016-10-20 00:00:00'),(68,3,55,5,0,NULL,'2016-10-21 00:00:00'),(69,3,55,5,0,NULL,'2016-10-22 00:00:00'),(70,3,55,5,0,NULL,'2016-10-23 00:00:00'),(71,3,55,5,0,NULL,'2016-10-24 00:00:00'),(72,3,56,5,1,NULL,'2016-10-25 00:00:00'),(73,3,56,5,0,NULL,'2016-10-26 00:00:00'),(74,3,56,5,0,NULL,'2016-10-27 00:00:00'),(75,3,56,5,0,NULL,'2016-10-28 00:00:00'),(76,3,57,5,1,NULL,'2016-10-29 00:00:00'),(77,3,57,5,0,NULL,'2016-10-30 00:00:00'),(78,3,57,5,0,NULL,'2016-10-31 00:00:00'),(79,3,57,5,0,NULL,'2016-11-01 00:00:00'),(80,3,57,5,0,NULL,'2016-11-02 00:00:00'),(81,3,57,5,0,NULL,'2016-11-03 00:00:00'),(82,3,57,5,0,NULL,'2016-11-04 00:00:00'),(83,3,57,5,0,NULL,'2016-11-05 00:00:00'),(84,3,58,5,1,NULL,'2016-11-06 00:00:00'),(85,3,58,5,0,NULL,'2016-11-07 00:00:00'),(86,3,58,5,0,NULL,'2016-11-08 00:00:00'),(87,3,58,5,0,NULL,'2016-11-09 00:00:00'),(88,3,58,5,0,NULL,'2016-11-10 00:00:00'),(89,3,58,5,0,NULL,'2016-11-11 00:00:00'),(90,3,58,5,0,NULL,'2016-11-12 00:00:00'),(91,3,58,5,0,NULL,'2016-11-13 00:00:00'),(92,3,59,5,1,NULL,'2016-11-14 00:00:00'),(93,3,59,5,0,NULL,'2016-11-15 00:00:00'),(94,3,59,5,0,NULL,'2016-11-16 00:00:00'),(95,3,59,5,0,NULL,'2016-11-17 00:00:00'),(96,3,59,5,0,NULL,'2016-11-18 00:00:00'),(97,3,59,5,0,NULL,'2016-11-19 00:00:00'),(98,3,59,5,0,NULL,'2016-11-20 00:00:00'),(99,3,59,5,0,NULL,'2016-11-21 00:00:00'),(100,3,59,5,0,NULL,'2016-11-22 00:00:00'),(101,3,59,5,0,NULL,'2016-11-23 00:00:00'),(102,3,59,5,0,NULL,'2016-11-24 00:00:00'),(103,3,59,5,0,NULL,'2016-11-25 00:00:00'),(104,3,59,5,0,NULL,'2016-11-26 00:00:00'),(105,3,59,5,0,NULL,'2016-11-27 00:00:00'),(106,3,59,5,0,NULL,'2016-11-28 00:00:00'),(107,3,59,5,0,NULL,'2016-11-29 00:00:00'),(108,3,59,5,0,NULL,'2016-11-30 00:00:00');
/*!40000 ALTER TABLE `tb_statistics` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_tag`
--

DROP TABLE IF EXISTS `tb_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_tag` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL DEFAULT '' COMMENT '标签名',
  `count` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT '使用次数',
  PRIMARY KEY (`id`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_tag`
--

LOCK TABLES `tb_tag` WRITE;
/*!40000 ALTER TABLE `tb_tag` DISABLE KEYS */;
INSERT INTO `tb_tag` VALUES (11,'技术',58),(12,'思想',24),(15,'历史',1),(16,'比特币',1),(17,'日记',1),(18,'生活',4);
/*!40000 ALTER TABLE `tb_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_tag_post`
--

DROP TABLE IF EXISTS `tb_tag_post`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_tag_post` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `tagid` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT '标签id',
  `postid` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT '内容id',
  `poststatus` tinyint(3) NOT NULL DEFAULT '0' COMMENT '内容状态',
  `posttime` datetime DEFAULT NULL COMMENT '发布时间',
  PRIMARY KEY (`id`),
  KEY `tagid` (`tagid`),
  KEY `postid` (`postid`)
) ENGINE=InnoDB AUTO_INCREMENT=517 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_tag_post`
--

LOCK TABLES `tb_tag_post` WRITE;
/*!40000 ALTER TABLE `tb_tag_post` DISABLE KEYS */;
INSERT INTO `tb_tag_post` VALUES (82,11,23,0,'2015-10-30 22:47:44'),(87,11,20,0,'2015-11-05 14:04:54'),(135,11,31,0,'2016-06-03 14:13:18'),(157,11,35,0,'2016-06-04 22:34:35'),(185,11,37,0,'2016-06-14 18:03:27'),(239,11,54,0,'2016-07-22 22:54:22'),(247,11,59,0,'2016-08-06 00:07:48'),(249,11,39,0,'2016-08-06 20:50:17'),(251,12,60,0,'2016-08-06 21:35:03'),(254,12,61,0,'2016-08-10 14:02:04'),(257,11,58,0,'2016-08-10 16:01:02'),(260,11,44,0,'2016-08-10 19:33:30'),(262,11,38,0,'2016-08-13 16:05:06'),(263,12,62,0,'2016-08-13 22:07:34'),(265,12,68,0,'2016-08-19 12:52:43'),(267,11,69,0,'2016-08-19 16:42:49'),(273,11,71,0,'2016-08-23 16:29:42'),(287,12,72,0,'2016-08-25 13:24:27'),(290,15,27,0,'2016-08-25 16:31:39'),(307,12,74,0,'2016-09-07 21:17:40'),(308,12,73,0,'2016-09-07 21:18:20'),(311,11,63,0,'2016-09-07 21:40:44'),(321,16,29,0,'2016-09-09 23:33:00'),(322,11,29,0,'2016-09-09 23:33:00'),(326,12,70,0,'2016-09-10 14:49:04'),(331,12,80,0,'2016-09-11 11:02:10'),(347,12,86,0,'2016-11-05 19:35:57'),(356,11,28,0,'2017-04-12 20:57:11'),(358,11,90,0,'2017-05-14 15:23:24'),(359,11,89,0,'2017-05-14 15:24:50'),(360,11,88,0,'2017-05-14 15:26:40'),(361,12,84,0,'2017-05-14 15:40:44'),(362,12,87,0,'2017-05-14 15:41:18'),(363,12,82,0,'2017-05-14 15:41:44'),(365,12,81,0,'2017-05-14 18:56:07'),(366,12,78,0,'2017-05-14 18:56:19'),(367,12,77,0,'2017-05-14 18:56:43'),(368,12,76,0,'2017-05-14 18:56:59'),(369,12,79,0,'2017-05-14 19:59:37'),(370,11,85,0,'2017-05-14 20:02:45'),(371,12,75,0,'2017-05-14 20:04:53'),(372,12,57,0,'2017-05-14 20:05:19'),(373,11,30,0,'2017-05-15 01:24:58'),(376,12,15,0,'2017-05-15 01:28:32'),(377,11,17,0,'2017-05-15 01:30:36'),(378,11,21,0,'2017-05-15 01:33:46'),(379,11,25,0,'2017-05-15 01:38:15'),(380,11,41,0,'2017-05-15 01:43:09'),(382,11,42,0,'2017-05-16 00:09:05'),(387,11,91,0,'2017-05-18 19:58:02'),(390,11,32,0,'2017-06-05 00:11:29'),(393,11,40,0,'2017-06-14 10:14:43'),(395,11,34,0,'2017-06-14 10:28:14'),(397,11,16,0,'2017-06-14 10:34:11'),(398,12,18,0,'2017-06-14 10:35:54'),(399,12,19,0,'2017-06-14 10:36:56'),(400,11,22,0,'2017-06-14 10:40:34'),(401,11,36,0,'2017-06-14 10:44:22'),(402,11,43,0,'2017-06-14 10:49:58'),(403,11,33,0,'2017-06-14 14:00:12'),(410,11,93,0,'2017-07-04 14:07:05'),(411,11,94,0,'2017-07-04 14:18:18'),(412,11,95,0,'2017-07-11 14:32:41'),(413,11,92,0,'2017-07-11 14:54:27'),(415,11,96,0,'2017-07-12 11:41:59'),(416,11,98,0,'2017-07-12 12:29:34'),(418,11,99,0,'2017-07-12 16:18:42'),(421,11,100,0,'2017-07-12 18:27:12'),(424,18,101,0,'2017-07-13 11:28:19'),(426,11,102,0,'2017-07-13 12:27:37'),(434,11,103,0,'2017-07-13 19:05:41'),(436,11,104,0,'2017-07-13 19:21:30'),(437,17,83,0,'2017-07-14 10:38:26'),(473,18,107,0,'2017-07-23 23:48:56'),(481,11,105,0,'2017-07-24 17:19:50'),(488,12,14,0,'2017-07-25 13:06:30'),(495,11,108,0,'2017-07-25 22:17:27'),(499,11,109,0,'2017-07-25 23:24:30'),(501,11,110,0,'2017-07-26 00:08:39'),(504,18,111,0,'2017-07-27 07:44:14'),(505,11,112,0,'2017-07-28 01:52:41'),(507,18,113,0,'2017-07-28 03:59:51'),(508,11,114,0,'2017-07-28 04:01:54'),(510,11,115,0,'2017-07-28 18:30:31'),(513,11,26,0,'2017-07-28 18:59:07'),(514,11,24,0,'2017-07-28 18:59:17'),(515,11,116,0,'2017-07-28 19:42:11'),(516,11,106,0,'2017-07-28 20:00:38');
/*!40000 ALTER TABLE `tb_tag_post` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_user`
--

DROP TABLE IF EXISTS `tb_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_user` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户id',
  `username` varchar(15) CHARACTER SET utf8 NOT NULL DEFAULT '' COMMENT '用户名',
  `password` varchar(32) CHARACTER SET utf8 NOT NULL DEFAULT '' COMMENT '密码',
  `email` varchar(50) CHARACTER SET utf8 NOT NULL DEFAULT '' COMMENT '邮箱',
  `logincount` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT '登录次数',
  `lastip` varchar(15) CHARACTER SET utf8 NOT NULL DEFAULT '0' COMMENT '最后登录ip',
  `lastlogin` datetime DEFAULT NULL COMMENT '最后登录时间',
  `authkey` char(10) CHARACTER SET utf8 NOT NULL DEFAULT '' COMMENT '登录key',
  `active` tinyint(3) NOT NULL DEFAULT '0' COMMENT '是否激活',
  `avatarurl` varchar(128) CHARACTER SET utf8 DEFAULT NULL,
  `follow_count` int(10) unsigned DEFAULT '0' COMMENT '粉丝数量',
  `post_count` int(10) unsigned DEFAULT '0' COMMENT '文章数量',
  `qq_openid` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT 'qq openid',
  `qq_accesstoken` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT 'qq accessToken',
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_user`
--

LOCK TABLES `tb_user` WRITE;
/*!40000 ALTER TABLE `tb_user` DISABLE KEYS */;
INSERT INTO `tb_user` VALUES (1,'Liberalman','e10adc3949ba59abbe56e057f20f883e','zscchina@163.com',251,'172.17.0.6','2017-07-28 23:07:29','',1,'/static/upload/smallpic/20151008/1444238136469360800.jpg',0,86,'DBB544A169BFC1BA351FEC12ACDE51F3','7CECDDE66B653E9B715356050F1E4748'),(2,'周强','e10adc3949ba59abbe56e057f20f883e','875223415@qq.com',33,'127.0.0.1','2017-05-27 00:15:29','',1,'/static/upload/smallpic/20151008/1444238136459112184.jpg',0,1,'',''),(3,'新月','','',1,'111.20.18.68','2016-08-16 16:40:39','',1,'http://q.qlogo.cn/qqapp/101345272/C24773F25D170036BADA08641F11F383/100',0,0,'C24773F25D170036BADA08641F11F383','A96EDBE5E8EEAC0187BC0B7F90D48FBF'),(4,'艾袍','20f42ec057fdce65dbff602dfd9d12ed','838198001@qq.com',2,'127.0.0.1','2017-07-21 14:20:13','',1,'',0,0,'','');
/*!40000 ALTER TABLE `tb_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Final view structure for view `tb_article`
--

/*!50001 DROP TABLE IF EXISTS `tb_article`*/;
/*!50001 DROP VIEW IF EXISTS `tb_article`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`socho`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `tb_article` AS select `tb_user`.`username` AS `username`,`tb_post`.`id` AS `id`,`tb_post`.`userid` AS `userid`,`tb_post`.`title` AS `title`,`tb_post`.`digest` AS `digest`,`tb_post`.`color` AS `color`,`tb_post`.`urlname` AS `urlname`,`tb_post`.`urltype` AS `urltype`,`tb_post`.`content` AS `content`,`tb_post`.`tags` AS `tags`,`tb_post`.`views` AS `views`,`tb_post`.`status` AS `status`,`tb_post`.`posttime` AS `posttime`,`tb_post`.`updated` AS `updated`,`tb_post`.`istop` AS `istop`,`tb_post`.`coverurl` AS `coverurl`,`tb_post`.`pubtype` AS `pubtype`,`tb_post`.`reprinturl` AS `reprinturl`,`tb_user`.`avatarurl` AS `avatarurl` from (`tb_user` join `tb_post`) where (`tb_user`.`id` = `tb_post`.`userid`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-07-29  4:00:01
